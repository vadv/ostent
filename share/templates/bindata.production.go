// +build production

package templates

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
	"os"
	"time"
	"io/ioutil"
	"path"
	"path/filepath"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindata_file_info struct {
	name string
	size int64
	mode os.FileMode
	modTime time.Time
}

func (fi bindata_file_info) Name() string {
	return fi.name
}
func (fi bindata_file_info) Size() int64 {
	return fi.size
}
func (fi bindata_file_info) Mode() os.FileMode {
	return fi.mode
}
func (fi bindata_file_info) ModTime() time.Time {
	return fi.modTime
}
func (fi bindata_file_info) IsDir() bool {
	return false
}
func (fi bindata_file_info) Sys() interface{} {
	return nil
}

var _defines_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x5a\x5b\x6f\xdb\x36\x14\x7e\xef\xaf\x20\x84\x74\x58\x81\x46\xc1\x86\xee\xa5\x73\x04\xb8\xb1\xd3\x0a\x8d\x13\xc3\x97\x00\x7b\x2a\x14\x8b\x8e\xb9\xc8\x92\x46\x51\xe9\xbc\xc0\xff\x7d\x24\x25\x4a\xd4\xcd\xa2\x28\x65\xd8\x43\xf3\x12\x8b\xfc\x78\x6e\x3c\xdf\x11\x2f\x7a\x79\x71\xe1\x16\xf9\x10\x18\xc9\xff\xe8\xe3\xc7\xe4\xc7\xb7\x4d\x18\xe3\xe0\x7b\x64\x1c\x8f\x2f\x2f\x04\xee\x43\xcf\x21\x14\x15\xed\x1c\x0c\x2f\x9c\xfd\x03\xc4\xa6\x68\x8d\x2e\x9a\xc6\x02\x93\x8d\x86\xbe\x7b\x3c\xbe\x39\xa9\x89\x38\x0f\x1e\xd4\x55\x95\x0c\x56\xd3\xe5\x6e\x1f\x0e\x54\xcc\x37\x6d\xd7\x0a\x02\xba\xe9\xd4\x77\xb2\x28\x41\x55\x2b\xf2\x03\xb7\x9f\xab\xb2\x84\x8e\x5a\xfb\x38\x5b\x10\xa1\xa6\x17\xf5\x9d\x57\xd4\x7d\x5e\x51\xef\x79\x45\x1a\xf3\x8a\xb6\x10\xe3\x00\xf7\x72\x55\x96\xd0\x51\x6b\x1f\x67\x0b\x22\x54\xf5\x86\xce\xe6\x09\x92\x5e\xee\x16\x44\x74\xd5\xdb\xc7\xe1\xa2\x0c\x35\xcd\x7b\xb8\xd7\x76\x55\x8c\x55\xd6\xa4\xef\x5c\x36\x58\x4d\x57\x18\x69\x3b\x95\x0e\x55\xd5\xa3\xef\x92\x18\xab\xa6\x89\x04\x81\x47\x50\xa8\xad\x4d\x1e\xaf\xa6\x31\x8e\x60\x08\xf1\x06\xfa\x44\x4b\xa1\x34\x5c\x4d\xdf\xf3\x23\x27\xac\x96\x32\x31\x56\x55\x93\x76\x76\xa4\x43\x55\xf5\x44\xdf\x11\xd9\xec\x34\x35\xa5\x83\x55\x75\xe9\x67\xa2\x18\xdb\xa2\x09\xc3\x2d\x86\x51\x47\x6f\xc4\xa0\x7a\xd9\xdd\xd6\x77\x4c\x02\x8d\xc9\x0e\x98\x77\xf7\xd3\xc5\xc2\x9e\x4c\x59\x4b\x22\xd8\x8b\x20\xfb\x7f\x76\x05\x3e\x5e\x82\x00\x03\xf3\xea\x66\xbc\x5c\xde\x8e\x67\x53\x60\x6c\x3c\x27\x4a\x46\x63\xc7\x7f\x84\xe0\x0c\xbd\x07\x67\x9b\x00\x43\x86\x35\x27\x0e\x71\xcc\xab\xf9\xda\xbc\x41\x11\x39\x1e\x47\x04\x83\x27\x78\xb8\xa4\xb2\x18\xc4\xbc\x3d\x1e\xad\x11\x71\x01\x17\x72\x69\x10\xf8\x37\x39\xc7\xe8\x71\x47\x80\x1f\x7c\xc7\x4e\x68\x58\x12\x72\x74\x41\xdc\x7a\xb4\x61\x8d\xa2\xd0\xf1\x01\x33\xf1\x78\xcc\xa4\xaf\x23\x88\xaf\x18\x96\x6a\x91\xdb\x98\x28\x86\xb7\x3a\x4b\x5c\x1e\xa2\x54\x20\xb0\xa4\x36\x7d\x81\xb6\xeb\xc1\xb2\x89\xac\xad\x24\xf1\x82\x60\x2b\x9d\xe0\xe2\x3f\x9d\xe9\x16\xb9\x3c\xe2\x3f\x32\x53\xd9\xc3\x2f\x20\x22\x18\x85\xf0\x3c\xc1\x50\x57\x76\xd0\x61\x1e\x61\xf6\x93\xd9\xb1\x63\x3f\x4e\xcc\x17\x8b\x6f\xe2\x69\x8a\x89\x7d\x44\x9d\x7f\x9b\xbb\xd3\x26\x81\xc6\xb3\x9f\x00\x16\xbf\x56\x09\x2c\xa2\xec\x57\xe2\xde\x43\xe0\x1e\x2c\x99\x78\xa7\x76\x41\x74\x18\xc7\xd3\xff\x2c\x4a\x96\xee\x54\x54\xf6\x2f\x83\xd0\xcf\x45\xd1\x53\x4e\xbd\xc9\x35\xd7\x51\xa5\x1f\x83\x99\x13\x84\x6f\x9d\x3d\xfc\x0a\x0f\x45\x1e\x4a\xe4\x4b\x71\xd1\x13\x03\x7e\x59\xcd\x6e\xaa\x3c\xac\xa2\x71\x33\x58\x66\x84\x18\x30\x7e\x76\x90\xa7\x06\xa5\xe9\x45\x43\xfd\x93\xff\x10\x85\xbf\x8f\xa2\x38\xac\xb0\x4a\xa0\xe6\xc9\xeb\x51\xe2\x56\xa9\xe7\x78\xcc\x13\x82\x0b\x52\xd0\xbe\x0a\x88\x93\x19\x3a\x1c\x27\xab\x9b\xca\x93\x53\xdd\x8d\xb7\x69\x5a\x9d\xdd\xe4\x49\x71\x83\xfc\x27\x56\xb3\x72\x16\x31\x34\xc4\x86\x05\xf2\xbf\x91\x03\x76\xf4\xfd\xc2\x62\x7a\x43\xd3\xe8\x7a\x69\x7e\xa1\x8f\xb4\xf0\xd1\xbf\x3c\xdc\x69\x97\x28\x8a\x00\x58\x13\xf8\x8c\x36\x29\xff\x6a\x80\x34\x1e\x44\x42\x67\x53\xe0\x54\x98\xdd\x6e\xd3\x6c\xde\x68\x13\xed\x92\xb4\xcc\x82\xd8\x27\xd0\x2d\xe7\x8a\x00\x76\xb5\x09\x14\xca\x7a\xd1\xa6\xf1\xfd\xd8\xbe\x11\x66\x15\x55\x25\x5d\x22\x23\x79\xd2\xa7\x61\xaa\x07\x4a\x66\xf5\xb3\x69\xbd\x9c\x4e\xb2\x48\x15\x55\xf1\xae\xec\x95\xc6\xd8\x25\x4c\xaa\x05\xca\x91\xea\x67\xd3\xea\x6e\x35\x6e\x88\x53\xd2\x25\x3c\xe7\x9c\xab\x8f\x53\x0a\x3c\x15\xa7\x94\x92\x5d\xcb\x7d\xe5\x64\x68\xb8\x9a\x5f\x3e\xc9\x79\x95\xa2\x9f\x28\xf9\x7f\x57\x7d\x9b\xae\x5d\xa1\x22\x34\x56\x2a\xfb\x0c\xd6\x50\xf7\xa5\x2e\x9d\xc2\x6f\xf3\x78\xbe\x46\xe5\x2f\x1d\xb1\x75\x5e\x93\x95\xab\x65\x5a\x7e\x1b\x6a\xa9\x28\x84\xed\x74\x4d\xca\x53\x3b\x8e\x97\x8c\x76\x58\xc2\x62\x9d\x95\x57\xf5\xe4\x72\x28\x2e\x56\xce\x19\x5b\xa8\x28\xf6\x37\xdb\x9c\x69\x76\xd3\xf2\x0a\x6d\xcd\x02\xc7\xac\xbc\x4d\x89\x21\x14\x3b\x81\x1e\x71\x6c\x5f\x19\x7a\x17\x13\x15\xac\x9a\x44\x49\xd8\x70\xd9\x5e\x3e\x64\xed\xbe\x01\xb1\x69\xf6\xe2\xad\x53\x4d\xf0\xea\x36\x00\x10\x44\x3c\x78\x69\x7c\xb2\x57\x4b\x10\xd2\x74\x8c\xe0\x26\xf0\x5d\xba\x3d\xf0\x6b\x36\x07\x23\x64\x3d\x8c\x2e\x90\x15\x46\xca\xfb\x8c\x46\x05\x34\x76\xc3\x6a\x20\x8c\x3c\xe0\xd3\x1f\xab\xe9\x12\xec\x03\x37\xf6\x02\xf0\xe1\x73\xb3\x23\x9f\x98\x9a\xb7\x1f\x3e\x0f\xa5\xa7\xd1\x9f\x5a\x45\x1d\xe9\x5d\x39\xab\x1f\x8e\xdd\xe5\xb3\x75\x1d\x7a\x27\x32\x7e\xf0\x5b\xe7\x56\xe0\x3f\x22\x78\x91\xdb\x62\x8d\x50\xc9\x57\x0d\xde\x95\x48\x3d\xa4\xe8\x02\x8d\x1b\x05\xeb\x90\xb8\x48\x5c\x65\xd1\x9d\x69\x5b\xbe\x77\x1a\x8e\xb7\x95\x5b\x22\x1d\xe2\xa6\x42\x7e\x30\x57\xeb\x7a\xeb\x07\x75\xdb\xde\x92\xaf\x47\xe0\x8a\xfc\x57\xa5\x71\xe5\x3e\x75\x28\x1e\xcb\x77\x9f\x8a\x04\x7e\x0f\xce\xe8\xa8\x9c\xc5\xb3\xe9\xac\xca\x5f\x8a\x30\xbf\x22\x66\x92\x60\x6f\xde\xd2\xc2\x1e\x06\xbc\x56\xd9\x74\x32\x60\xe5\xa4\x31\x6f\x4f\x37\x92\xa2\x5c\x28\x6c\x22\xd9\xc0\x57\x3a\x3c\x94\x6e\x7e\x87\x3c\xd0\x37\x2c\x16\xa9\x53\xfd\x75\x3b\xbf\x61\xb6\x7c\xf2\xd5\xf7\x50\xe9\x28\x5d\x5a\xab\x65\x63\x88\x83\x4d\x9e\x8a\xf3\x25\x57\x5f\x4d\x47\x06\x33\xe7\xf6\xa4\xe9\x22\xcb\xb0\x40\x01\x75\x2a\x51\x32\xe4\x5a\x46\xca\x07\xa0\x39\x22\x82\xb8\xfd\x75\x95\xab\xc6\x28\xc0\x88\x1c\x14\xe1\xb7\x68\xd3\x42\x92\x0c\xba\x44\xff\xa8\x42\x17\x30\x42\x2e\x3f\x80\xa9\x85\x33\x4a\xb1\x33\x0a\x01\x5f\xa1\x7d\x8d\x64\x71\xec\x54\x88\x46\xf9\xe5\x3d\x1c\xbb\xe4\x6f\x10\xba\x1e\xca\xff\x3a\xc8\xa1\x7c\xe1\x18\xa5\x78\x02\x3e\x5f\xd2\x94\xaa\x3d\xd8\x4d\x7a\xb2\x93\x5a\xfa\x90\x1d\xeb\xd6\xe1\x7a\x1c\xeb\x96\x2d\x5a\x37\x5a\xb4\x96\x2d\x5a\x37\x5b\xb4\xee\x6e\x51\xe1\x92\xa0\x62\xd1\x72\xba\xa8\x3b\x68\x4e\x7b\xc4\x49\x21\x7b\xa8\x3d\xfb\x16\x38\xfd\xe3\xf8\xca\xac\x2d\xec\xa6\x59\xa3\x3d\xf9\xac\xe5\xf6\xd4\xe2\x06\x9c\xb5\x5b\xfb\x6a\x5a\x1f\x23\xde\x23\xdc\xbe\xb5\x1b\x2d\x4a\x70\xc3\xc5\xe8\xde\x5e\xac\xea\x2d\xe2\x3d\x42\x09\x7b\x68\x98\xb5\x04\x37\x9c\x45\x8b\xe9\xb2\x61\xd6\x58\x4f\x36\x11\xf4\xa1\x29\xb3\x39\x4e\x67\xd6\x44\x69\x2c\x59\xb4\xb2\x67\x0d\xb3\xc6\x7b\xb2\x1b\x14\xfa\xd0\x10\xa3\x04\xd7\x29\x46\x27\xb9\xc6\x6a\x62\x43\x1e\x8d\x25\x8b\xae\xee\x66\xb3\xf1\xed\xa4\x7a\x1f\x27\x70\xaf\x70\xa5\x23\x7d\x7a\x36\xd4\x9a\xa2\xf8\xd9\xd8\x28\x31\x53\x5e\xa3\x17\xbe\x0b\x73\x69\x95\x3f\xa7\x3b\x12\x42\x27\xf3\xd2\xb8\x8e\x3d\x2f\x6d\xa3\xd2\x37\x70\xcf\x5b\x9d\x98\x04\xc0\x83\x5b\xbe\x6a\x34\x97\xbb\x00\x93\xfc\x4b\x90\x06\xc9\x6e\x40\x22\xc0\x77\x03\x5d\x55\x98\xa6\xf9\xe6\x4d\x7e\x17\xc2\xfe\xe9\x86\xa2\xf4\x3d\xdb\xe9\x57\xa5\x3c\xed\x06\xf5\x33\x9d\x69\xee\xf3\xbd\xe3\xc5\x30\xbf\xa2\xd1\xb5\x27\xff\xde\x4d\xac\xd5\x0c\xd1\x94\xac\x26\x02\x8f\xc9\xbf\x34\x7e\xe3\x5a\xf9\x1b\xf8\xde\x79\xa4\x6b\x3f\x32\x65\xa8\x9a\x95\x84\x86\x0d\xd9\x92\x33\x5d\x53\xee\x9d\xcd\x2e\x7f\xe3\xa7\xfa\x66\xb4\x91\x8d\xab\xd9\xea\xd0\x1e\x73\xbd\x16\x8b\x4b\x2b\x5f\x03\x66\x3d\xc5\x35\x60\x19\xc1\xd6\x45\xcd\xbd\x73\x1c\x3c\xd3\x05\x19\x6e\x46\xd0\x45\x2f\x69\xbf\xfe\xe3\xd0\xd4\x99\x2d\xf2\x28\xd5\x1c\xb2\x3b\xbd\x1c\xd3\x88\xa5\xf4\xb5\x5f\xcb\x02\x1e\x6d\x01\xfc\x0b\x18\x04\xc7\x94\x75\x3f\xff\x19\x05\x3e\xa8\x4e\xb0\xfb\xae\xf8\xa5\x5d\xcb\x47\x8f\xa9\xe8\x53\xf8\xf2\xb7\x8b\xbd\x3d\x2e\x6d\xeb\x90\xcb\x72\x38\xfd\x98\xb0\xc3\x1e\x0f\x65\xbb\x34\xcb\xa7\xf9\x90\x3d\x84\xe9\xf4\x67\x0d\x11\x9b\xed\xec\xc9\x45\x18\x6e\x48\x80\x0f\x5a\x5b\xb8\xc2\x07\x96\xbd\xeb\x6d\xfe\x71\xe4\xc8\x45\xcf\xc2\x79\xe4\x87\x31\x39\xa7\x71\x8f\x43\x20\xfd\x3e\x8f\xf6\x20\x1d\x90\x34\x18\xc5\xd2\x29\x43\x1d\xd7\x0d\x7c\xc3\x5a\x24\x70\x51\x0a\x39\x42\xc0\xb7\x01\xde\xf3\x9a\x8a\x03\x2f\x93\xcb\x11\x06\x20\x87\x10\x26\xbb\x17\x03\xf0\x12\xbb\x0b\x3c\x1a\x51\x5e\xd4\x26\x70\xeb\xc4\x1e\x49\x13\x92\x3a\x29\x32\x31\x69\x7f\x27\x9e\xe7\x90\xee\xcd\x58\x36\x1a\xe0\x99\xd5\x3e\x3e\x38\x69\xcc\x92\x87\x7a\x70\x41\x1d\xcf\x02\xf7\x6f\x00\x00\x00\xff\xff\x99\xd5\xb3\xe0\xea\x33\x00\x00")

func defines_html_bytes() ([]byte, error) {
	return bindata_read(
		_defines_html,
		"defines.html",
	)
}

func defines_html() (*asset, error) {
	bytes, err := defines_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "defines.html", size: 13290, mode: os.FileMode(384), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _index_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x5c\x7b\x8f\xdb\xb6\xb2\xff\x3f\x9f\x82\x57\x49\x8b\x5b\xa0\x96\x91\xdc\x5e\x9c\x22\xf5\x0a\x70\xd6\xde\xc4\xe8\x3e\x8c\xb5\x9d\x73\xfa\x57\x21\x4b\xb4\xcd\xac\x2c\xa9\x12\xe5\xcd\x36\xf0\x77\x3f\xc3\x97\x44\xbd\x6c\x59\xd6\xb6\xa7\xa7\x29\xd0\xd8\x22\x87\x33\xc3\x99\xf9\x0d\x87\x14\xd7\x5f\xbe\xb8\x78\x45\x7c\x8c\x0c\xf1\x19\xbf\x7d\x2b\xbe\xfc\xea\x84\x49\x14\x3c\xc6\xc6\x7e\xff\xe5\x0b\xc5\xdb\xd0\xb3\x29\x50\xc5\x1b\x3b\xc2\x7d\x7b\xbb\xc4\x91\xa9\x5a\xe3\x7e\xdd\x58\x64\xb2\xd1\xd8\x77\xf7\xfb\x17\x07\x25\x51\x7b\xe9\xe1\xb6\xa2\xc4\xe0\x66\xb2\xdc\xd5\xf2\x09\xd8\xfc\xda\x7a\x6a\x39\x06\xa7\xc9\x6c\x3f\xc9\x3c\x87\xa6\x52\x89\x1f\xb8\xe7\x4d\x55\xe7\x70\xa2\xd4\x73\x26\x9b\x63\xd1\x4c\x2e\x39\xd7\xaf\xe4\x74\xbf\x92\xb3\xfd\x4a\x5a\xf8\x95\xac\x70\x14\x05\xd1\x59\x53\xd5\x39\x9c\x28\xf5\x9c\xc9\xe6\x58\x34\x95\x1b\xda\xce\x03\xa6\x67\x4d\x37\xc7\xe2\x54\xb9\xe7\x4c\x38\xcf\xa3\x99\xe4\x2d\xde\xb6\x9e\xaa\x1a\xdb\x58\x52\xfb\xc9\xa5\x83\x9b\xc9\x0a\xe3\xd6\x93\x92\x43\x9b\xca\x69\x3f\x25\x35\xb6\x99\x24\x1a\x04\x1e\x25\x61\x6b\x69\xfa\xf8\x66\x12\x93\x18\x87\x38\x72\xb0\x4f\x5b\x09\xd4\x86\x37\x93\xb7\x5b\x73\xc0\xb6\x12\xa6\xc6\x36\x95\xd4\x3a\x3a\xe4\xd0\xa6\x72\xe2\x47\x42\x9d\x4d\x4b\x49\x72\x70\x53\x59\xed\x23\x51\x8d\x3d\x22\x29\xc2\xab\x08\xc7\x27\xce\x46\x0d\xaa\xe6\x7d\x5a\x7d\xc7\x38\x80\x4d\x36\xc8\xbc\xfb\x38\xbe\xbf\x9f\x8c\xc6\xac\x45\x30\xf6\x62\xcc\x3e\x5f\x5d\xa2\xb7\x17\x28\x88\x90\x79\x79\x3d\x9c\xcd\x6e\x87\x37\x63\x64\x38\x9e\x1d\x8b\xd1\x91\xed\xaf\x31\x7a\x45\xbe\x47\xaf\x9c\x20\xc2\x8c\xd6\x1c\xd9\xd4\x36\x2f\xa7\x0b\xf3\x9a\xc4\x74\xbf\x1f\xd0\x08\x3d\xe0\xa7\x0b\xe0\xc5\x48\xcc\xdb\xfd\xde\x1a\x50\x17\x71\x26\x17\x06\xc5\x9f\x69\x2f\x22\xeb\x0d\x45\x7e\xf0\x18\xd9\xa1\x61\x69\x94\x83\x3e\x75\xab\xa9\x0d\x6b\x10\x87\xb6\x8f\x98\x8a\xfb\x7d\xca\x7d\x11\xe3\xe8\x92\xd1\x82\x14\xbd\x8d\xb1\x62\xf4\xd6\xc9\x1c\x67\x4f\xb1\x64\x88\x2c\xad\xad\x3d\xc3\x89\xeb\xe1\xa2\x8a\xac\xad\xc0\xb1\x4f\x23\x4b\x3a\x38\xff\xd1\xc6\xdd\x2a\x96\x07\xfc\x4b\xaa\x2a\x7b\x78\x8d\x62\x1a\x91\x10\xf7\x04\x0d\x4c\x65\x83\x6d\x36\xa3\x88\x7d\x65\x7a\x6c\xd8\x97\x03\xfe\x62\xf6\x15\x33\x95\x34\x89\x4f\x60\xf2\xdf\x64\xd3\x39\xc6\x01\xec\x79\x1e\x03\x66\xbf\xa3\x1c\x98\x45\xd9\x37\x31\xbd\x65\xe0\x3e\x59\x3a\xf0\x0e\xed\x82\x60\x18\xa7\x87\x4f\x66\x25\xab\xad\x2b\x4a\xfb\x97\x4e\xe0\xe7\x92\xf8\x21\x83\xde\xe8\x8a\xcb\x28\xc3\x8f\x91\x99\x23\x12\xdd\xda\x5b\xfc\x33\x7e\xca\xe3\x50\x03\x9f\xa4\x8b\x1f\x18\xe1\x87\xf9\xcd\x75\x19\x87\x65\xea\xa8\x9e\x58\x47\x84\x1a\x30\xdc\xd9\xc4\x6b\x46\x0a\xe1\x05\xa6\xfe\xd6\x5f\xc6\xe1\x4f\x83\x38\x09\x4b\xa8\x52\x54\x53\xb1\x3c\x6a\xd8\x2a\xf4\xec\xf7\x59\x40\x70\x46\x0d\xa4\xcf\x03\x6a\xa7\x8a\x76\x87\xc9\xf2\xa6\xf2\xa0\xab\x4f\xc3\xad\x0c\xab\x57\xd7\x59\x50\x5c\x13\xff\x81\xe5\xac\x0c\x45\x8c\x1a\x47\x86\x85\xb2\xff\x06\x36\xda\xc0\xfa\xc2\x6c\x7a\x0d\x61\x74\x35\x33\x3f\xc0\x23\x24\x3e\xf8\x2f\x33\xb7\xec\x52\x49\x11\x21\x6b\x84\x77\xc4\x91\xf8\xab\x20\x04\x7b\x50\x8d\x3a\x75\x81\x5d\x42\xf6\x71\x9d\x6e\xa6\xb5\x3a\x41\x97\x26\xe5\x26\x48\x7c\x8a\xdd\x62\xac\x28\xc2\x53\x75\x42\xb9\xb4\x9e\xd7\x69\xf8\x71\x38\xb9\x56\x6a\xe5\x45\x89\x2e\x15\x91\x3c\xe8\xa5\x99\xaa\x09\x35\xb5\xce\xd3\x69\x31\x1b\x8f\x52\x4b\xe5\x45\xf1\xae\x74\x49\x63\xe8\x52\x2a\x55\x12\xea\x96\x3a\x4f\xa7\xf9\xdd\x7c\x58\x63\x27\xd1\xa5\x66\xce\x31\x57\x6d\x27\x49\x78\xc8\x4e\x12\x92\xa7\xa6\xfb\xd2\xc9\x50\x77\x39\xbf\x78\x92\xf3\x2c\x49\x5f\x08\xf9\xcf\xce\xfa\x13\xa8\x5d\x71\x43\xd2\xa4\x51\xda\x67\x64\x35\x79\x5f\xeb\x6a\x93\xf8\x27\xdc\x9e\xcf\x91\xf9\x0b\x47\x6c\x27\xd7\x64\xc5\x6c\x29\xd3\x6f\x4d\x2e\x55\x89\xf0\x38\x5c\x45\x7a\x3a\x4e\xc7\x53\xc6\x71\x32\x81\xe2\x36\x95\x57\xf9\xe4\xb2\x2b\x2c\x96\xce\x19\x8f\x40\x51\xed\x6f\x56\x19\xd2\x26\x75\xe5\x15\x59\x99\x39\x8c\x59\x59\x5b\x23\x84\x00\xed\x08\x7b\xd4\x9e\xf8\x8d\x49\xef\x12\xda\x84\xb6\x19\x47\x8d\x59\x77\xd1\x5e\x3c\x64\x3d\x7d\x03\x32\x81\xe8\x8d\x56\x76\x39\xc0\xcb\xdb\x00\x44\x09\xf5\xf0\x85\xf1\x6e\x32\x9f\xa1\x10\xc2\x31\xc6\x4e\xe0\xbb\xb0\x3d\xf0\x2b\x36\x07\x03\x62\x2d\x07\x7d\x62\x85\x71\xe3\x7d\x46\xad\x00\xb0\x5d\xb7\x12\x28\x03\x0f\x7a\xf7\xcb\x7c\x3c\x43\xdb\xc0\x4d\xbc\x00\xfd\xf0\xbe\x7e\x22\xef\x98\x98\x6f\x7e\x78\xdf\x95\x9c\xda\xf9\x54\x0a\x3a\x11\xde\xa5\xb3\xfa\xee\xd0\x5d\x3c\x5b\x6f\x03\x6f\xc1\xe3\x2b\xbe\xdb\xbc\x15\xf8\x83\x00\x9e\xc7\xb6\xaa\x11\x4a\xf1\xda\x02\x77\x05\x50\x77\xc9\x3a\x07\xe3\x5a\xc6\x6d\x40\x9c\x07\x6e\x63\xd6\x27\xc3\xb6\xf8\xde\xa9\x3b\xdc\x96\xde\x12\xb5\x01\xae\x64\xf2\x15\xb9\xad\x5e\x6f\x7d\x85\xee\xb1\x55\xf2\xf9\x00\x5c\xe2\xff\xac\x30\x2e\xbd\x4f\xed\x0a\xc7\xfa\xbb\xcf\x86\x00\xfe\x1e\xbd\x82\x51\x19\x8a\x6f\xc6\x37\x65\xfc\x02\x85\xf9\x33\x61\x2a\x29\xf4\x66\x2d\x47\xd0\xc3\x08\xaf\x9a\x6c\x3a\x19\x61\xe9\xa4\x31\x6b\x97\x1b\x49\x95\x2e\x1a\x6c\x22\xd9\xc0\x67\x3a\x3c\xd4\xde\xfc\x76\x79\xa0\x6f\x58\xcc\x52\x87\xfa\xab\x76\x7e\xdd\x6c\xf9\xf4\x57\xdf\x5d\x85\xa3\xf6\xd2\xba\x59\x34\x86\x51\xe0\x64\xa1\x38\x9d\x71\xf1\xe5\x70\x64\x64\xe6\x74\x32\xaa\x7b\x91\x65\x58\x28\x47\x75\x28\x50\x52\xca\x85\x4e\xa9\x1f\x80\x66\x14\x31\x8e\x8e\x2f\x57\x99\xe8\x88\x04\x11\xa1\x4f\x0d\xc9\x6f\x89\x73\x04\x24\x29\xe9\x8c\xfc\xde\x94\xf4\x1e\xc7\xc4\xe5\x07\x30\x95\xe4\x0c\x52\xec\x8c\x42\x91\xcf\xc9\xb6\x82\xb3\x3a\x76\xca\x59\xa3\xb8\x78\x77\x87\x2e\xfd\x0e\xc2\xa9\x87\xf2\x6f\x3a\x39\x94\xcf\x1d\xa3\xe4\x4f\xc0\xa7\x33\x08\xa9\xca\x83\x5d\xd1\x93\x9e\xd4\xc2\x43\x7a\xac\x5b\x45\x77\xc6\xb1\x6e\x51\xa3\x45\xad\x46\x0b\x5d\xa3\x45\xbd\x46\x8b\xd3\x35\xca\xbd\x24\x28\x69\x34\x1b\xdf\x57\x1d\x34\xcb\x1e\x75\x52\xc8\x1e\x2a\xcf\xbe\x15\x5d\xfb\xe3\xf8\x92\xd7\xee\x27\x75\x5e\x83\x9e\xcc\x6b\x99\x3e\x95\x74\x1d\x7a\xed\x76\x72\x39\xae\xb6\x11\xef\x51\xd3\xbe\x9d\xd4\x6a\x24\xe8\xba\xb3\xd1\xc7\xc9\xfd\xbc\x5a\x23\xde\xa3\x84\xb0\x87\x1a\xaf\x09\xba\xee\x34\xba\x1f\xcf\x6a\xbc\xc6\x7a\x52\x47\xc0\x43\x5d\x64\x73\xba\x36\x5e\x53\xa9\xb1\xa0\xd1\x7c\x72\x53\xe3\x35\xde\x93\xbe\x41\x81\x87\x1a\x1b\x09\xba\x93\x6c\x74\x10\x6b\x2c\x27\xd6\xc4\xd1\x50\xd3\xe8\xf2\xee\xe6\x66\x78\x3b\x2a\xbf\x8f\x53\x74\xcf\xf0\x4a\x47\xbb\x7a\xd6\x55\x4d\x91\xbf\x36\x36\x10\x6a\xea\x35\x7a\xee\x5e\x98\x0b\x59\xbe\x07\x3b\x12\x0a\xce\xbc\x30\xae\x12\xcf\x93\x6d\xc0\xdd\xc1\x5b\xde\x6a\x27\x34\x40\x1e\x5e\xf1\xaa\xd1\x9c\x6d\x82\x88\x66\x37\x41\x6a\x38\xbb\x01\x8d\x11\xdf\x0d\x9c\x2a\xc2\x34\xcd\x17\x2f\xb2\x77\x21\xec\xa3\xad\x29\x0a\xf7\xd9\x0e\x2f\x95\xba\xdb\x0d\x98\xa7\xf4\x34\x9f\xf3\x47\xdb\x4b\x70\xf6\x8a\xa6\xad\x3e\xd9\x7d\x37\x55\xab\x19\xaa\x49\x54\x13\x81\xc7\xf8\x5f\x18\xff\xcf\xa5\xf2\x15\xf8\xa3\xbd\x86\xda\x8f\x8e\x19\x55\x45\x25\xd1\x42\x87\xb4\xe4\x94\x35\xe5\xd6\x76\x36\xd9\x8a\x2f\xe5\xdd\x40\x23\x1b\x57\xb1\xd5\x81\x1e\x73\xb1\x50\xc5\xa5\x95\xd5\x80\x69\x4f\xbe\x06\x2c\x52\xb0\xba\xa8\xbe\x77\x1a\x05\x3b\x28\xc8\xa2\x7a\x0a\x28\x7a\xe9\xf1\xd7\x7f\x9c\x54\x4e\x66\x45\x3c\x80\x9a\x4d\x37\x87\xcb\xb1\x16\xb6\xd4\x6e\xfb\x1d\x29\xe0\xc9\x0a\xe1\xdf\x90\x41\xa3\x04\x50\xf7\xbf\x9f\xe2\xc0\x47\x65\x07\xbb\xdf\xe5\x6f\xda\x1d\xb9\xf4\x28\x59\x1f\xa2\x2f\xde\x5d\x3c\x7b\xc6\x85\x6d\x1d\x71\x59\x0c\xcb\xcb\x84\x27\xec\xf1\x48\xba\x4b\xb3\x7c\x88\x87\xf4\x21\x94\xee\x4f\x1b\x62\xe6\xed\xf4\xc9\x25\x11\x76\x68\x10\x3d\xb5\xda\xc2\xe5\x2e\x58\x9e\x9d\x6f\xb3\xcb\x91\x03\x97\xec\xd4\xe4\x89\x1f\x26\xb4\x07\x76\x4f\x42\xa4\x7d\xef\xc5\x5b\x24\x07\x88\x06\x23\x9f\x3a\x75\x52\xdb\x75\x03\xdf\xb0\xee\x05\xb9\x4a\x85\x9c\x42\x91\xaf\x82\x68\xcb\x73\x6a\x14\x78\x29\x5f\x4e\x61\x20\xfa\x14\x62\xb1\x7b\x31\x10\x4f\xb1\x9b\xc0\x03\x8b\xf2\xa4\x36\xc2\x2b\x3b\xf1\xa8\x0c\x48\x98\xa4\x8a\x44\xd1\xfe\x9d\x7a\x9e\x62\xd8\x9b\xb1\x68\x34\xd0\x8e\xe5\x3e\x3e\x58\x34\xa6\xc1\x03\x33\xe8\xc3\xc4\x53\xc3\x0d\xfe\x67\x74\x77\x39\xff\x65\x3a\x46\x1b\xba\xf5\xac\x81\xfc\x97\xfb\x66\x8b\xa9\x8d\x1c\xb0\x67\x8c\x21\xdb\x27\x74\xd5\xfb\xd1\x90\xad\x1b\x4a\xc3\x1e\xfe\x2d\x21\xbb\x0b\xe3\x5f\xbd\xc5\xb0\x77\x19\x6c\x01\xab\x44\x44\x94\x5a\x36\x26\xe3\x0b\xec\xae\xb1\x1a\xc4\x62\x06\x02\x8f\xe0\xc7\x10\x56\x23\x8d\xee\x91\xb8\x74\x73\xe1\xf2\xf7\xcd\x3d\xfe\xf0\x3d\xb8\x81\x50\x62\x7b\xbd\xd8\xb1\x3d\x7c\xf1\x9a\xc5\x22\x3b\xd4\x4a\x53\xec\x87\x20\xa6\x3e\x4f\x4a\x08\xbe\x01\x1b\x08\x09\x4e\x30\xf0\x60\xfb\x03\xe6\xf5\xc0\x3f\x20\x41\x99\x96\x6c\xed\x35\xee\x87\xfe\xda\x10\x65\x86\xd1\x5f\xd9\x3b\x46\x60\xb2\x36\x7d\x54\x4c\x9f\x3c\xf0\x0c\xc6\x39\xb7\xf4\x1d\x58\x71\xd4\x50\xf8\xde\x27\xbe\x8b\x3f\x9b\xac\x15\x82\xc2\x01\xd4\x50\x9d\xfa\x93\xbd\xb3\x45\xab\x51\x34\x21\x8a\x23\x07\x78\x7c\x8a\xfb\x3b\xf0\x41\x10\xf5\x23\x66\xc8\x08\x43\xc3\x1b\xf3\xb5\xf9\xfa\x1f\xaa\xc1\xdc\x12\xdf\xfc\x14\xcb\x85\x77\x6b\x13\x5f\x0c\xe3\x61\x60\x4e\xef\xef\x46\x8b\xcb\xf9\xe4\xee\x76\xbf\x07\x00\xba\x89\x43\x49\xe0\x4b\xb5\xc4\x48\x95\x6d\xc0\xb2\xd8\xeb\x6f\x89\xf7\x20\xbb\x79\x97\x0a\x07\xa1\x26\x7c\x11\x5e\x17\xf8\x62\xe0\x60\x69\xc2\xf1\x08\x5b\x89\x65\xd4\x0c\x7c\x3b\xc5\x0c\x7c\x5d\xda\x11\x12\x1f\x3d\x57\xc4\xa2\x7a\x5c\x91\xcf\xd8\xed\xd1\x20\x34\x10\x04\x3b\xe6\xd4\x64\x6d\x33\x0d\x0d\x4b\x47\x1e\x8b\x01\x98\x18\x86\x21\x5e\x42\xdc\x7c\xa7\x64\xa6\xaa\xc5\x8a\xae\x25\x64\x61\x97\x57\xb3\x4c\xd9\x8d\x8c\x89\xd4\x4f\xe5\x9a\x65\x19\x50\x1a\x6c\x65\x3b\x0d\xd6\x6b\x7e\xc4\x1b\x84\xc1\x0e\x24\xc8\x56\xa8\xda\xd7\x0c\x7a\x1b\xd6\x88\x56\x81\x93\xc4\x5a\x41\xc4\xb5\xbd\x30\x5e\xba\x84\xe5\xca\x65\x2f\x3f\x38\x8d\xe9\x28\xf1\x7d\xe2\xaf\x91\x8a\xd7\xd1\x64\x36\xbf\x9f\xbc\x93\xb5\x49\x21\x84\x45\x45\xca\x2d\xcc\xf3\x0b\x9b\x4c\x91\x7f\x56\xbd\x72\x3a\xe5\x20\x69\x08\xa8\x42\x3c\x3b\x8c\xb3\x7c\xae\x1a\x50\x91\x20\x1b\x9a\x84\x94\x6c\x71\x2f\x84\x84\xc9\x6e\xff\x17\x06\x1a\x96\xe8\xd7\x0f\x8c\xb3\x51\xd9\x2c\x16\xfc\x59\xbb\x65\xcc\xd5\x4b\x3c\xcd\x53\x4a\x07\xf8\xe0\x48\xe3\x7c\x48\x68\x14\x9c\xc9\xb3\x5f\xca\x77\x32\x65\x3c\x3d\x92\x0e\xf0\xec\xc3\x03\xae\x87\x6a\x40\x3f\xf1\xea\x35\x50\x5f\xd5\x65\x32\xe0\x5e\xc5\x55\x1b\xef\x81\x27\x20\x4f\x7b\x6c\x7d\x29\xcc\x24\xdd\x47\x19\x2f\x59\xb0\x5b\xec\x5f\xe1\x4c\xa1\xb8\xd6\x1f\x42\xa2\x78\xc9\x5e\x12\x54\xf6\xee\x20\x07\xbd\xdc\x89\xaa\x22\x23\xe1\x13\x51\x36\x90\xda\xd8\x80\xf3\x1d\xce\x76\x70\x06\xcb\xc5\xf1\xdb\x7e\xff\xf1\xf1\xd1\x84\x88\x8a\xe0\x7f\xd3\x09\xb6\x7d\x91\x16\x21\x99\x78\xd8\x8e\x61\x0d\xe4\x2b\x21\x4d\x5f\x0e\x40\x4c\xc5\x00\xc7\x34\x40\xa1\x06\x9a\xf1\x64\x62\x58\x77\xb3\xf9\xf8\x76\x5e\x54\x83\xfb\x35\x0b\xbe\x83\x00\x66\xfe\x82\xbc\x1d\xd1\x62\x74\x41\x69\x83\x0a\xa1\xa8\xe6\xc5\xc8\x91\x18\xe4\xb2\x22\x37\x52\x0f\x24\xde\x92\x38\x96\x15\xc9\x32\x01\x00\xa7\x2b\xb0\xe3\x05\x2c\xe6\x45\xe2\x15\x5d\x12\x88\x72\x94\xe4\x6b\x20\x3b\x22\x76\x6f\x43\x5c\x17\x43\x16\xe5\x05\x9d\xf5\x2d\x0b\xdc\xf8\xa7\x41\x5f\x0c\xd4\xb0\x27\x04\x43\x67\x6c\xb3\xe5\x6b\xc8\x1e\xf3\xf1\x9d\xfb\x17\xa2\x21\x9b\x36\x4f\x7a\xd5\xc6\x41\x21\x54\x09\x90\x14\x58\x62\x8c\x21\x27\xfb\xf4\x09\x4a\x91\x9c\x15\xc0\x3e\xf9\x86\xa5\x17\x38\x0f\xcc\x64\xbd\xad\xdb\x7b\xa3\xbe\x04\xab\x15\xac\x28\xbd\xd7\x79\x5a\xd0\x0f\x7b\xac\x4d\xee\xf8\x65\xb3\x1b\xd9\xeb\xb5\x34\x9f\x9d\xf2\xa5\xbe\x4c\xac\x3d\x2e\x22\x2d\x76\x57\xb6\x17\x17\xaa\xdd\x4b\xbe\x08\x98\x1f\xa0\xc6\x83\x19\xad\xc8\xfa\x66\x7c\x03\x65\x06\x12\xa1\xa8\x96\x12\x15\xca\x5b\xbc\x35\xac\x1b\xbc\xe5\x05\x9f\x2d\xd7\x15\x1c\x71\x4d\x33\x33\x01\x95\xe0\x55\x4a\x3c\x6d\x34\x21\x7e\xb6\xa0\xb1\x32\x2b\x3d\x68\x08\x22\xf2\x3b\x73\x82\xd7\xe3\xcd\x4b\x28\xd7\xd9\x8c\xf9\x2a\xc0\x9b\xf2\x16\xe4\x25\x9a\x28\xe8\x98\xaf\x70\x61\x41\x62\x46\x13\x55\x62\xfa\x0d\x6a\xc4\xc2\x6a\x22\xa2\x89\x95\x05\x9e\xbd\xc4\x9e\x36\x96\x8f\x52\x2b\x25\xc4\x22\xe1\x95\x87\xa8\x11\x45\x08\x3b\x1b\xec\x3c\x2c\x83\xcf\x86\xf5\x81\x87\x2a\xe0\x8f\xf1\x38\xcc\xaa\xa1\xc1\x66\xff\x1c\x4e\xeb\xbd\x06\xea\xe0\xf8\x91\xed\xc3\xea\x15\xc2\x88\x51\xb0\x8d\xbe\xd4\xaa\x26\x27\x54\x58\x51\x6d\xb5\x74\xa5\x64\xad\x0c\x2e\x3c\xf7\x4f\x95\x94\x22\x4c\x70\x59\x2b\x19\x6e\x6d\x03\xad\x22\xc4\xd2\x44\x01\x6c\xd5\x5e\xe9\xc8\x6b\xa8\xec\x4f\xb7\xea\x13\x49\x1d\xec\xff\xef\x4f\x82\xf9\xe4\xaa\x3e\x5e\xc8\x2a\x5b\x79\xe5\xc0\xb9\xbd\x9c\x5c\x99\x73\xb6\xbc\xa8\x92\xa6\x12\xfa\x64\xd5\x05\xf2\x85\x72\x0d\x81\xff\xf7\x40\xf9\xf8\x33\x84\x86\xcb\x42\x40\x18\x07\xd6\x40\x7e\xac\x57\xe5\xbb\x1a\x85\x0a\x2e\x15\x1c\x59\x45\x34\xb9\x82\xdd\x62\xc7\xc8\x67\x3c\xbb\x04\x7e\xa9\xe4\x63\xd8\x8c\x73\x35\x1e\x59\xf5\xd4\x71\x82\x70\xa7\xbd\x64\x21\x99\x16\x9d\x57\xf3\xe1\xbb\x99\x49\xae\xa6\xc3\xcb\x9f\xc7\xf3\x99\xb9\x20\xec\x2d\xa3\x56\x6d\xbd\x4c\x2f\x3a\x18\xd6\x54\x7c\xd1\x4b\xba\x53\xe5\x8c\xef\xef\xef\xee\xab\xc5\x88\x6b\x51\x86\xc5\x0f\x99\x0e\x0b\x91\x18\x3d\x22\x8b\x5f\xc7\xac\x14\xc5\x2f\x4e\x1a\xd6\x3b\xf6\x71\xa4\xec\x13\x00\x56\x26\xd0\x34\x01\xa9\xa8\x08\x64\x3d\x46\x2b\x4d\xfb\x5d\x55\x18\x8b\x3c\xc2\xbb\x73\x08\x97\xb3\x13\xe5\x6b\xad\xc7\x64\xfe\x39\xd5\xbf\x69\x4a\x4f\x27\xd7\x24\xb1\x57\xfd\x31\x7f\xf5\x3e\x2d\xf5\x67\x1b\x93\x69\x51\xd2\xa1\xc5\x24\xd7\x66\x06\x2b\x06\xaa\x66\x2f\x31\xb1\x66\xe6\x2a\xfd\xd8\x43\x9d\xb5\x44\x48\xb6\x31\x56\x16\xe6\x1d\xda\x4a\x30\x6d\x66\xaa\x02\xce\x34\x4b\xf1\x49\x35\x33\x54\xf1\x27\x40\x4e\xaf\x1a\xde\xfc\x49\x55\xc3\xe5\x74\x01\x96\xad\xae\x1a\x9c\x30\x31\x2c\x20\x28\x55\x07\xe2\xb0\x29\x4c\xba\xa8\x0c\x84\x02\x5f\xf7\x04\x8d\xab\x05\x69\xb0\xba\x72\x81\x3b\xed\xd4\x7a\x01\x78\x76\x5f\x30\x70\xa6\xdd\x6f\x15\xb4\xf8\x6b\x1b\x79\x15\x31\x97\xe2\x1e\xd8\x36\xc1\x7c\xee\x37\xab\xfe\x3a\x9b\x84\xd1\x55\x2d\xda\xdd\xca\x3d\xc2\xa8\xc9\x1e\xc1\xed\x64\x8f\x30\xfa\xba\x47\xa8\x47\xfd\xe8\xe0\x1e\xc1\x6d\xb1\x47\x18\x3d\xc3\x1e\x61\xf4\xc7\xef\x11\xdc\xc3\xb5\xfb\x48\xac\xf3\xee\xd5\xe4\xf6\x6e\x54\x59\x50\xab\x3f\x34\x64\x17\xba\xd9\x67\x55\xed\xee\x36\xaa\xdd\x53\x59\x75\xb5\xbb\x7b\x6a\xed\x9e\xea\xa6\x29\x72\xac\xb4\xaa\x9a\x71\x5d\x6d\x35\x6a\x5c\x5b\x15\xb9\x1e\x2c\xae\x6a\x8d\x9e\xbd\x2f\x91\x13\x6b\x92\x6a\x2b\x7e\x4c\xae\xba\x0e\x75\x0b\x75\xe8\x29\xc6\x3a\x5e\x87\xb6\xb0\x55\x83\x3a\xb4\x2e\x66\x34\x4b\x35\xae\x43\xcb\x3f\x31\x78\xe0\x18\xfc\x94\x17\x04\x8d\x8e\xbb\x7f\x2c\x1c\x77\x37\xab\x68\x6f\xef\xe6\xdd\xaf\x72\xd3\x59\xed\x2a\xc7\x5e\xec\x4c\xa3\xc0\xc1\x71\xac\x10\x58\x2c\x6c\xc3\xb8\x8b\xd5\x8c\xeb\x50\xbb\x9a\x89\x17\x54\x75\x25\x6d\xfe\x07\x14\x5a\x67\xe3\xe9\xac\xa3\x6c\xfc\x97\x5b\x69\x3d\x70\x2f\xaa\x5b\x6e\xcb\x17\x84\xa4\xd9\xa6\x33\x3f\xa0\x23\xec\x44\xd8\xe6\xcb\xec\xa1\x15\x37\x8c\x99\x8c\x5a\xe5\x7a\xd5\x7a\x6d\xd9\xef\x63\xb5\xd3\x2b\x2b\x05\x0e\xab\xc5\x44\x34\x2d\x06\xa6\xb3\xd0\x4b\xe2\x39\x04\x5b\x6d\x29\x50\x59\x7a\x87\x71\x5b\x6c\x94\x51\x91\x26\xba\xb0\x51\x8e\xd3\x7f\xe0\xef\x6f\x9a\xdd\x3e\xbe\xaf\xcd\x6e\xec\xc5\xb4\xbc\xed\x86\xd6\x5e\xb0\x64\x57\x72\xa8\x4d\x93\x9a\x4c\xb7\x5b\x77\x91\xe9\xb8\x3e\x7f\x6e\xa6\xfb\xf8\xfe\xbf\x3f\xd3\x9d\x02\xd0\x5d\x6b\x97\x96\x9d\x99\x02\x74\xb7\x6e\x02\x50\xfd\x77\x0f\x9b\x01\xf4\xe0\x7d\x2c\xeb\xc5\xce\x8e\x10\xd3\x12\x5d\xa8\xdb\x0f\xfb\xfd\x4f\x2f\xb4\x9b\x50\xf2\x8e\x21\xbf\x0c\xf7\xef\x00\x00\x00\xff\xff\x91\xa0\xfc\xdf\x0c\x5b\x00\x00")

func index_html_bytes() ([]byte, error) {
	return bindata_read(
		_index_html,
		"index.html",
	)
}

func index_html() (*asset, error) {
	bytes, err := index_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "index.html", size: 23308, mode: os.FileMode(384), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if (err != nil) {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"defines.html": defines_html,
	"index.html": index_html,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for name := range node.Children {
		rv = append(rv, name)
	}
	return rv, nil
}

type _bintree_t struct {
	Func func() (*asset, error)
	Children map[string]*_bintree_t
}
var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"defines.html": &_bintree_t{defines_html, map[string]*_bintree_t{
	}},
	"index.html": &_bintree_t{index_html, map[string]*_bintree_t{
	}},
}}

// Restore an asset under the given directory
func RestoreAsset(dir, name string) error {
        data, err := Asset(name)
        if err != nil {
                return err
        }
        info, err := AssetInfo(name)
        if err != nil {
                return err
        }
        err = os.MkdirAll(_filePath(dir, path.Dir(name)), os.FileMode(0755))
        if err != nil {
                return err
        }
        err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
        if err != nil {
                return err
        }
        err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
        if err != nil {
                return err
        }
        return nil
}

// Restore assets under the given directory recursively
func RestoreAssets(dir, name string) error {
        children, err := AssetDir(name)
        if err != nil { // File
                return RestoreAsset(dir, name)
        } else { // Dir
                for _, child := range children {
                        err = RestoreAssets(dir, path.Join(name, child))
                        if err != nil {
                                return err
                        }
                }
        }
        return nil
}

func _filePath(dir, name string) string {
        cannonicalName := strings.Replace(name, "\\", "/", -1)
        return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

