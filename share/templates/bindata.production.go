// +build production

package templates

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
	"os"
	"time"
	"io/ioutil"
	"path"
	"path/filepath"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindata_file_info struct {
	name string
	size int64
	mode os.FileMode
	modTime time.Time
}

func (fi bindata_file_info) Name() string {
	return fi.name
}
func (fi bindata_file_info) Size() int64 {
	return fi.size
}
func (fi bindata_file_info) Mode() os.FileMode {
	return fi.mode
}
func (fi bindata_file_info) ModTime() time.Time {
	return fi.modTime
}
func (fi bindata_file_info) IsDir() bool {
	return false
}
func (fi bindata_file_info) Sys() interface{} {
	return nil
}

var _defines_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x5a\x5f\x6f\xdb\x36\x10\x7f\xef\xa7\x20\x84\x74\x58\x81\x46\xc1\x86\xee\xa5\x73\x04\xb8\xb1\xd3\x0a\x8d\x93\xc0\x7f\x02\xec\xa9\x50\x2c\x3a\xe6\x22\x8b\x1a\x49\xb9\xf3\x02\x7f\xf7\xf1\x28\x51\x7f\x2c\xd1\x96\x64\x67\xd8\x43\xf3\x50\x8b\xe4\x4f\xc7\xe3\xdd\xfd\x8e\x47\xaa\x2f\x2f\x3e\x5e\x90\x10\x23\x2b\xf9\xe5\x1f\x3f\x26\x0f\xdf\xe6\x51\xcc\xe8\x77\x6e\x6d\xb7\x2f\x2f\xdf\x89\x58\x22\xfb\xee\x61\x38\x1e\xbb\x83\x21\xf4\xd8\xf0\x0f\x0e\x38\x86\xdf\xb3\x2b\xf4\xf1\x12\x51\x86\xec\xab\x9b\xfe\x64\x72\xdb\x1f\x0d\x91\x35\x0f\x3c\x9e\xbc\xcd\xbc\xf0\x09\xa3\x33\xf2\x1e\x9d\xcd\x29\xc3\x80\xb5\x07\x9e\xf0\xec\xab\xfb\x99\x7d\x43\xb8\xd8\x6e\x7b\x82\xa1\x67\xbc\xb9\x94\xb2\x00\x62\xdf\x6e\xb7\x4e\x4f\xf8\x48\x09\xb9\xb4\x04\xfe\x5b\x9c\x33\xf2\xb4\x14\x28\xa4\xdf\x99\x17\x59\x4e\x01\xd9\xbb\x10\x7e\x3d\xda\x72\x7a\x3c\xf2\x42\x04\x2a\x6e\xb7\x99\xf4\x19\xc7\xec\x0a\xb0\x72\x96\x62\x1f\x88\x02\xbc\xd3\x5a\xe2\x64\xc3\x53\x81\xc8\x29\xf4\x75\x17\xe8\xfa\x01\xde\x55\x11\xfa\x76\x24\x5e\x08\x26\x87\x71\xe8\x2b\x77\x14\x7e\xde\xec\x75\xac\xf0\x1e\x03\x6c\x81\xd9\xe1\x21\x53\x0a\x1a\xbf\x20\x2e\x18\x89\xf0\x79\x82\x91\x4a\x2f\xb1\x07\xba\x33\x78\x84\x19\x97\xf0\xb0\xc7\x33\x60\xc9\x64\x4d\x29\x26\x0e\x89\x5c\xe6\xdb\x5c\xf1\x43\x12\xa4\xe5\x8e\x13\x00\x96\x3a\x28\x01\x6c\x07\x4f\xc9\xf2\x1e\xa9\xbf\x91\xa6\x14\x78\x15\x05\x9e\xd8\xc3\x07\x64\xab\x88\x53\x78\xf9\x0b\x56\x72\x0e\x1b\xdd\x5f\x3c\x6e\x04\xe6\xdf\x4e\x4b\x29\x9f\xf0\xe7\x9c\x4e\x83\x6b\x35\x47\x95\x52\x00\xb3\x07\x84\xdd\x7a\x2b\xfc\x15\x6f\xca\xdc\x2a\x10\x2a\xc5\xf1\x67\x00\x7e\x99\x8e\x6e\xaa\xdc\xaa\xa2\x99\x19\x5c\x8c\x72\xfd\x42\x7f\xed\x91\xa0\x19\x54\x06\x92\x34\xea\x4f\xe1\x23\x8f\x7e\xef\xf1\x38\xaa\x30\x45\xa3\xee\x31\x9b\xe3\x50\x14\xf8\xb2\x33\xb2\xdd\xe6\xae\x57\x82\x1a\xcc\x3e\xa5\xc2\xcb\x14\xed\xc2\x33\xed\x72\x4d\xb6\x03\x4e\x6d\xc7\xc5\x34\x80\xce\x6e\x72\xf7\xdf\x90\xf0\x19\x32\x4e\xce\x0c\x40\x63\x66\x39\x28\xff\xeb\x79\x68\xc9\xf0\x02\xac\x77\x23\x03\xe6\x7a\x62\x7f\x91\x4d\x99\xb6\xe4\x5f\x6e\xd8\x74\x48\xa7\x34\x84\x9c\x01\x5e\x93\x79\xca\xa9\x1a\xa0\xc7\xb0\x28\xa0\x33\x63\x7b\x15\xb6\x1e\xd6\x69\x74\x6f\xd4\x49\x0e\x15\x66\x19\xd1\x38\x14\xd8\xdf\x8d\x0a\x0d\x6c\xab\x13\x2a\x25\xe5\xb2\x4e\xfd\x87\xbe\x7b\xa3\xd5\x2a\x4f\x95\x0c\xe9\xd8\x53\xe1\x9d\x9a\xa9\x1e\x58\x50\xeb\x38\x9d\x66\x93\xe1\x20\xb3\x54\x79\x2a\x35\x94\x6d\x48\xc0\x23\xad\x52\x2d\xb0\x68\xa9\xe3\x74\x9a\xde\x4d\xfb\x06\x3b\x25\x43\x7a\xe5\x8a\x5d\xf5\x76\x4a\x81\xfb\xec\x94\x92\xaf\x6d\x0a\x2f\x25\xe1\xae\x79\x9c\x84\xd4\x7f\xf5\x44\x9e\x4c\xf2\xff\xce\xe4\xee\x82\x61\xdc\x10\x1a\x37\x4a\xe5\x00\x33\xe4\xf2\xc2\x50\x97\x64\xee\x2a\x7b\x1e\x97\xcd\x53\xc7\x77\xae\x9d\x76\x33\x60\x9a\x52\x0d\xf9\x51\x27\xb7\xc3\x14\x4c\x52\xce\x61\x9c\x4a\x03\x87\x61\x09\x33\xbb\x54\x48\x65\x6e\x74\xe3\x17\x69\x59\x27\xe9\xb3\xc5\x22\x67\x8f\x6b\x2a\x83\xc8\xc2\x2e\xf1\xc6\xc9\xfb\x1a\x45\xbd\xc4\x0e\x70\x20\x3c\x37\x6c\x0c\xbd\x8b\x45\x13\x6c\x33\x89\x05\x61\x5d\x22\x98\xec\xd4\x23\xed\x8b\x7f\x57\x46\x24\x5b\x78\xd5\xa0\xad\x96\xe0\x48\x10\x11\xe0\x4b\xeb\x93\x3b\x9d\xa0\x48\x86\x18\xc7\x73\x1a\xfa\xb2\x34\x0f\x6b\x0a\xf3\x1e\x71\x1e\x7b\x17\xc4\x89\x78\xe3\x1a\xdf\x38\x81\xb4\xd2\x69\x67\x10\x40\x08\xf4\xe9\x8f\xe9\x70\x82\x56\xd4\x8f\x03\x8a\x3e\x7c\x36\x2f\xe4\x13\x4c\xf3\xf6\xc3\xe7\x53\xcd\x63\x5c\x4f\xed\x44\x2d\x29\x4b\x8e\xdf\x11\xc9\x02\x33\x46\xd9\x91\x94\x4d\x64\xfc\xe0\xac\xc9\xb8\xff\x29\x69\xcb\x7c\xd5\xbb\x76\x25\x06\x3b\x70\x69\x87\xa8\xa7\x14\x5d\xa2\xa6\x51\x70\x17\x62\x96\xc9\xd8\x58\x74\x6b\x2a\x16\x79\xd4\x95\x8b\x91\x37\x7f\xc6\xe2\x48\x32\xa6\x42\x7e\xb0\xd1\x68\xde\x1f\x74\x6c\xb6\x9b\xbd\x1e\x29\x2b\xf2\x5f\x95\x9a\x25\x5a\x75\xe3\xe6\x0a\xaf\xda\x92\xf2\x3d\x3a\x93\x6f\xe5\xcc\x1c\x0d\x47\x55\x4e\x4a\x84\xfd\x95\xc0\xe4\x9a\x91\x79\xcf\x01\x46\x00\xf0\xba\xc9\x21\x0e\x80\x95\xdb\xb8\xbc\x3f\x3d\x98\xe9\x14\xd0\xe0\x50\x06\x2f\x1e\x7d\xc1\x26\x85\xbc\xc6\x45\xb6\xe5\x80\x4d\xf6\x8d\xd7\x9d\xa4\x4e\x73\x84\xd2\x41\xd2\x2d\xc4\x22\xde\x32\xc2\x22\x46\xe7\x79\x78\xdd\x4f\xd4\x44\xd5\x10\x03\x98\x7d\xef\x0e\x4c\x1f\x65\x2c\x07\x95\x50\xfb\x9c\x9f\x21\x67\x45\x64\xf1\x3a\x30\x47\x70\xcc\x0e\x6f\x2b\xf9\xd4\x8c\x50\x46\xc4\xa6\x21\xfc\x56\x1e\xbe\x1b\x42\x27\xe4\x9f\xa6\xd0\x31\xe6\xc4\x57\x97\x14\xb5\x70\xa0\x09\x9c\xee\x35\x7c\x4a\x56\x35\x92\xf5\xd5\x4c\xc9\x1a\xbb\x9b\x6c\x17\xc6\x44\xbc\xfb\x65\xf4\xaf\x27\xb9\x8c\x2e\x5d\x35\x94\x6f\x7e\xef\x27\x32\x78\x6a\x2f\x34\x93\x91\xec\x86\x52\x36\xb2\xeb\xcc\x3a\xdc\x11\xd7\x99\xbb\x1a\xcd\x8c\x1a\xcd\x8a\x1a\xcd\xcc\x1a\xcd\xda\x6b\x54\xba\x1c\xaf\x68\x34\x19\x8e\xeb\x2e\x58\xd3\x11\x7d\x6f\x06\x8d\xda\x3b\x5f\x8d\xeb\x7e\x0d\x5d\xf1\xda\xd8\x35\x79\x4d\x8e\xe4\x5e\xcb\xf5\xa9\xc5\x9d\xd0\x6b\xb7\xee\xd5\xb0\xde\x46\x6a\x44\x2f\xfb\xd6\x35\x6a\x94\xe0\x4e\x67\xa3\x07\x77\x3c\xad\xd7\x48\x8d\xe8\x49\xa0\x61\xf0\x5a\x82\x3b\x9d\x46\xe3\xe1\xc4\xe0\x35\x18\xc9\x1c\x21\x1b\xa6\xc8\x56\xb8\x2e\x5e\xd3\x49\x70\x47\xa3\xa9\x3b\x32\x78\x4d\x8d\x64\x5f\x0e\x64\xc3\x60\xa3\x04\xd7\xca\x46\x7b\xb9\x06\x39\xd1\x10\x47\xfd\x82\x46\x57\x77\xa3\x51\xff\x76\x50\xfd\x0e\xa5\x71\xaf\xf0\x29\x23\xdd\xea\xbb\xd5\x09\x82\xd2\x40\x90\x48\xd7\x4e\x89\x42\xc5\xaa\xb9\x08\x40\xbe\xcc\xe7\xe7\xf2\x8c\x20\xa4\xdb\x2e\xad\xeb\x38\x08\xd2\x3e\xa9\xda\x1c\xaf\x54\xaf\x17\x0b\x8a\x02\xbc\x50\xd5\x9d\x3d\x59\x52\x26\xf2\xff\xa9\x60\x90\xec\x53\xc1\x91\xaa\xcf\xdb\x4e\x61\xdb\xf6\x9b\x37\xf9\x37\x00\xf8\x39\xbc\xe8\x98\xe3\x28\xa9\x53\x1b\x6c\x7f\x45\x57\x5a\x72\x45\xa9\xf7\xd4\xea\x1e\xbc\x20\xc6\xf9\x47\x88\xc3\x33\xaf\x9f\xd4\xc9\xde\xca\x6b\x2a\x4b\x77\x25\xbb\x3e\x0d\x40\xd2\xa5\xf5\x9b\x92\xaf\xf6\xcf\x07\xef\x49\xd6\x68\x62\x08\xa8\x9a\x1d\x7f\xef\x6c\x59\x11\x98\x56\x79\x2b\x6f\xbe\xcc\x77\xe6\x54\xf2\x48\x76\xc2\x7b\x35\x07\x0a\x39\x62\xcf\x66\xba\xdc\x73\xf2\xaa\x2c\x1b\x29\x57\x65\xbb\x08\xa8\x54\xcc\xa3\xf7\x8c\xae\x65\x89\xc4\xcc\x08\x59\x86\x8a\xc3\x1f\xad\x14\x34\x5d\xcc\x82\x04\x92\x12\x9e\x58\xee\x2f\x90\xf6\x5a\x8d\xcb\x1a\x66\xbe\x6c\x52\x3c\x93\x05\xc2\x7f\x21\x4b\xb0\x58\xb2\xe3\xe7\x3f\x39\x0d\x51\xd5\x69\xfe\x3b\x80\x9a\x09\xac\x23\x00\x95\x44\xef\xc3\x67\x84\x6f\x5b\xf5\xad\x9f\x76\x8e\x49\xc4\x87\x08\x4c\x3a\xdb\x9c\x99\x48\x76\xea\x71\x42\xe9\xe3\xac\x11\xa5\x2e\xcd\x3a\x38\x78\x30\x6b\xf9\x84\xe1\xb9\xa0\x6c\xd3\xe9\x48\x94\x79\xa6\x65\xae\x93\x69\x9b\x61\x0e\x0e\xed\xf9\x64\xad\x97\x49\xc2\x28\x16\xe7\xd2\x96\x71\x84\x0a\xcf\xe7\x7c\x85\xd2\x17\x92\x0e\xab\x9c\xb6\x8a\x50\xcf\xf7\x69\x68\x39\xe3\x04\xae\xd3\x90\x42\x68\xf8\x82\xb2\x95\xca\x67\x8c\x06\x99\x5c\x85\xb0\x90\xd8\x44\x38\x39\x0d\x58\x48\xa5\xb7\x25\x0d\xa4\xed\x54\x9a\x19\xe0\x85\x17\x07\x22\x0d\x32\xb9\x1c\x1d\x5d\x49\xff\x3b\xdd\x96\x07\x6e\x42\x21\xc2\x2c\xb4\x86\x6c\xa4\x5e\x4e\x3a\xb3\x80\x90\x2b\xb8\x90\x0b\xcf\x4c\xf4\x6f\x00\x00\x00\xff\xff\x9e\x3a\x0a\x51\xea\x27\x00\x00")

func defines_html_bytes() ([]byte, error) {
	return bindata_read(
		_defines_html,
		"defines.html",
	)
}

func defines_html() (*asset, error) {
	bytes, err := defines_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "defines.html", size: 10218, mode: os.FileMode(384), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _index_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x5c\x6d\x6f\xdb\x46\xf2\x7f\x9f\x4f\xb1\x7f\x26\x2d\xfe\x05\x2a\x0a\xc9\xf5\x70\x45\x6a\x13\x70\x2c\x39\x11\xea\x07\xc1\x92\x72\xd7\x57\x05\x45\xae\xa4\x8d\x29\x92\xe5\x2e\xe5\xb8\x81\xbf\xfb\xcd\xec\x03\x9f\x44\x4a\x14\x2d\x5f\xaf\xd7\x14\xb8\x88\xdc\x1d\xce\xce\xce\xcc\x6f\xf6\xb7\x4b\xfa\xbe\x7c\xf1\xe9\x82\x85\x94\x58\xea\x97\xbf\x7d\xab\x2e\x7e\xf5\xe2\x34\x89\xee\xb9\xf5\xf8\xf8\xe5\xcb\x3d\x13\x2b\x62\xdf\x7c\x1c\xde\xde\x8e\x06\x43\x6c\xb1\xf1\x1f\x1a\x70\x8a\xbf\xaf\xce\xc9\xdb\x53\x12\x25\xc4\x3e\xbf\x3c\x9b\x4c\xae\xcf\xae\x86\xc4\xf2\x02\x97\xab\xa7\x13\x37\x5c\x52\xf2\x8a\x7d\x4f\x5e\x79\x51\x42\x51\xd6\x1e\xb8\xc2\xb5\xcf\xc7\x33\xfb\x92\x71\xf1\xf8\x78\x22\x12\x72\x47\x1f\x4e\x41\x17\x8a\xd8\xd7\x8f\x8f\xce\x89\xf0\x89\x54\x72\x6a\x09\xfa\x59\xf4\x12\xb6\x5c\x09\x12\x46\xf7\x89\x1b\x5b\x4e\x41\xf2\xa4\x2f\xfc\x7a\x69\xcb\x39\xe1\xb1\x1b\x12\x34\xf1\xf1\x31\xd3\x3e\xe3\x34\x39\x47\x59\x18\xa5\xd8\x86\xaa\x50\xde\x39\x58\xe3\xe4\x81\x6b\x85\xc4\x29\xb4\x75\x57\x38\xf2\x03\x5a\x35\x11\xdb\x2a\x1a\xfb\x22\x81\x6e\x1a\xfa\x32\x1c\x85\x9f\x17\x3b\x03\x2b\xdc\x79\x40\x2d\x74\x3b\x5e\x64\x46\xe1\xcd\x6b\xc2\x45\xc2\x62\xda\x53\x32\x60\xf4\x8a\xba\x68\x7b\x82\x97\x38\xe2\x0a\x2f\x76\x44\x06\x3d\xa9\xe6\xa4\x65\xd2\x90\xc1\x34\xbf\xc9\x0d\xdf\xa7\x01\x3c\xf7\x34\x05\xe8\xa9\xbd\x1a\xd0\x77\x78\xa5\xa6\x37\x8f\xfc\x07\x70\xa5\xa0\xeb\x38\x70\xc5\x0e\x3c\x10\x5b\x66\x9c\x94\x87\x5f\xf4\x92\xb3\xdf\xe9\xfe\x62\xfe\x20\x28\xff\xf5\xb8\x90\xf2\x19\xbf\xcb\xe1\x34\xb8\x90\x63\x6c\x43\x0a\xc5\xec\x01\x4b\xae\xdd\x35\xfd\x99\x3e\x94\xb1\x55\x00\x94\x96\xe3\x77\x28\xf8\x61\x7a\x75\xb9\x8d\xad\x6d\xe9\xa4\x59\xb8\x98\xe5\xe6\x81\xb3\x8d\xcb\x82\x76\xa2\x90\x48\xe0\xd4\x6f\xc3\x39\x8f\x7f\x3a\xe1\x69\xbc\x85\x14\x23\x35\xa6\x89\x47\x43\x51\xc0\x4b\xa5\xe7\xf1\x31\x0f\xbd\x54\xd4\x62\xf4\x69\x24\xdc\xcc\xd0\x2e\x38\x33\x21\x37\x60\xdb\x13\xd4\xc3\xb0\xa8\x13\xe8\xd5\x65\x1e\xfe\x4b\x16\xde\x61\xc5\xc9\x91\x81\xd2\x34\xb1\x1c\x92\xff\x77\xe2\x92\x55\x42\x17\xe8\xbd\x4b\x48\x98\x8b\x89\xfd\x01\x6e\xa1\x6c\xc1\x7f\xb9\x63\x75\x97\x29\x69\x84\x38\x03\xba\x61\x9e\xc6\x54\x8d\xa0\x9b\x50\x51\x90\xce\x9c\xed\x6e\xa1\x75\xbf\x4d\x57\xe3\x46\x9b\xa0\xab\x30\xca\x55\x94\x86\x82\xfa\xd5\xac\x30\x82\x87\xda\x44\x4a\x45\xb9\x6c\xd3\xd9\xc7\xb3\xd1\xa5\x31\xab\x3c\x94\xea\x32\xb9\x27\xd3\x5b\xbb\xa9\x5e\xb0\x60\xd6\xd3\x6c\x9a\x4d\x86\x83\xcc\x53\xe5\xa1\x64\x57\xb6\x20\x21\x8e\x8c\x49\xb5\x82\x45\x4f\x3d\xcd\xa6\xe9\xcd\xf4\xac\xc1\x4f\xaa\xcb\xcc\x5c\xa2\xab\xde\x4f\x5a\x70\x97\x9f\x34\xf8\x0e\x2d\xe1\xa5\x22\xdc\xb5\x8e\xb3\x30\xf2\x9f\xbd\x90\xab\x41\xfe\xbb\x2b\xf9\x68\x91\x50\xda\x52\x34\x6d\x55\xca\x51\xac\xa1\x96\x17\xba\xba\x14\xf3\x91\xf4\xe7\xd3\xaa\xb9\x0e\x7c\x67\xee\x54\xad\x80\xba\xa4\x36\xd4\x47\x53\xdc\xf6\x43\x50\x95\x9c\xfd\x72\xb2\x0c\xec\x17\x53\xc8\xec\xc2\x90\xca\xd8\xe8\x86\x2f\x76\x20\x4f\x32\x7b\x8b\x45\x8e\x9e\x51\x13\x0d\x62\x0b\xbb\x84\x1b\x27\x6f\x6b\x95\xf5\x20\x3b\xa0\x81\x70\x47\x61\x6b\xd1\x9b\x54\xb4\x91\x6d\xa7\xb1\xa0\xac\x4b\x06\xb3\x0a\x1f\x39\x9c\xfc\x8f\x20\x23\x93\x85\xbb\x9d\xb4\xdb\x14\x9c\x08\x26\x02\x7a\x6a\xbd\x1b\x4d\x27\x24\x86\x14\xe3\xd4\x8b\x42\x1f\xa8\x79\x58\x43\xcc\x4f\x98\x33\x3f\xe9\x33\x27\xe6\xad\x39\x7e\xe3\x00\xe0\xa5\xe3\x8e\x20\x10\x10\xe4\xdd\x2f\xd3\xe1\x84\xac\x23\x3f\x0d\x22\xf2\xc3\xfb\xe6\x89\xbc\xc3\x61\xbe\xf9\xe1\xfd\xb1\xc6\x69\x9c\x4f\xed\x40\x07\x42\x96\x3d\x7d\x45\x64\x0b\x9a\x24\x51\xf2\x44\xc8\x2a\x1d\x5f\x31\xdb\xe4\xdc\xff\x28\x68\xcb\x78\x35\xab\xf6\x56\x0e\x76\xc0\x52\x05\xa8\xc7\x54\x5d\x82\x66\xa3\xe2\x2e\xc0\x2c\x83\xb1\xb5\xea\x83\xa1\x58\xc4\x51\x57\x2c\xc6\xae\x77\x47\xc5\x13\xc1\xa8\x95\x7c\x45\x63\xa3\x7b\xbf\xc2\xb1\xdd\x6a\xf6\x7c\xa0\xdc\xd2\xff\xac\xd0\x2c\xc1\xaa\x1b\x36\xd7\x74\x7d\x28\x28\xbf\x27\xaf\xe0\xa9\x1c\x99\x57\xc3\xab\x6d\x4c\x82\x84\xfd\x33\xc3\xc1\x0d\x22\xf3\x96\x3d\x88\x40\xc1\x8b\x36\x9b\x38\x14\xdc\x3a\x8d\xcb\xdb\xf5\xc6\xcc\x94\x80\x16\x9b\x32\x7c\xf0\xc9\x07\x6c\xa0\xe4\x39\x0e\xb2\x2d\x07\x7d\xb2\xab\xbf\x6e\x27\x75\x9c\x2d\x94\x49\x92\x6e\x29\x16\xf3\x03\x33\x2c\x4e\x22\x2f\x4f\xaf\xf1\x44\x0e\xb4\x9d\x62\x28\x66\x8f\x47\x83\xa6\x97\x32\x96\x43\x4a\x52\xbb\x82\x9f\x49\xce\x8a\x92\xc5\xe3\xc0\x5c\x82\xd3\x64\xff\xb2\x92\x0f\x9d\xb0\x28\x61\xe2\xa1\xa5\xf8\x35\x6c\xbe\x5b\x8a\x4e\xd8\xef\x6d\x45\x6f\x29\x67\xbe\x3c\xa4\xa8\x15\x47\x98\xe0\xee\xde\x88\x4f\xd9\xba\x46\xb3\x39\x9a\x29\x79\xa3\xba\xc8\x76\x41\x4c\xcc\xbb\x1f\x46\xbf\x39\xca\x61\x74\xe9\xa8\xa1\x7c\xf2\x3b\x9e\x40\xf2\xd4\x1e\x68\xaa\x9e\xec\x84\x12\x6e\xb2\xe3\xcc\x3a\xb9\x27\x1c\x67\x56\x2d\x9a\x35\x5a\x34\x2b\x5a\x34\x6b\xb6\x68\x76\xb8\x45\xa5\xc3\xf1\x2d\x8b\x26\xc3\xdb\xba\x03\x56\xdd\x63\xce\xcd\xf0\xa6\xf6\xcc\xd7\xc8\x75\x3f\x86\xde\x8a\xda\xed\xa8\x29\x6a\xd0\x93\x47\x2d\xb7\xa7\x56\xee\x88\x51\xbb\x1e\x9d\x0f\xeb\x7d\x24\x7b\xcc\xb4\xaf\x47\x8d\x16\x29\xb9\xe3\xf9\xe8\xe3\xe8\x76\x5a\x6f\x91\xec\x31\x83\xe0\x4d\x43\xd4\x94\xdc\xf1\x2c\xba\x1d\x4e\x1a\xa2\x86\x3d\x59\x20\xe0\xa6\x29\xb3\xa5\x5c\x97\xa8\x99\x22\x58\xb1\x68\x3a\xba\x6a\x88\x9a\xec\xc9\xde\x1c\xc0\x4d\x83\x8f\x94\xdc\x41\x3e\xda\x89\x35\xac\x89\x0d\x79\x74\x56\xb0\xe8\xfc\xe6\xea\xea\xec\x7a\xb0\xfd\x1e\xca\xc8\x3d\xc3\xab\x0c\xbd\xd4\x77\xe3\x09\x22\x8a\x02\xc1\x62\xc3\x9d\x94\x41\x45\xd6\x5c\x14\x20\x3e\xd4\xf3\x1e\xec\x11\x04\x84\xed\xd4\xba\x48\x83\x40\xb7\x81\x69\x1e\x5d\xcb\x56\x37\x15\x11\x09\xe8\x42\xb2\x3b\x7b\xb2\x8a\x12\x91\x7f\xa9\xd0\xa0\xd9\x8f\x04\x27\x92\x9f\x1f\x3a\x84\x6d\xdb\x2f\x5e\xe4\xef\x00\xf0\x67\xff\xa4\x53\x4e\x63\xc5\x53\x5b\x2c\x7f\xc5\x50\x5a\x30\x23\x1d\x3d\x39\xbb\x8f\x6e\x90\xd2\xfc\x25\xc4\xfe\x91\x37\x4b\xb9\xb3\xb7\x72\x4e\x65\x99\x26\xb5\xea\x47\x01\x6a\x3a\xb5\xfe\x2e\xf5\xcb\xf5\xf3\xa3\xbb\x04\x8e\x26\x86\x28\x55\xb3\xe2\xef\x1c\x2d\x23\x81\x9a\xe5\xad\x5d\x6f\x95\xaf\xcc\x5a\xf3\x15\x34\xe2\x73\x35\x1b\x0a\xe8\xb1\x67\x33\x43\xf7\x9c\x9c\x95\x65\x3d\x65\x56\x56\x95\x40\xa6\xd2\xdc\x3b\x4e\xa2\x0d\x50\xa4\xa4\x59\x02\x68\xa8\xd8\xff\xd2\x4a\x8a\xea\xc9\x2c\x58\x00\x90\x70\xc5\x6a\x37\x41\xda\xe9\x35\x0e\x1c\xc6\x5b\xb5\x21\xcf\x6c\x41\xe8\x6f\xc4\x12\x49\x0a\xe8\xf8\xff\x4f\x3c\x0a\xc9\x76\xd0\xfc\xef\x50\xb4\x19\xc0\x26\x03\x48\x49\xf5\x2e\xf9\x0c\xf0\x87\xb2\xbe\xcd\xb2\xb2\x4d\x62\x3e\x66\xa0\x6a\x3c\x64\xcf\xc4\xb2\x5d\x8f\x13\x42\x8c\xb3\x9b\x58\x87\x34\x6b\xe0\x18\xc1\xec\xce\x67\x09\xf5\x44\x94\x3c\x74\xda\x12\x65\x91\x39\xb0\xd6\x41\xd9\x4e\x28\xc7\x80\x9e\xf8\x6c\x63\xa6\xc9\xc2\x38\x15\x3d\xf0\x65\x1a\x93\xc2\x75\x8f\xaf\x89\x7e\x40\x35\x58\xe5\xb2\x55\x14\x75\x7d\x3f\x0a\x2d\xe7\x56\x89\x9b\x32\x24\x25\x8c\xf8\x22\x4a\xd6\xb2\x9e\x25\x51\x90\xe9\x95\x12\x16\x11\x0f\x31\x55\xbb\x01\x8b\xc8\xf2\xb6\x8a\x02\xf0\x9d\x2c\x33\x03\xba\x70\xd3\x40\xe8\x24\x83\xe9\x98\xec\x52\xed\xdf\x99\x7b\xd8\x70\xb3\x08\x33\xcc\x22\x1b\xac\x46\xf2\x61\xd5\x98\x25\x04\xcc\xa0\x0f\x13\xcf\x5c\x74\xf2\x7f\x83\x9b\xf3\xe9\x2f\xe3\x21\x59\x89\x75\xe0\x9c\xe8\x7f\x65\x14\xd6\x54\xb8\xc4\x5b\xb9\x09\xa7\x50\x69\x53\xb1\xe8\xfd\x68\xe9\xd6\x95\x10\x71\x8f\xfe\x96\xb2\xcd\xa9\xf5\xaf\xde\xec\xac\x77\x1e\xad\x01\x69\x4c\xe5\x8e\x29\xd9\xa3\xe1\x29\xf5\x97\xd4\x3c\x84\xd9\x01\x29\xc6\xe8\x7d\x0c\x2b\x41\x41\xee\x9e\xf9\x62\x75\xea\xcb\x37\x9f\x3d\x79\xf3\x3d\x84\x81\x09\xe6\x06\x3d\xee\xb9\x01\x3d\x7d\x8d\x59\x87\x47\x3c\x59\x29\xfc\x10\x71\x11\xca\x92\x42\xe0\x0a\xd4\x40\xf0\xa5\xc0\x49\x00\x9b\x0c\x70\x6f\x00\xf1\x81\x11\x8c\x6b\xd9\xda\x5d\xd2\x7e\x1c\x2e\x2d\xb5\x98\x5b\xfd\x85\xbb\x41\x01\x1b\xdb\x8a\x4f\x71\xf1\x10\x40\x64\x28\x2d\x85\xa5\xef\xc1\x1a\x60\x1e\x85\xeb\x3e\x0b\x7d\xfa\xd9\xc6\x56\x48\x0a\x0f\xf0\x21\x8a\xd2\x9f\xdc\x8d\xab\x5a\xad\xaa\x0b\x09\x4f\x3c\xd0\xf1\x89\xf7\x37\x10\x83\x28\xe9\x27\xe8\xc8\x84\x42\xc3\x1b\xfb\xb5\xfd\xfa\x1f\xa6\xc1\x5e\xb3\xd0\xfe\xc4\xf5\xa2\xb7\x76\x59\xa8\x1e\x93\x69\x60\x8f\x6f\x6f\x06\xb3\xf3\xe9\xe8\xe6\xfa\xf1\x11\xa0\xe6\xa7\x9e\x60\x51\xa8\xcd\x52\x4f\x9a\x0a\x02\x9e\xa5\x41\x7f\xcd\x82\x3b\xdd\x2d\xbb\x4c\x3a\x28\x33\xe1\x42\x45\x5d\x21\x09\xc1\x81\x05\xc1\x0b\x18\xae\x8d\x3a\x6b\x4e\x42\x37\xc3\x0c\x5c\xce\xdd\x84\xa8\x9f\x9e\xaf\x72\xd1\xdc\x2e\xd8\x67\xea\xf7\x44\x14\x5b\x04\x92\x9d\x4a\x69\xb6\x74\xd1\x42\xcb\x29\x22\x0f\x73\x00\x26\x46\xe1\x91\x20\x65\x7e\xb9\x53\x2b\x33\x9c\xac\xa6\x6b\x0e\x95\xd5\x97\x9c\x11\x8d\x5d\xe9\x9c\xc8\xe2\xb4\xcd\x17\xe6\x91\x10\xd1\x5a\xb7\x8b\x68\xb9\x94\x07\x9e\x51\x1c\x6d\x60\x04\xdd\x0a\xdc\x78\x89\xd0\x5b\x61\x23\x59\x44\x5e\xca\x0b\x64\x44\x5a\x7b\x6a\xbd\xf4\x19\x56\xc5\x79\xaf\xfc\x70\x96\xd3\x49\x1a\x86\x2c\x5c\x12\x93\xaf\x83\xd1\x64\x7a\x3b\x7a\xa7\xd9\x42\x25\x85\x15\xef\x93\x1e\x96\xf5\x05\x27\x53\xd5\x9f\x73\x44\x29\x67\x02\xa4\x1d\x01\x6c\x21\x70\x63\x9e\x57\x6e\xd3\x40\xaa\x02\xf9\xa3\x69\x2c\xd8\x9a\xf6\x62\x20\xa2\xa1\xd8\x7a\xd0\x72\x54\x7f\xf1\xf8\x34\x7f\x2a\x9f\xc5\x4c\xde\x17\xbe\x40\x95\xe6\xa5\x41\x21\x52\xc6\x06\xf8\x91\x48\x93\x7a\x58\x6c\x55\x82\x29\xab\x5f\xa6\x77\x34\x46\x9d\x01\xcb\x1e\x08\xdc\xdd\x0f\x5c\x9e\x99\x07\xfa\x69\xd0\x6c\x81\xb9\x34\x9f\x2a\x81\xf6\x3a\xad\x85\xe7\x03\x88\x04\xd4\xe9\x00\x57\x92\xca\x4c\xb2\xdd\x8a\xf5\x12\x93\xdd\xc1\x7f\x55\x30\x95\xe1\x85\xfe\x18\x0a\xc5\x4b\x3c\x32\xaf\xed\xdd\x40\x0d\x7a\xb9\x51\x4c\x21\x17\x91\x13\x31\x3e\xd0\xd6\xb8\x80\xf3\x0d\xcd\xf7\x49\x16\xd6\x62\xfe\xb6\xdf\xbf\xbf\xbf\xb7\x21\xa3\x12\xf8\x9f\xed\x45\xeb\xbe\x2a\x8b\x50\x4c\x02\xea\x72\xca\xfb\xb8\x90\x72\x91\x1d\x95\x43\x4e\x71\x80\x63\x96\xa0\xc0\x6b\x26\xb2\x98\x58\xce\xcd\x64\x3a\xbc\x9e\x56\xcd\x90\x71\xcd\x93\x6f\x27\x80\x31\x5e\x50\xb7\x13\x51\xcd\x2e\xa0\x2b\xa4\x92\x8a\x66\x5e\x28\x4e\xd4\x43\x3e\x52\xd4\xc4\xdc\x30\xbe\x66\x9c\x6b\xee\x31\x4f\x01\xc0\xd9\x0a\xec\x05\x11\xe6\xbc\x2a\xbc\xaa\x4b\x03\x51\x3f\xa5\xf5\x5a\xc4\x4d\x98\xdb\x5b\x31\xdf\xa7\x50\x45\x25\x49\x73\xbe\xc5\xc4\xe5\x3f\x9d\xf4\xd5\x83\x05\xec\xa9\x81\xa1\x93\xbb\xb8\x7c\x9d\xe1\x6d\x39\xbf\x4b\xff\x42\x36\xe4\xd3\x96\x45\xaf\xde\x39\x24\x06\x96\x00\x45\x01\x0b\x23\x87\x9a\x1c\x8a\x07\xa0\x22\x25\x2f\x80\x7f\xca\x0d\xf3\x20\xf2\xee\xd0\x65\xbd\xb5\xdf\x7b\x63\x2e\xa2\xc5\x02\x56\x94\xde\xeb\xb2\x2c\xd8\x47\x03\x6c\xd3\xfb\x6a\xdd\xec\x27\xee\x72\xa9\xdd\xe7\x66\x7a\x45\xa8\x0b\x6b\x4f\x0e\x91\x11\xd8\x85\x1b\xf0\x0a\x83\x3d\x97\x8b\x80\xfd\x01\xd8\x1c\xcc\x68\xc1\x96\x57\xc3\x2b\xa0\x19\x44\xa5\xa2\x59\x4a\x4c\x2a\xaf\xe9\xda\x72\xae\xe8\x5a\x52\x3b\x57\xaf\x2b\x34\x91\x96\xe6\x6e\x02\x29\xa5\x6b\xab\xf0\x74\xb1\x84\x85\xf9\x82\x86\x34\x2b\xdb\xce\x47\x09\xfb\x1d\x83\x10\xf4\x64\xf3\x1c\x28\x38\xce\x58\xae\x02\xb2\xa9\xec\x41\x49\xd1\x14\xa1\xc3\x58\xd1\xca\x82\x84\x4e\x53\x2c\x31\xbb\x02\x8e\x58\x59\x4d\x54\x36\x21\x2d\x08\xdc\x39\x0d\x0a\xcf\xca\xa7\xcc\x4a\x09\xb9\xc8\x24\xf3\x50\x1c\x51\xa5\xb0\xb7\xa2\xde\xdd\x3c\xfa\x6c\x39\x1f\x64\xaa\x02\xfe\x50\xc7\x6e\x55\x2d\x1d\x36\xf9\xe7\xd9\xb8\x39\x6a\x60\x0e\xe5\xf7\xb8\x8b\x6a\x36\x88\x12\x94\xc0\x4d\xb6\xb6\xaa\xa1\x26\xd4\x78\xd1\x6c\x9f\x8a\x46\x69\xae\x0c\x21\x6c\xd8\xe4\x18\xb2\x5e\xd8\xde\x98\x21\x71\x88\xed\xf1\x75\x62\x75\x4d\xa9\x9a\x64\xca\x4a\x02\xa8\x35\xfb\x9f\x3d\xaf\x6a\xf4\x0e\xca\xae\x2e\x89\x0d\xce\x2a\x01\xfc\x6f\x7f\x10\xa0\x47\x17\xcd\x99\xc1\x16\xf9\x1a\xab\x1f\x9c\xba\xf3\xd1\x85\x3d\xc5\x85\xc4\x90\x97\x5a\x90\xb3\xc5\x31\x30\xae\x8c\x6b\x09\xf1\xbf\x06\x9e\x87\x9f\x21\x35\x7c\x4c\x01\xe5\x1c\x58\xed\xe4\xe1\x59\x5d\xec\x1a\x0c\xaa\x84\x54\x69\x44\xee\x33\xba\x80\x7d\xe1\x91\x31\x8e\x3a\xbb\x41\x7c\x8b\xc6\x21\x0a\x79\x89\xb7\xb1\x45\xcf\x1c\x06\xa8\xc0\xb9\x73\x4c\xbe\x8c\x48\x5e\x4c\xcf\xde\x4d\x6c\x76\x31\x3e\x3b\xff\x79\x38\x9d\xd8\x33\x86\x6f\xe2\x0a\x0c\xea\x65\xf6\x2a\xdf\x72\xc6\xea\xa2\x48\xd3\x0e\x1d\x67\x78\x7b\x7b\x73\x5b\x3f\x8c\xfa\x98\xc7\x72\xe4\x61\xd0\xee\x41\x34\x1a\xf7\x8c\x25\x3f\x0c\xac\x1d\x4a\x7e\xc2\x67\x39\xef\xf0\x67\x0f\x95\x53\x50\x35\x2e\x28\x58\x02\xa3\x92\x2a\x64\x8b\xd9\x58\xeb\xda\xef\xea\x12\x56\x55\x0c\xd9\x5d\xc2\xb2\x9e\x9d\xa2\xa4\x8d\x11\xd3\x95\xe6\xd0\xf8\x66\xc5\x3b\x9b\x5c\x9b\x12\x5e\xfd\x9e\x67\xbb\x92\xe7\x3e\xd3\xf1\xec\xe2\xb2\x42\x96\x1c\xd1\x63\x5a\x6b\x3b\x87\x55\x13\xb5\xe0\x2f\x35\xb1\x76\xee\x2a\x7d\x8c\xb8\xcb\x5b\x2a\x25\xbb\x38\x2b\x4f\xf3\x23\xfa\x4a\x29\x6d\xe7\xaa\x0a\xce\x0a\x9e\x92\x93\x6a\xe7\xa8\xe2\x97\xd6\xdd\xf8\xc1\x9b\x3f\x88\x1f\x9c\x8f\x67\xe0\xd9\x7a\x7e\xe0\xc5\xa9\xe5\x80\xc0\x16\x0f\x50\x07\x48\x71\x7a\x0c\x0e\xa0\x0c\xf8\xca\xf3\x5b\xf3\x02\xed\xb0\x26\x62\x20\x83\x76\x28\x33\x00\x9d\xc7\xa7\x06\x52\xe9\x53\xe8\x7f\x21\xd3\xba\xe6\x58\x4d\x76\x65\x08\x07\xb5\x6d\xd0\x9d\xfd\xfd\xf4\x9f\x8b\xf8\x0f\x2e\x1a\x71\xed\xd7\xf2\xfe\x41\x1b\xde\xef\x1f\x85\xf7\x0f\xbe\xf2\xfe\x66\x7c\x0f\x76\xf2\x7e\xbf\x03\xef\x1f\x3c\x03\xef\x1f\x3c\x27\xef\xf7\x77\xf3\xf1\x81\x5a\xbb\xfd\x8b\xd1\xf5\xcd\xa0\x96\x24\x9b\x3f\x4d\xc3\xcf\x90\xf1\xb7\x8e\x8f\xfb\xad\xf8\x78\x36\x56\x13\x1f\xf7\x0f\xe5\xe3\x99\x6d\x05\x43\xf6\xd1\xa5\xba\x19\x37\xf1\xa5\x41\x6b\xbe\x54\xd5\xba\x93\x30\x35\x3a\x3d\x7f\xaf\xa1\x27\xd6\xa6\xa8\x56\xfe\xbc\xb2\x99\x5b\xfa\x15\x6e\x79\x88\xb3\xf6\x73\xcb\x0e\xbe\x6a\xc1\x2d\x9b\x72\xa6\xe0\xa9\xd6\xdc\xd2\x3f\x80\x5b\x1e\x74\x90\xdf\xea\x58\xfa\xc7\xca\xb1\x74\x3b\x96\x7a\x7d\x33\x3d\xfe\x7a\x36\x9e\x34\xae\x67\xf8\x02\x66\x9c\x44\x1e\xe5\xdc\x20\xb0\x4a\x56\x63\x7e\x8c\x75\x4b\xda\xd0\xb8\x6e\xa9\x17\x49\x4d\x34\xb5\xfc\x67\xf4\x9d\xeb\xee\x78\x72\x70\xdd\xfd\xd3\xad\x9e\x01\x04\x92\x34\x2d\xa1\xdb\x9f\xe1\x68\x07\x8d\x27\x61\x24\x06\xd4\x4b\xa8\x2b\x97\xce\x5d\xab\x68\xcc\x71\x8c\x46\xe3\x7a\xf5\x76\xad\xf1\xff\xcd\xa8\x9b\x5d\xf9\xf2\xbe\xdb\x2c\x1c\xa2\xed\x02\x3f\x9e\xc4\x41\xca\xa7\x90\x56\x8d\xcb\x7b\x2d\x9d\x8e\x79\x57\x14\x6c\xe7\x7f\x56\xd2\xe2\x56\xd5\xcc\x7c\x90\xfe\x17\xae\x63\x1f\xdf\x37\xd6\x31\x7c\x55\xac\xbf\x29\x23\xcb\x20\x9a\xe3\x47\x32\xc2\x15\x69\x43\x4d\xdb\x2c\x8f\x51\xd3\xa4\x3d\x7f\x6c\x4d\xfb\xf8\xfe\x7f\xa9\xa6\x1d\x02\xc5\x4d\xe7\xe0\x6d\x87\x2d\x83\xe2\x66\xd9\x06\x8a\xd9\x07\x81\xad\xa1\xb8\xf3\x5b\x28\xe7\xc5\xc6\x4d\x08\x5a\x49\x4e\xcd\x97\x07\x8f\x8f\x3f\xbd\x28\x7c\x85\xa4\xbf\xe4\x93\x1f\xa2\xfd\x3b\x00\x00\xff\xff\xf6\x1c\x04\x3e\x88\x4e\x00\x00")

func index_html_bytes() ([]byte, error) {
	return bindata_read(
		_index_html,
		"index.html",
	)
}

func index_html() (*asset, error) {
	bytes, err := index_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "index.html", size: 20104, mode: os.FileMode(384), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if (err != nil) {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"defines.html": defines_html,
	"index.html": index_html,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for name := range node.Children {
		rv = append(rv, name)
	}
	return rv, nil
}

type _bintree_t struct {
	Func func() (*asset, error)
	Children map[string]*_bintree_t
}
var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"defines.html": &_bintree_t{defines_html, map[string]*_bintree_t{
	}},
	"index.html": &_bintree_t{index_html, map[string]*_bintree_t{
	}},
}}

// Restore an asset under the given directory
func RestoreAsset(dir, name string) error {
        data, err := Asset(name)
        if err != nil {
                return err
        }
        info, err := AssetInfo(name)
        if err != nil {
                return err
        }
        err = os.MkdirAll(_filePath(dir, path.Dir(name)), os.FileMode(0755))
        if err != nil {
                return err
        }
        err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
        if err != nil {
                return err
        }
        err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
        if err != nil {
                return err
        }
        return nil
}

// Restore assets under the given directory recursively
func RestoreAssets(dir, name string) error {
        children, err := AssetDir(name)
        if err != nil { // File
                return RestoreAsset(dir, name)
        } else { // Dir
                for _, child := range children {
                        err = RestoreAssets(dir, path.Join(name, child))
                        if err != nil {
                                return err
                        }
                }
        }
        return nil
}

func _filePath(dir, name string) string {
        cannonicalName := strings.Replace(name, "\\", "/", -1)
        return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

