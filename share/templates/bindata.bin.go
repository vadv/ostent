// +build bin

package templates

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
	"os"
	"time"
	"io/ioutil"
	"path"
	"path/filepath"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindata_file_info struct {
	name string
	size int64
	mode os.FileMode
	modTime time.Time
}

func (fi bindata_file_info) Name() string {
	return fi.name
}
func (fi bindata_file_info) Size() int64 {
	return fi.size
}
func (fi bindata_file_info) Mode() os.FileMode {
	return fi.mode
}
func (fi bindata_file_info) ModTime() time.Time {
	return fi.modTime
}
func (fi bindata_file_info) IsDir() bool {
	return false
}
func (fi bindata_file_info) Sys() interface{} {
	return nil
}

var _defines_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x5a\x5b\x6f\xdb\xca\x11\x7e\xcf\xaf\x58\x10\x3e\xc5\x31\x50\xd1\x3d\x07\x49\x5b\xa4\x32\x01\xc5\x92\x13\xa2\x96\x2c\xe8\xe2\xa2\x4f\x01\x45\xae\xac\xad\x29\x92\x5d\xae\x94\xa8\x82\xfe\x7b\x77\xf6\xc2\x8b\x44\x4a\x24\x25\x3b\x0f\x39\x79\x88\xb9\xbb\xc3\xb9\xed\xcc\x37\xb3\x5c\x6d\xb7\x1e\x9e\x93\x00\x23\x43\xfe\x8d\x3f\x7e\x94\x0f\x5f\x5d\x9f\x44\xc6\x6e\xb7\xdd\x5e\xdd\xa1\x8f\xb7\x28\xa4\xc8\xbc\x7b\xe8\x8c\xc7\x83\x4e\xbf\x87\x0c\xd7\x77\xe2\x98\x2f\xb7\x49\x10\xad\x18\xda\x6e\x4d\xbb\xdb\x61\x8c\xee\x76\x08\xc1\x2b\xbb\xdd\xad\xe1\x86\xbe\xef\x44\x31\x6e\xb9\x0b\xec\xbe\xcc\xc2\xef\x06\x62\x9b\x08\xf3\x85\x64\xec\x50\xe2\xb4\x16\xc4\xf3\x70\x70\x6b\x30\xba\xc2\x06\x92\x23\xab\x7d\x23\x38\x5b\x6d\xdf\x99\x61\x1f\x04\xdc\x87\x54\x49\x48\x04\x80\x8a\xb0\xd4\xff\xd7\x98\x6d\x7c\x2c\x97\x2d\x3e\x31\xc1\xdf\x19\x57\xee\x46\xbc\x6c\xbd\x7b\xb7\xdd\xe2\xc0\xdb\xed\xde\x1d\x31\x37\x5a\xd1\xf0\x5b\x2c\x2c\xfe\x46\xd8\x02\x99\x8f\x4f\xbd\xd1\xc8\xee\xf6\x60\xc6\x84\xff\xb0\x1f\xe3\x93\x0e\xd9\x6e\xa9\x13\x3c\x63\x74\x45\xfe\x8c\xae\xdc\x90\x62\xa0\x35\xbb\x0e\x73\xcc\xbb\xe1\xd4\x7c\x20\x31\x28\xc6\xe8\x76\xfb\x82\x37\x88\xb3\x32\xb8\xe4\x16\x17\x3d\xdb\xb4\x06\x86\x7c\xc5\x1c\x70\x2b\xda\xcc\x43\x82\x29\x77\x0c\xb7\xa6\x45\xc9\xf3\x82\xa1\x20\xfc\x46\x9d\xc8\xe0\x36\x26\x94\xed\x1b\xe6\x15\x53\x1b\x56\x3b\x8e\x9c\x40\xfb\x4b\xbf\x33\x8d\x31\xbd\x03\x5a\xe1\xab\x74\x0e\x58\x01\xbd\x55\x9b\xe3\x78\x13\x2b\x86\xc8\xca\xcc\x35\x67\x68\x7b\x3e\xde\x57\x11\xe6\xf6\x38\xde\x30\x6a\xa9\xad\xcd\xff\x39\xbe\xd1\xcc\x99\xf9\x18\x82\x57\x3c\x24\x4a\xc1\xe0\x37\x14\x33\x4a\x22\xdc\x92\x34\x5c\xe9\x05\x76\x40\x77\x0a\x8f\x20\x71\x01\x0f\x47\x76\x06\x3c\x29\x6d\x52\x34\xab\x80\x70\x33\x7f\x49\x15\x3f\xc5\x81\x7b\xee\x3c\x06\xe0\xa9\x93\x1c\xc0\x77\xf0\x24\xcd\x9b\x85\xde\x86\xbb\x92\xe1\x65\xe4\x3b\xec\x48\x7e\x20\x53\x44\x9c\xa0\xe7\x7f\xc1\x4b\xd6\x69\xa7\x7b\xf3\xd9\x86\xe1\xf8\x6b\xe5\x14\xbb\xd7\x29\xf6\x65\xd2\x7f\xb8\x7f\x1c\x21\x63\x1e\xd2\xd3\x70\x94\x64\x9f\x47\xe2\x97\x34\xf3\xba\xf7\x42\x7c\x51\xf6\x29\xcd\x54\x06\x7a\x84\x06\xce\x92\xa3\x90\x60\x60\x76\x09\x1d\xf0\x61\x3e\x1b\xd3\x14\x3c\xe2\x2d\x81\x4c\xbf\xc2\x1f\xc4\x6d\x91\x82\x5a\x52\x92\x87\xd7\x39\x19\x78\x0d\x32\xd0\x6f\xbf\x5f\x1f\xe6\xf2\xd9\xb2\x0a\xed\x41\x7f\x2d\x10\x95\xcd\x49\xee\x65\x41\xdf\x59\x3b\xc4\xaf\x46\xca\xc3\x9e\x87\xc0\x9f\x82\x59\x1c\xfd\xa3\x1d\xaf\xa2\x83\xbc\xd6\x54\x43\x4c\x5d\x1c\xb0\x4c\x76\xef\xad\xec\x76\x69\xa0\x0a\x46\x15\xa4\x4f\x42\xe6\x24\x8a\x36\x41\x05\x1d\xa0\x1a\x1a\x4e\x95\xbd\x5a\xc8\xa1\xc2\xfd\xea\x21\x8d\xc8\x07\x12\xbc\x00\x3e\xa6\x79\x0c\xd4\x98\x1a\x16\x4a\xff\xb5\x1d\xb4\xa0\x78\x0e\xde\x7b\xe0\x31\x7c\x3f\x36\xbf\xf0\x21\x94\x58\x94\x71\xac\x5a\xd2\x00\x8c\x90\xc5\x43\x8a\xb8\x0a\x01\x0a\x08\x1d\x8a\x59\x86\x3a\x71\xb6\x73\x80\x2d\xa7\x75\xea\x0f\x4b\x75\xe2\x4b\x19\x29\xfd\x70\x15\x30\xec\xed\x47\x85\x26\xac\xab\x13\xca\x95\x90\xbc\x4e\x9d\xa7\x8e\xfd\xa0\xd5\xca\x8b\x92\x4b\x3a\xf6\x44\x78\x2b\x37\x15\x13\x66\xd4\x3a\x4f\xa7\xe9\xb8\xd7\x4d\x3c\x95\x17\x25\x96\x92\xf2\x09\x79\xa4\x55\x2a\x24\xcc\x7a\xea\x3c\x9d\x26\x8f\x93\x4e\x89\x9f\xe4\x92\xb6\x5c\x64\x57\xb1\x9f\x14\xe1\x31\x3f\xa9\xe4\xab\x5b\x70\x72\x25\xa3\x69\xd5\x21\x41\xe8\xfd\xc8\xb2\x23\xe5\x17\xd7\x1d\xb9\xf6\x26\x85\x47\x89\x7a\x9b\xca\x53\x22\xac\x66\xe9\xb1\xe7\x14\xe3\x8a\xa4\xab\x4a\xb5\x07\xc8\x4a\x8a\x4f\x66\xa9\x49\xf5\xb1\x85\xc5\xe7\x95\x1f\x15\xa9\x8d\x5b\xd3\x7d\xc8\x56\x35\xa0\x04\xd0\x35\x1a\x9f\xc6\x0c\x89\x91\xa7\xe9\x04\x6e\x9d\x26\x93\x50\xd2\xa4\x01\xcd\x27\x73\x33\x40\x20\x6f\xdd\x86\x92\x79\x8a\x06\x76\x79\x13\x4a\x72\x4d\xa8\x4a\x1b\x32\x37\x53\x0c\xa8\x9b\x87\x44\x77\x80\x79\x66\xc5\xb9\xbe\x17\xd3\x9c\xb6\x8b\x7d\xe6\xd8\x41\x65\xd2\xc7\x15\xab\x42\x5b\x8d\x63\x86\x59\x93\x5c\x22\x7b\xad\x5c\xfd\x53\x9e\xcd\x73\x83\xce\x9d\xc3\xf4\x39\x3c\x6b\x21\x46\x98\x8f\x6f\x8d\x4f\xf6\x64\x8c\x22\x1e\xec\x31\x76\xc3\xc0\xe3\x67\xb0\xa0\xe0\x04\xd6\x26\xd6\xac\x7d\x43\xac\x28\xae\x7c\x98\x2b\x15\xc0\xbd\x74\x59\x09\x0c\x52\x13\x7d\xfa\xf7\xa4\x37\x46\xcb\xd0\x5b\xf9\x21\x7a\xff\xb9\xdc\x90\x4f\x20\xe6\x97\xf7\x9f\x2f\x25\xa7\xd4\x9e\x42\x41\x35\xc1\x83\x9c\xdf\x4c\x90\x39\xa6\x34\xa4\x3f\x0c\x3c\xa4\xf4\x62\xf4\x90\x6b\x97\x85\x0f\xc5\xf3\x67\xc4\x0f\xb5\xd1\x6f\x0a\x20\x79\xec\xd0\xbd\xcc\x41\x3e\x34\xc8\xeb\x3d\xd0\xb8\x24\xeb\x1c\x4c\x94\x32\x6e\x02\x12\x79\x60\xa8\xcc\xba\x36\x2c\x64\x73\xba\x29\x2e\x44\x8e\xfb\x82\xd9\x0f\x03\x06\x25\xbe\x18\x19\xd4\xe2\x65\xa1\x41\x33\xfd\x19\xb1\x41\x6f\xf6\x1f\xe0\x50\xad\xce\xbf\x1e\x44\x1c\xf0\x7f\x55\xa0\xc8\x25\x79\x33\xa4\x58\xe2\xe5\xe5\xaf\x98\x38\xd3\x14\x0c\xfa\xbd\x7e\x11\x0c\x70\x1a\x05\x00\x2f\x84\x6f\xb4\x78\xc9\xfc\x27\x01\x75\x15\x02\x64\x66\x4e\xe4\x10\x10\xde\x57\x39\x9a\x03\xe1\xc1\x47\xe1\x74\x5e\x1d\xb7\x01\x01\xc5\xa5\xce\xe9\xa3\x36\xbc\x78\xf6\x77\x5e\xce\xe4\x35\x6e\x7f\x0c\x0b\x7c\x72\x6c\xbd\xe8\x7c\x7c\x99\x83\xb1\x0e\xab\x66\x41\x19\xc5\x6f\x56\xb6\x22\x1a\xba\x69\xac\x0e\xc7\x42\xc5\xa2\x78\x8d\x74\xbd\x8a\x08\x44\x2b\xbc\x67\x0e\xed\x2e\xec\x4d\xf0\x5c\x76\x35\x6a\x58\xf0\xc1\x47\xd3\x1e\x0f\xcf\x84\x72\x9a\xa5\xcc\x7e\xe6\x46\x35\xab\x22\x57\x79\x15\x63\xaa\xb5\x85\x4b\xc0\xd3\xf5\x30\x55\x98\x92\x90\x12\xb6\xa9\x48\x3e\x20\xee\x89\xfc\x4b\x48\xc7\xe4\x7f\x55\x49\x47\x38\x26\x9e\xf8\x02\x56\x48\x0e\xd9\x0a\x9f\x8e\x34\xf9\x84\x2c\x0b\x38\xeb\xcf\x86\x0d\x7d\xa8\x3a\x0a\x69\x25\xf4\x14\xef\x53\x1f\x36\x49\xf7\x28\x6e\x7e\xa1\xf3\xfb\x45\x2e\x74\x72\x5f\xbf\xf2\xb7\x27\xc3\x31\x0f\xd4\xc2\x4b\x01\xb9\x92\x7c\xe5\xe7\x83\xe4\x4a\xa0\x88\xee\x8c\x2b\x81\x7d\x8d\xa6\xa5\x1a\x4d\xb3\x1a\x4d\xcb\x35\x9a\xd6\xd7\x28\x77\xc1\x74\xa0\xd1\xb8\x37\x2a\xba\xa4\x50\x2b\xfa\x53\x2e\x0c\x0a\xef\x4d\x34\x5d\xf3\xab\x9c\x83\x5d\x1b\xd9\x65\xbb\xc6\x57\xd2\x5d\x4b\xf5\x29\xa4\xbb\xe0\xae\x0d\xec\xbb\x5e\xb1\x8f\xc4\x8a\x36\x7b\x60\x97\x6a\x24\xe9\x2e\xe7\xa3\x27\x7b\x34\x29\xd6\x48\xac\x68\x21\x30\x28\xd9\x35\x49\x77\x39\x8d\x46\xbd\x71\xc9\xae\xc1\x4a\xb2\x11\x7c\x50\x16\xd9\x82\xae\xc9\xae\x69\xe8\xdc\xd3\x68\x62\xf7\x4b\x76\x4d\xac\x24\xb7\x6f\x7c\x50\xe2\x23\x49\x57\xcb\x47\x47\x73\x0d\x30\xb1\x24\x8e\x3a\x19\x8d\xee\x1e\xfb\xfd\xce\xa0\x7b\x78\x97\xab\xe9\x5e\xe1\x3a\x50\xf5\x29\xcd\x9a\x1c\x5e\x9a\x23\xd9\x6f\x56\xa8\x04\x59\xab\x0c\xde\x03\x29\x43\xa0\xf2\x99\x4f\x8e\xbf\xc2\xe9\x15\xd1\x69\xc9\xeb\x67\xf1\x85\x41\x54\x18\x8a\x78\x83\x73\x6b\xe8\x29\x59\x36\x43\x1f\x38\xdd\x1a\x1f\x04\x7f\x51\x4a\x9e\x9c\x67\xde\x31\xb1\x1e\x50\x15\x14\xbf\xa3\xd2\x92\x66\xee\xec\x6e\x6d\xe9\xb8\x8b\xb4\xbc\x29\x9d\xfa\x7c\x12\x24\x16\x75\x6d\x6b\x49\xa2\x5a\xb7\xd5\x4a\xf4\x6e\xc0\xc5\x9c\x8a\x36\x2b\xdb\x62\xd5\xec\x0c\x34\xeb\x7d\xa6\xe8\x6f\xd7\x87\xed\x1b\x1c\x15\x80\x40\x7e\xe2\x28\x5b\x1d\xd2\x70\xcd\xdb\x1d\x5a\x44\xd1\x48\x37\xde\x69\x30\xac\x95\x1b\xc3\x00\xfd\xbd\x50\xbb\x46\xdc\xe7\xc4\xc7\x91\xc3\x16\x5a\x80\xda\x0f\x98\xfe\x0a\xf3\xe8\xc3\x5f\x8e\x34\x4a\x47\x43\x26\xe6\xbd\x8c\xbb\xa8\x72\x02\x20\x73\x84\xff\x8b\xd4\xef\x34\x7f\xfd\x4f\x1c\x06\xe8\x30\x62\xbd\x6b\x20\x2d\x37\x52\x87\x3f\xca\xb1\x3e\x46\x9f\x24\x7e\xdd\xee\x6f\xfd\xbc\x77\xd6\x23\x1e\xa4\x9f\x9c\xac\x73\xf0\x23\xc9\xd1\xcd\x82\x0e\x35\x19\x44\x2a\x88\x92\x09\x11\x04\xc9\xc8\x23\x14\xbb\x2c\xa4\x9b\x46\xe7\xba\x64\x67\x6a\x62\x1e\x87\x6f\x8a\x63\xd8\xd0\xb6\x47\xd6\xda\x4c\xf1\x6b\xda\x16\xf7\xe5\x2a\x42\x99\xe7\x56\xbc\x44\xea\x05\x39\xa1\x7f\x90\x79\xf8\x5a\xcb\xf1\xbc\x30\x30\xac\x91\x24\xd7\xb8\x2e\x7f\x00\xac\xc8\x39\xc4\x2c\x5b\x6e\x18\x30\x1a\xfa\x09\x5f\x41\xa1\x7f\xfb\x0b\x05\xd1\x40\xdc\x64\x17\x2f\x42\x9f\xfb\x4e\x60\x6c\x17\xcf\x9d\x95\xcf\x54\x90\x71\x73\x74\x74\xc9\xf9\x6b\x3d\x1e\x62\x7e\x52\x82\x08\x33\xd0\x1a\xa0\x58\xbc\x2c\x27\x93\x80\xe0\x16\xdc\x70\xc3\x13\x17\xfd\x3f\x00\x00\xff\xff\xc0\xe3\xfa\x22\xe3\x2c\x00\x00")

func defines_html_bytes() ([]byte, error) {
	return bindata_read(
		_defines_html,
		"defines.html",
	)
}

func defines_html() (*asset, error) {
	bytes, err := defines_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "defines.html", size: 11491, mode: os.FileMode(384), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _index_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x5c\x6d\x93\xda\xc6\x93\x7f\xef\x4f\x31\x27\x3b\x57\x71\x55\x24\xce\xbe\xe4\x92\x72\x58\xaa\xf0\xc2\xda\x54\xf6\x81\x5a\x58\xe7\xf2\x2a\x25\xa4\x01\xc6\x2b\x24\x45\x1a\x58\x6f\xb6\xf8\xee\xff\xee\x79\xd0\x13\x92\x10\x5a\xd6\x8e\x93\xb8\xca\x8b\x34\xd3\x33\xdd\xd3\xd3\xfd\xeb\x6e\x8d\xe0\xe1\xc1\xa5\x73\xe6\x53\x62\xc8\xcf\xf8\xcd\x1b\x79\xf1\xbb\xe3\xb1\xd0\xd8\x6e\x1f\x1e\x5e\x9c\x92\x37\x27\x24\x88\x88\x75\x7a\xde\x9f\x4c\x2e\xfb\x17\x43\x62\x38\x9e\x1d\xc7\xd0\xdd\x65\x7e\xb8\xe6\xe4\xe1\xc1\x1a\x0d\xfa\x9c\x47\xdb\x2d\x21\x38\x64\xbb\x3d\x31\x9c\xc0\xf3\xec\x30\xa6\xa6\xb3\xa4\xce\xed\x2c\xf8\x64\x10\x7e\x1f\x52\xe8\x48\xee\xed\x88\xd9\xe6\x92\xb9\x2e\xf5\x4f\x0c\x1e\xad\xa9\x41\xe4\x5d\xaf\xdb\x11\x33\xf7\xba\x9e\x3d\xa3\x1e\x32\x38\x0b\x22\xc5\x21\x61\x80\x22\x62\xd7\xc5\xaf\x13\x7e\xef\x51\xd9\xdd\x83\x86\x29\xfd\xc4\x41\xb8\x8e\x18\xdc\x7b\xf6\xec\xe1\x81\xfa\xee\x76\xfb\xac\x66\xb9\xe1\x3a\x0a\xee\x62\xb1\xe2\x3b\xc6\x97\xc4\xba\xfa\x30\xbc\xbe\x1e\x0d\x86\xd8\x62\xe1\x1f\xea\xc5\x74\xaf\x42\x1e\x1e\x22\xdb\x5f\x50\xf2\x82\x7d\x47\x5e\x38\x41\x44\x91\xd6\x1a\xd8\xdc\xb6\x4e\xc7\x37\xd6\x39\x8b\x51\x30\x1e\x3d\x3c\xdc\xd2\x7b\x02\x53\x19\xc0\xd9\x04\xd6\xb3\x7b\xf3\xd2\x90\x43\xac\x4b\x58\x45\x97\xbb\x44\x4c\x0a\x8a\x81\xd5\x98\x11\x5b\x2c\x39\xf1\x83\xbb\xc8\x0e\x0d\x58\x63\x42\xd9\xed\x70\xb7\x9c\xda\xe8\x75\xe3\xd0\xf6\xb5\xbe\xf4\x98\x9b\x98\x46\xa7\x48\x2b\x74\x95\xb6\xe1\x54\x48\xdf\x3b\x78\xc6\xc9\x7d\xac\x26\x24\xbd\x4c\x5b\xfb\x09\x47\xae\x47\x8b\x22\x62\x5b\x61\xc6\x0e\x8f\x7a\x6a\x6b\xf3\x1f\xf5\x1b\xcd\xed\x99\x47\xd1\x78\xc5\x45\x22\x14\xde\xbc\x22\x31\x8f\x58\x48\x4d\x49\x03\x42\x2f\xa9\x8d\xb2\x47\x78\x89\x1c\x97\x78\x51\xb3\x33\xa8\x49\xb9\x26\x45\xb3\xf6\x19\x2c\xf3\x9b\x54\xf0\x7d\x33\x80\xe6\x1e\x37\x01\x6a\x6a\xef\x0c\xa8\x3b\xbc\x92\xcb\x9b\x05\xee\x3d\xa8\x92\xd3\x55\xe8\xd9\xbc\xc6\x3f\x88\x25\x2c\x4e\xd0\xc3\x27\x6a\xa9\xb7\x5f\xe9\xee\x7c\x76\xcf\x69\xfc\x7b\x63\x17\x3b\xd3\x2e\xf6\x7e\x7a\x71\x7e\x76\x75\x4d\x8c\x79\x10\xed\x87\xa3\xc4\xfb\x5c\x16\xdf\xa6\x9e\x37\x38\x13\xec\xcb\xbc\x4f\x49\xa6\x3c\xd0\x65\x91\x6f\xaf\x00\x85\xc4\x04\xd6\x80\x45\x97\x70\x9b\xf7\xc6\xd4\x05\x6b\xb4\x25\x90\xe9\x5b\xfc\x20\xb0\x16\xc9\xc8\x94\x9c\x5c\xba\xc9\xf1\xa0\x1b\xe4\x41\x5e\xbd\x7e\xb9\xeb\xcb\x8f\xe6\x55\xba\x1e\xf2\x7f\x25\xac\xb2\x3e\x09\x5a\x16\xf4\xfd\x8d\xcd\xbc\x66\xa4\x60\xf6\x60\x02\xff\xed\xcf\xe2\xf0\xe7\x6e\xbc\x0e\x77\xfc\x5a\x53\x8d\x69\xe4\x50\x9f\x67\xbc\xbb\xd0\xb3\xdd\xa6\x86\x2a\x26\x6a\xc0\x7d\x1a\x70\x3b\x11\xb4\x0d\x2a\x68\x03\xd5\xd0\xb0\x2f\xec\x1d\x84\x1c\xca\xdc\x5f\x9c\xa7\x16\x79\xce\xfc\x5b\xc4\xc7\xd4\x8f\x91\x9a\x46\x46\x8f\xa4\xff\xba\x36\x59\x46\x74\x8e\xda\x3b\x07\x1b\x3e\x9b\x58\xef\xe1\x16\x43\x2c\xc9\x28\x56\x75\x69\x00\x26\xa4\x07\x26\xc5\x1c\x85\x00\x25\x84\x76\x44\x79\x86\x3a\x51\xb6\xbd\x83\x2d\xfb\x65\xba\x18\x57\xca\x04\x5d\x19\x2e\x17\xc1\xda\xe7\xd4\x2d\x5a\x85\x26\x3c\x54\x26\x92\x0b\x21\x79\x99\xfa\x1f\xfa\xa3\x73\x2d\x56\x9e\x95\xec\xd2\xb6\x27\xcc\x5b\xa9\xa9\x9c\x30\x23\xd6\xe3\x64\xba\x99\x0c\x07\x89\xa6\xf2\xac\x44\x57\x12\x3e\xd1\x8f\xb4\x48\xa5\x84\x59\x4d\x3d\x4e\xa6\xe9\xd5\xb4\x5f\xa1\x27\xd9\xa5\x57\x2e\xbc\xab\x5c\x4f\x8a\xb0\x4e\x4f\xca\xf9\x0e\x0d\x38\xb9\x90\xd1\x36\xea\x30\x3f\x70\xbf\x64\xd8\x91\xfc\xcb\xe3\x8e\xec\xfb\x2c\x81\x47\xb1\xfa\x3c\x91\xa7\x82\xd9\x81\xa1\x67\x34\x8f\x28\x6d\x48\xba\x6e\x14\x7b\x90\xac\x22\xf8\x64\xba\xda\x44\x9f\x91\x58\xf1\xe3\xc2\x8f\xb2\xd4\xd6\xa9\x69\x11\xb2\x55\x0c\xa8\x00\x74\x8d\xc6\xfb\x31\x43\x62\xe4\x7e\x3a\x81\x5b\xfb\xc9\x24\x94\xb4\x49\x40\xf3\xce\xdc\x0e\x10\xd8\xe7\x4e\x43\xd9\x3c\x45\x83\x51\x75\x12\xca\x72\x49\xa8\x72\x1b\x36\xb7\x52\x0c\x38\xd4\x0f\x99\xce\x00\xf3\x93\x95\xfb\x7a\xc1\xa6\x81\x76\x40\x3d\x6e\x8f\xfc\xc6\xa4\x57\x6b\xde\x84\xb6\xd9\x8c\x99\xc9\xda\xf8\x12\x2b\xa4\x72\x87\x57\x79\x23\xf0\x8d\x68\x6e\xef\xba\xcf\x6e\xad\x45\x38\xe3\x1e\x3d\x31\xde\x8e\xa6\x13\x12\x82\xb1\xc7\xd4\x09\x7c\x17\x6a\x30\xbf\xa4\x02\xeb\xb2\xde\xac\xdb\x61\xbd\x30\x6e\x5c\xcc\x55\x32\x00\x2d\x1d\x97\x03\x47\xd7\x24\x6f\x7f\x9b\x0e\x27\x64\x15\xb8\x6b\x2f\x20\xdf\xbf\xab\x5e\xc8\x5b\x64\xf3\xcd\xf7\xef\x8e\xc5\xa7\x72\x3d\xa5\x8c\x0e\x04\x0f\xf6\xf8\x64\x82\xcd\x69\x14\x05\xd1\x17\x03\x0f\xc9\xbd\x1c\x3d\x64\xdf\x71\xe1\x43\xcd\xf9\x4f\xc4\x0f\xb5\xd1\x9f\x15\x40\xf2\xd8\xa1\x73\x99\x1d\x7f\x68\xe1\xd7\x05\xd0\x38\xe6\xd4\x39\x98\xa8\x9c\xb8\x0d\x48\xe4\x81\xa1\xf1\xd4\x07\xc3\x42\xd6\xa7\xdb\xe2\x42\x68\x3b\xb7\x94\x7f\x31\x60\x50\xec\xcb\x91\x41\x75\x1e\x17\x1a\xf4\xa4\xff\x44\x6c\xd0\x9b\xfd\x2f\x38\x34\x8b\xf3\x4f\x07\x11\x3b\xf3\x3f\x29\x50\xe4\x9c\xbc\x1d\x52\xac\xe8\xea\xf8\x47\x4c\x30\x69\x0a\x06\x17\xc3\x8b\x32\x18\x00\x1a\x05\x00\xb7\x0c\x36\x5a\x0c\xb2\x7e\x61\x28\xae\x42\x80\x4c\xcb\x1e\x1f\x42\xc2\xb3\x26\xa5\x39\x12\xee\x3c\x14\x4e\xdb\x55\xb9\x8d\x08\x28\x0e\x75\xf6\x97\xda\x38\xf0\xd1\xcf\x79\x61\x92\xa7\x38\xfd\x31\x7a\xa8\x93\xba\xfe\xb2\xfa\xf8\x38\x85\xb1\x36\xab\x76\x46\x19\xc6\x9f\x2d\x6c\x85\x51\xe0\xa4\xb6\x3a\x9e\x08\x11\xcb\xec\x35\xd4\xf1\x2a\x64\x68\xad\x38\xce\x1a\x8f\x06\xb8\x37\xfe\xa2\xea\x68\xd4\xe8\xe1\x03\x1f\x4d\x5b\x6f\x9e\x09\xe5\x4d\x96\x32\xfb\x98\x9b\x1c\x18\x15\x41\xe4\x75\x4c\x23\x2d\x2d\x1e\x02\xee\x8f\x87\xa9\xc0\x11\x0b\x22\xc6\xef\x1b\x92\x5f\x32\x67\x8f\xff\x25\xa4\x13\xf6\x67\x53\xd2\x6b\x1a\x33\x57\x3c\x01\x2b\x25\x47\x6f\xc5\x47\x47\x9a\x7c\xca\x56\x25\x33\xeb\xc7\x86\x2d\x75\xa8\x32\x0a\xb9\x4a\xcc\x29\xbe\x4f\x75\xd8\xc6\xdd\xc3\xb8\xfd\x81\xce\xeb\xa3\x1c\xe8\xe4\x9e\x7e\xe5\x4f\x4f\xc6\x13\x30\xd4\xd2\x43\x01\xd9\x93\x3c\xe5\x87\x9b\xe4\x48\xa0\x8c\xee\x11\x47\x02\x45\x89\x6e\x2a\x25\xba\xc9\x4a\x74\x53\x2d\xd1\xcd\xe1\x12\xe5\x0e\x98\x76\x24\x9a\x0c\xaf\xcb\x0e\x29\x54\x8f\x7e\x94\x8b\x37\xa5\xe7\x26\x9a\xae\xfd\x51\xce\xce\xae\x5d\x8f\xaa\x76\x0d\x7a\xd2\x5d\x4b\xe5\x29\xa5\x3b\xe2\xae\x5d\x8e\x4e\x87\xe5\x3a\x12\x3d\x7a\xd9\x97\xa3\x4a\x89\x24\xdd\xf1\x74\xf4\x61\x74\x3d\x2d\x97\x48\xf4\x68\x26\x78\x53\xb1\x6b\x92\xee\x78\x12\x5d\x0f\x27\x15\xbb\x86\x3d\xc9\x46\xc0\x4d\x95\x65\x0b\xba\x36\xbb\xa6\xa1\xb3\x20\xd1\x74\x74\x51\xb1\x6b\xa2\x27\x39\x7d\x83\x9b\x0a\x1d\x49\xba\x83\x74\x54\xeb\x6b\x88\x89\x15\x76\xd4\xcf\x48\x74\x7a\x75\x71\xd1\xbf\x1c\xec\x9e\xe5\x6a\xba\x27\x38\x0e\x54\x79\x4a\xbb\x24\x07\x42\x73\x28\xf3\xcd\x06\x91\x20\xbb\x2a\x03\x72\x20\xb5\x10\x8c\x7c\xd6\x07\xdb\x5b\xd3\xf4\x88\x68\x3f\xe7\xcd\x42\x3c\x61\x10\x11\x26\x22\x90\xe0\x9c\x18\xba\x49\x86\xcd\xc0\xc3\x99\x4e\x8c\x1f\xc4\xfc\x22\x94\x7c\xb0\x17\x90\x31\xf1\x21\x52\x95\x04\xbf\x5a\x6e\x49\x32\xf7\xe8\x6c\x6d\x65\x3b\xcb\x34\xbc\x29\x99\x2e\xa0\x11\x39\x96\x65\x6d\x1b\x49\xa2\x52\xb7\xf5\x5a\xe4\x6e\x38\x8b\x75\x23\xd2\xac\x6c\x8a\x75\x60\x66\xa0\xa7\x2e\x4e\x4a\x7e\x7c\xb9\x9b\xbe\x61\xa9\x80\x04\xf2\x11\x47\x55\xef\x38\x0a\x36\x90\xee\x44\x65\x14\xad\x64\x83\x4c\x83\x53\x2d\xdc\x04\x6f\xc8\x4f\xa5\xd2\xb5\x9a\x7d\xce\x3c\x1a\xda\x7c\xa9\x19\xa8\xfd\xc0\xe6\xdf\xb1\x9d\xfc\xf0\x3f\x35\x89\x52\xad\xc9\xc4\x90\xcb\x38\xcb\x26\x15\x00\x9b\x13\xfa\x07\x51\xef\x69\x7e\xfb\x31\x0e\x7c\xb2\x6b\xb1\xee\x4b\x24\xad\x5e\xa4\x36\x7f\x92\x9b\xba\x8e\x3e\x71\xfc\x43\xb3\xbf\xcd\xa2\x50\xeb\x31\x17\xdd\x4f\x36\x1e\x52\xf8\xb1\xa4\x74\xeb\x61\x86\x9a\xdc\x84\xca\x88\x92\x06\x61\x04\xc9\x9d\xcb\x22\xea\xf0\x20\xba\x6f\x55\xd7\x25\x3b\x73\x20\xe6\x01\x7c\x47\x34\xc6\x0d\xed\xba\x6c\xa3\x97\x29\xde\xa6\x35\x41\x97\xeb\x90\x64\xae\xcd\x78\x45\xd4\x00\xd9\xa0\x5f\xc8\xdc\x1d\x66\xda\xae\x1b\xf8\x46\xef\x5a\x92\x6b\x5c\x97\x2f\x00\x2b\x72\x80\x98\x95\xe9\x04\x3e\x8f\x02\x2f\x99\x57\x50\xe8\x77\x7f\x31\x20\x1a\x04\x96\xec\xd0\x65\xe0\x81\xee\x04\xc6\x0e\xe8\xdc\x5e\x7b\x5c\x19\x19\x2c\x47\x5b\x97\x6c\x7f\xa9\xef\xc7\x14\x2a\x25\xb4\x30\x83\x6c\x10\x8a\xc5\x60\xd9\x98\x18\x04\xac\xa0\x03\x0b\x4f\x54\xd4\xfd\xaf\xc1\xd5\xe9\xf4\xb7\xf1\x90\x2c\xf9\xca\xeb\x75\xd5\x5f\xb1\x0b\x2b\xca\x6d\xe2\x2c\xed\x28\xa6\xfc\xc4\x58\xf3\xb9\xf9\x93\xa1\x5a\x97\x9c\x87\x26\xfd\x63\xcd\x36\x27\xc6\xff\x9b\x37\x7d\xf3\x34\x58\x81\xa7\x31\x69\x3b\xb0\x44\x88\x26\x27\xc6\x68\x78\x42\xdd\x05\xd5\x83\xd0\x3a\xc0\xc4\x18\xbd\x0b\x83\x88\x67\xe8\xee\x98\xcb\x97\x27\xae\x38\x94\x37\xc5\xcd\x77\xb0\x0d\x8c\x33\xdb\x33\x63\xc7\xf6\xe8\xc9\x2b\xb4\x3a\x7c\xb2\x95\xc4\x81\xf7\x41\xcc\x7d\x01\x62\x04\xae\x60\x1a\xd8\x7c\x41\xd0\xf5\xa0\xd8\x00\xf5\x7a\xb0\x3f\xc0\x41\xab\x96\xad\xec\x05\xed\x84\xfe\xc2\x90\x41\xdd\xe8\xcc\xed\x0d\x12\x58\xd8\x96\x1d\x15\xe3\xdb\xd2\xf1\x92\xd2\xdc\xb6\x74\x1c\x88\x00\x7a\x28\x5c\x77\x98\xef\xd2\x4f\x16\xb6\x82\x51\x38\xe0\x1f\x3c\x4b\xfd\xd1\xde\xd8\xb2\xd5\x28\xaa\x90\xc4\x91\x03\x73\x7c\x8c\x3b\x11\x6a\x30\xa2\x70\xf5\xda\x7a\x65\xbd\xfa\x51\x37\x58\x2b\xe6\x5b\x1f\x81\x9d\x0b\x2b\x35\x57\x36\xf3\x25\xbd\xd8\x7f\x6b\xda\x7f\xf7\x6e\x38\x98\x31\x7f\xbb\x05\x3a\x25\x87\x1c\xa1\x21\x03\x38\x74\x56\xcc\xbb\x55\x9d\xa2\x43\xef\xbe\x94\x0a\x2e\xe4\x26\x4b\xc7\x41\x5f\x40\xff\x07\x74\xc5\x3c\x40\x19\x49\xd7\xb7\x13\x17\x81\xcb\x99\x1d\x11\xf9\x61\xba\xd2\xf4\xf4\xed\x9c\x7d\xa2\xae\xc9\x03\x00\x68\xb0\x6d\x2a\xa8\xd9\x02\xec\x01\x5d\x22\xeb\x68\xb8\xe5\xb0\x1c\x0a\x43\x3c\x0c\x57\xb9\x4e\x35\x99\x4e\xc5\x4a\xba\x66\x00\xa4\xae\x48\x15\x51\xd8\xa5\x32\x81\x64\x5b\x94\xc2\x84\xff\xac\x84\x65\xcd\x02\xce\x83\x95\x6a\xe7\xc1\x62\x21\x1e\xeb\x06\x61\xb0\xc1\xc7\x11\xb2\x15\x52\xe2\x05\x7a\xda\x12\x1b\xc9\x3c\x70\xd6\x5a\xf3\x89\xb4\x27\xc6\x73\x97\x21\x08\xce\xcc\xfc\xe0\xc4\x84\xa3\xb5\xef\x33\x7f\x41\xb4\x79\x0e\x46\x93\xe9\xf5\xe8\xad\xca\x8c\x0a\x16\x2b\xd3\x3d\xa1\x61\x01\x27\xb8\x98\xe2\xfc\x69\x6a\x28\xe8\xf4\x06\x29\x45\xe8\x6f\x0f\x18\xa9\x62\x65\x03\x29\x12\xa4\x43\xd7\x21\x67\x2b\x6a\x86\x90\x7f\xfa\x7c\x67\xa0\xd1\x93\xfd\xd9\x87\xc4\xe9\xa8\x74\x15\x37\xe2\x3e\xf3\xaa\xb9\x10\x6f\xed\x65\x76\x4a\xcb\x00\x1f\xc2\xb1\xc4\x3c\x18\xbc\xf3\x9b\x29\xc0\x2e\x99\x77\x34\x16\x5f\x49\x60\xc9\x00\xcf\xae\x1f\x70\xde\xd7\x03\x3a\x6b\xaf\x5a\x02\x7d\xa9\xdf\xf2\x83\xd9\xcb\x66\xcd\x8c\xf7\x60\x27\x00\x96\x3d\x0c\x1c\x85\x95\x24\x45\x8a\xf1\x1c\x8d\xbd\x87\x7f\xe5\x66\x4a\xc1\x33\xfd\x21\xe0\xc2\x73\x3c\x18\x28\xed\xdd\x00\xe4\x3c\x57\xe9\x4b\x4a\x22\x16\xa2\x75\xa0\xa4\xb1\x1d\xce\x36\x34\x2d\x8f\x0c\x84\xde\xf8\x4d\xa7\x73\x77\x77\x67\x81\x45\x45\xf0\xdf\x72\x82\x55\x47\xa2\x20\x40\x88\x47\xed\x98\xc6\x1d\x8c\x9b\x31\x4f\x0e\x04\xc0\xa6\x62\x70\xc7\xc4\x40\x21\x8d\x99\x8c\xae\x2e\xd1\x40\xaf\x26\xd3\xe1\xe5\xb4\x28\x86\xd8\x57\xf5\x17\xd6\x9f\xda\x91\x70\xf3\x72\x7f\x26\x21\x84\x41\x70\x03\x84\x82\x98\x6e\x40\x9e\x7b\x88\xb5\x39\x4f\x86\x7c\x25\xdf\x30\xf3\x02\xe7\x16\x53\x7d\x73\xe5\x9a\xaf\xf5\x45\x30\x9f\x03\x64\x9a\xaf\xf2\xb4\x60\x71\xd4\xc3\x36\xf9\xbd\x97\x82\x09\x9b\xb2\x55\x10\x09\x14\x41\x87\x9c\x71\xdf\x14\x2c\x0c\x70\x6d\x70\x64\x77\xbd\x5a\xdd\xaf\xe8\x0a\x24\x9f\xb3\x45\xfa\x65\x1b\xe8\x34\x63\x84\xff\xe7\x49\xa7\x50\xba\x96\x12\xa6\x91\xc0\x24\x67\x4b\xf2\xbd\xb9\xed\xc5\x85\x84\xef\x54\x80\xa8\xf5\x1e\x92\x1f\x39\xd1\xc5\xf0\x02\xa2\x32\x91\x5b\xa9\xa1\x58\x9b\x02\xb0\x33\x7a\x17\x74\x25\x32\x21\x5b\xa7\x0c\x02\x12\x2a\x44\x2d\x2e\xbb\xdd\x37\x88\xe4\xb7\x7f\xf2\x19\xca\xe3\xa6\xcc\x01\x55\xaa\x45\x3d\x79\x4d\x8a\x5c\xa1\xb1\x44\x1c\xc9\x21\x0d\x62\x98\x49\x25\x95\x7b\x10\xb1\x3f\xd1\x0c\x3d\x53\x34\xcf\x20\xcb\xc6\x5d\x12\xc8\x2f\x9a\xf2\x36\x24\xb2\x30\x99\xb3\xa1\xb5\xd2\x42\x10\xc2\x8d\x96\x89\x60\x72\x05\x69\x60\x21\x82\xcc\xd6\x30\xb9\x1f\x17\x0d\x11\x46\x88\x51\x3a\x3a\xe6\x0d\xb3\x60\x63\x86\xd6\x7d\x41\xc3\xbd\xf7\x62\xb1\xc9\x06\xd5\x71\xd0\x09\xe1\x1e\x2b\x9c\xfc\xda\x1f\x57\x1b\x20\x28\x97\xc6\x77\xf8\x5c\xba\x5a\x20\x4a\x90\xe2\xd9\xb3\x44\xaa\x2c\x3c\xd4\x2b\x57\x17\x4e\x59\xa1\x54\x96\x0c\xbb\x5c\x51\xde\xe8\x34\x3d\x53\xd8\x68\x96\xc8\x62\x87\x7f\xce\xee\x0e\xb4\xb8\x3d\xb6\x96\x44\x42\x3c\x28\x54\x15\xd0\x9e\x13\x27\x55\x43\x59\xc5\x28\xb9\xfb\xb7\x0a\x07\xff\xf7\x69\x70\x8f\xcd\xab\x61\x4f\xf7\x1d\x0d\xf5\x46\x67\xd5\x36\xc7\xe6\x69\x20\x57\x03\xa7\xf6\x6c\x74\x66\x4d\x31\x5a\xa9\x0c\xa9\x80\x84\xbb\xc2\x7f\x15\x40\x98\xe8\xb5\x0d\x0e\x0a\x1d\xb6\x81\xc1\x2f\x86\x79\x20\x23\x13\x05\xd5\x71\xc0\xad\xde\xd8\x86\x9f\xc0\xe8\x5d\xf4\x36\x69\x6c\x90\x44\xe3\x8d\x5b\x66\x6e\x15\x02\x15\xac\x50\xce\x88\x39\xe1\xe8\x0c\xca\xe3\x23\x03\x1e\xce\xd9\x0e\xef\x76\xd2\x5b\x84\xa2\x38\x97\xcf\xb2\xb9\xa9\x9f\x89\xc8\x8d\xb3\x67\x68\x7f\x49\x82\x7d\x36\xed\xbf\x9d\x58\xec\x6c\xdc\x3f\xfd\x65\x38\x9d\x58\x37\x0c\x8f\x33\x33\x99\xe5\xf3\xe4\x45\x0e\xa3\x37\x96\x17\xd9\xf4\xf5\x50\x3e\xc3\xeb\xeb\xab\xeb\x72\x36\xf2\xc5\x32\xa3\x27\x9e\x89\xd5\x33\x51\x00\xb2\x87\x97\x78\x61\xb6\x94\x95\x78\xb5\xd5\xe8\xbd\xc5\x8f\x9a\x14\xb7\xe0\xb2\x5a\x0f\x19\x71\x80\x75\xf1\xf9\x4b\xa5\x5a\x5f\x96\x19\xab\x04\x38\xd1\x0d\xa6\x5a\xe1\xd4\x6a\x99\x32\x67\xaf\xdc\x3a\x85\x92\x87\x6e\x74\x12\xca\xd2\x57\xdf\x1a\x04\xb4\xe2\x6b\x5d\xbb\x71\x2d\xd5\x9b\xda\xd8\x03\xd4\x96\xb1\x92\xa7\xd2\x9a\x62\xd1\x4c\x69\x45\xab\xcd\xe8\x4c\xbd\xf4\xdb\x48\x65\xb9\xb7\x64\xeb\x34\x26\xed\xf3\x00\x85\xa5\xa6\xfe\x54\xfa\x92\x1c\x9a\xa9\xab\xe0\x78\x19\x6d\xc9\x6f\x58\x34\x52\x56\xf6\x2b\x09\x8f\xc9\x9a\x5e\x3f\x4d\xd6\xe4\x84\xeb\xea\xb4\x29\xe9\x3c\x5a\xde\x74\x3a\xbe\xa9\x4e\x9c\x80\x9d\xd1\x03\x8a\xb2\x04\xa9\x44\xce\xaf\x22\x43\x4a\x55\xd8\x26\x45\x92\xea\xfa\xfb\x96\x8a\x62\xc7\x3f\x73\x36\xa5\x4c\xb0\x2a\x9d\xaa\x13\xa9\x32\x9f\x82\x39\x8f\x9f\x50\x89\x49\x8f\x5c\x41\xe2\xea\x0e\x33\xc4\x3d\x26\x98\x80\x22\xfe\x98\x49\x03\x40\x4c\x7e\x84\xe3\x2f\x58\x41\xba\x35\x15\xa4\x7b\xec\x0a\x72\x50\x53\x41\xba\xa5\x15\xe4\xa0\xb6\x82\xdc\x15\xfe\xab\xc0\x47\xf7\x31\x15\xe4\xe0\xdf\x0a\xb2\x19\xe6\x0d\x6a\x2b\x48\xb7\x45\x05\x39\x78\x82\x0a\x72\xf0\x94\x15\xa4\x5b\x5f\xd9\x0d\x64\xd2\xe7\x9e\x8d\x2e\xaf\x06\xa5\xe5\x96\xfe\x1a\x32\x7e\x9d\x01\x3f\xcb\x2a\x3b\xb7\x51\x65\x97\xf0\xaa\xaa\xec\xdc\x56\x95\x5d\x22\x60\x46\x9a\x8a\x84\xbb\x6c\xb5\x55\x19\xf7\xa0\x5d\xc6\x5d\x64\x51\x9b\x72\x57\x6a\x3f\x3d\x42\xd4\xbf\x9a\xd0\x20\xc6\x14\xbe\x53\x5f\x5d\xa1\xb8\x85\x0a\xa5\x81\xc2\xf6\x57\x28\x8f\xd5\x57\x83\x0a\xa5\xca\x80\x32\xda\x6a\x5c\xa1\xb8\x07\x57\x28\x15\xbe\x5e\x7b\xfc\x5d\x7f\x32\xf6\x53\xe1\x64\xec\x89\x6a\x9d\x30\xae\x8e\xef\xba\xef\x68\xf1\x7d\x3c\xa9\x8e\xef\x78\x7e\x3a\x8e\x02\x87\xc6\xb1\x72\xef\x42\x30\xdf\x95\xf4\xab\x08\xe6\x89\x12\xdb\x04\x73\xa1\xb0\x46\xc1\x5c\x9e\x5f\x57\x95\x39\xf9\x1f\xbe\x69\x1d\x8c\xc6\x93\x83\x83\xd1\x5f\xad\xba\x42\x33\x6b\x91\x68\x78\x60\x96\xa4\x2a\xdb\xa8\xdc\xc8\xf1\xc4\x0f\xf8\x80\x3a\x11\xb5\x45\x96\x51\x97\x70\x84\x31\xf2\xa8\x14\xce\x2c\x97\x6b\x85\xbf\xa9\xd8\x4e\xae\x34\x13\xaa\x17\x0b\x59\x34\xcd\x85\xc6\x93\xd0\x5b\xc7\xf2\xf7\x26\x2b\x32\xa1\x7d\xd5\x58\x18\x1f\xe8\x29\xf5\x3e\x92\xc0\x7f\xd8\x08\xf9\xf5\x57\x64\xfe\xd6\x98\xbf\x59\x54\x63\xbe\xee\x3b\x1a\xe6\x7f\x78\x57\x8d\xf9\xf8\x56\x8c\x7a\x5b\x96\x2c\xbc\x60\x86\xaf\xff\x71\x9b\xaf\x4b\xf1\x7f\x57\xea\xaf\x02\xff\x13\x85\xb6\xc1\x7f\xa1\xbc\xbf\x0e\xfe\x7f\x78\xf7\xd5\xe3\xff\x66\x5f\xa1\xd9\x12\xb6\x36\x87\x6e\x70\xfd\xd6\x26\xb0\xb5\x59\x34\x81\xad\xe4\x35\xee\x03\x61\xab\xf6\x3d\xd6\xde\xb3\x8d\x1d\x11\x94\x9b\x9c\xe8\xd7\xc8\xb6\xdb\x9f\x9f\x65\x5e\x29\x55\x6f\x61\x8b\x97\x88\xff\x13\x00\x00\xff\xff\x4b\x0b\x68\x1f\x3d\x59\x00\x00")

func index_html_bytes() ([]byte, error) {
	return bindata_read(
		_index_html,
		"index.html",
	)
}

func index_html() (*asset, error) {
	bytes, err := index_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "index.html", size: 22845, mode: os.FileMode(384), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if (err != nil) {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"defines.html": defines_html,
	"index.html": index_html,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type _bintree_t struct {
	Func func() (*asset, error)
	Children map[string]*_bintree_t
}
var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"defines.html": &_bintree_t{defines_html, map[string]*_bintree_t{
	}},
	"index.html": &_bintree_t{index_html, map[string]*_bintree_t{
	}},
}}

// Restore an asset under the given directory
func RestoreAsset(dir, name string) error {
        data, err := Asset(name)
        if err != nil {
                return err
        }
        info, err := AssetInfo(name)
        if err != nil {
                return err
        }
        err = os.MkdirAll(_filePath(dir, path.Dir(name)), os.FileMode(0755))
        if err != nil {
                return err
        }
        err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
        if err != nil {
                return err
        }
        err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
        if err != nil {
                return err
        }
        return nil
}

// Restore assets under the given directory recursively
func RestoreAssets(dir, name string) error {
        children, err := AssetDir(name)
        if err != nil { // File
                return RestoreAsset(dir, name)
        } else { // Dir
                for _, child := range children {
                        err = RestoreAssets(dir, path.Join(name, child))
                        if err != nil {
                                return err
                        }
                }
        }
        return nil
}

func _filePath(dir, name string) string {
        cannonicalName := strings.Replace(name, "\\", "/", -1)
        return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

