// Code generated by go-bindata.
// sources:
// index.html
// DO NOT EDIT!

// +build bin

package templates

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
	"os"
	"time"
	"io/ioutil"
	"path/filepath"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name string
	size int64
	mode os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _indexHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x5d\x6d\x73\xdb\x36\xf2\x7f\x9f\x4f\x81\x3f\xdb\xfe\xe7\xda\xa9\xa8\x4b\xaf\xbd\xcb\xa4\x96\x67\x1c\x4b\x49\x39\xf5\xd3\xd9\x72\xee\xfa\xaa\x43\x89\x90\x84\x98\x22\x59\x02\x94\xe3\x6a\xfc\xdd\x6f\xf1\xc4\x67\x52\xa4\x48\xd9\xbe\xb9\x74\xa6\x16\x09\x02\xbb\x8b\xc5\xe2\xb7\x0b\x70\x89\x1c\xfd\xdf\xf8\xf2\x74\xfa\xdb\xd5\x04\xad\xd8\xda\x7d\x75\x7c\x24\x7e\x10\x82\x0b\x6c\x3b\x70\xc1\x2f\xd7\x98\xd9\x68\xbe\xb2\x43\x8a\xd9\xc8\x88\xd8\x62\xf0\xc6\x48\x3f\x5a\x31\x16\x0c\xf0\x1f\x11\xd9\x8c\x8c\x7f\x0f\x6e\x4f\x06\xa7\xfe\x3a\xb0\x19\x99\xb9\xd8\x40\x73\xdf\x63\xd8\x83\x76\xd6\x64\x84\x9d\x25\xce\xb4\xf4\xec\x35\x1e\x19\x1b\x82\xef\x03\x3f\x64\xa9\xca\xf7\xc4\x61\xab\x91\x83\x37\x64\x8e\x07\xe2\xe6\x7b\x44\x3c\xc2\x88\xed\x0e\xe8\xdc\x76\xf1\xe8\xb5\x26\xc4\x08\x73\xb1\xb8\x86\xbb\xed\xd6\x1c\xdb\xcc\x36\x7f\xf1\x29\xe3\xc4\x1f\x1f\x11\x5c\x01\xc9\xa3\x61\x52\xef\xf8\xc8\x25\xde\x1d\x0a\xb1\x3b\x32\x08\xb0\x34\x10\x7b\x08\x40\x0e\xb2\xb6\x97\x78\x18\x78\x4b\x03\xad\x42\xbc\x18\x19\xc3\x85\xbd\xe1\x15\x4c\x5e\x56\x68\x4a\xd9\x83\x8b\xe9\x0a\x63\xa6\x09\x30\xfc\x99\x0d\xe7\x94\xc6\xed\xe1\x7a\x48\x3c\x07\x7f\x36\x79\xa9\xa2\x40\xe7\x21\x09\x58\xba\xc9\x27\x7b\x63\xcb\x52\x23\xaf\x67\x44\xc3\x39\x10\xfa\x44\x87\x21\xd7\x70\x88\xe1\xea\x07\xf3\xb5\xf9\xfa\x8d\x2e\x30\xd7\xc4\x33\x3f\x01\x4f\x07\x3a\x3e\x58\xdb\xc4\x93\xf5\xb7\x5b\xb2\x40\xe6\xf4\xe4\xc3\x87\xc9\x78\x46\xbc\xc7\x47\xa8\xa7\x84\x91\x2d\xb6\x5b\xec\x52\xd0\x10\x70\x18\xae\x89\x7b\xa7\x1e\x8a\x07\x9e\xf3\xf8\x68\x68\xa5\x1e\x0d\xa5\x70\x4a\xfe\xa1\x32\x8d\xe3\xa3\x99\xef\x3c\xa8\x42\xcf\xde\xa0\xb9\x6b\x53\x3a\x32\xe0\x72\x66\x87\x48\xfe\x0c\x1c\xbc\xb0\x23\x97\xe9\xdb\x05\xf9\x8c\x9d\x01\xf3\x03\x03\x85\x3e\x0c\x23\xaf\x4d\x96\x60\x2c\x30\x0c\x31\x3f\x87\xc4\xc4\xb8\x45\x40\x97\x30\xb4\x74\x23\xe2\xe8\x3a\xb9\x5a\x4e\xe8\x07\x8e\x7f\xef\x69\x2e\x5c\x42\x1c\x26\x95\x85\xb0\x11\x63\xbe\x97\x15\x12\x04\x59\x2e\x5d\x0c\x76\xe7\xba\x76\x40\xb1\xa3\x47\x52\x56\x56\x3a\x95\x95\xb8\x2c\xb2\x96\x2e\xb6\xc3\x25\x1f\xa8\xaf\x14\xad\xf8\x71\x8a\xad\x18\xef\xc0\x8e\xd9\xd2\x70\xe0\x7b\xee\x43\xb6\x0a\x54\x9a\x4a\x39\x12\x65\x80\xce\xa1\x59\x0d\x25\x6e\x97\x03\x60\x5b\x20\xf5\x62\x5a\x0e\xa5\x12\x33\x83\x60\x23\xe2\x24\xc3\x35\x0b\x6d\x0f\x54\x9e\x1b\x44\x3d\x28\x4a\xad\xaa\x52\x66\x24\x74\x55\x03\xd9\x21\xb1\x07\xf8\x33\x70\x77\x30\x50\x66\x61\x84\xe3\xd9\x97\x1f\x08\x6e\x30\x9c\xfd\x4a\x81\x43\xa1\x1b\x45\xf4\x38\x1a\x42\xa3\x7c\xbf\xec\x4c\x97\x22\xb7\xd0\x81\x35\xf6\x22\x6d\xdf\xf2\x5a\x88\xe9\xda\x33\xec\xba\xd8\x99\x3d\xe4\x55\x90\xe3\xe0\x92\x02\x49\x65\xd1\x8a\x68\x10\x62\x0a\xa0\x96\x99\x36\x71\xf3\x30\xf2\x3c\xe2\x2d\x8f\x86\x2e\x29\xd2\x6d\xd0\x1e\x06\xa9\x30\x22\x80\x52\xf9\x7a\x29\x7d\x8d\xad\x9b\xe9\xb5\xf5\x8e\xab\xcb\x2e\x9a\x46\x41\x8c\x61\xe4\x66\x34\x98\xd1\x71\x32\x4c\xf9\x69\x95\x40\x82\x2c\x40\x35\xf3\x2e\x3d\x2c\x1c\x9a\x54\x55\xf8\x29\xd1\x35\x67\x46\x02\x23\x0f\x0d\x25\x7d\x8e\x7b\x6c\x5d\xf1\xce\x96\x29\x38\xa7\xba\xa2\x76\x75\xf7\x74\x0d\xd7\x2e\xe3\x8c\x72\xb3\xa1\xd5\x04\x28\x8e\x54\xcc\x15\xb8\x15\x9e\xa6\xfa\x75\x76\x52\x66\xf3\x25\xc3\x54\x54\xf3\x3e\xd6\x5f\x26\x4d\x47\xf3\x17\x24\xa2\x80\x91\x35\x2e\x0c\x50\x4c\xbe\x21\x19\x05\x57\x92\x5a\x09\x4e\x95\xce\x8a\x8c\x3e\x6f\x45\xd3\xb2\x89\xa1\x74\x5a\x2a\x61\x76\x82\x94\xd7\x2c\x4e\xa3\x2a\x8b\xd7\x97\x21\x59\xae\x58\x35\xd4\xd4\x99\x7d\x8a\xb6\x4b\x28\x1b\x10\x0f\xc2\x20\x5c\x39\xab\x34\xe9\x0a\x9d\x4a\x78\xfe\x8a\x07\x01\xe5\xda\xe3\x8f\xda\x69\x6c\x17\xaf\x80\x56\xb1\x0a\x68\xbf\x9c\x36\xcb\x2a\x4e\x1b\x7b\x09\x60\xcf\x0e\x61\x0a\xc5\x19\x83\xec\x39\x23\x9b\xa2\x8b\xcb\x79\xe0\x0d\x0e\x29\xb7\xfe\x0a\x1f\xbc\x8f\xdb\xe5\xab\x01\xfa\x76\x38\xbc\xbf\xbf\x37\xc1\x8f\x86\xf0\xbf\x39\xf7\xd7\x43\x19\x87\x43\xd4\xea\x62\x9b\x62\x3a\x74\x6d\x86\x69\x99\x57\xb9\xbc\x99\x4e\x2e\xa6\x65\xae\xa4\x1b\xd8\xe8\xbe\x1e\x04\x71\x14\xf1\x3e\x20\xa7\x1f\x35\x0a\x6a\x1a\x86\x3e\x4e\xae\x6f\xac\xcb\x8b\xa7\xc1\xa1\x9c\x3b\x4f\xdd\xc2\x0d\x60\x85\x5a\x31\x68\x8f\x24\xd6\x02\xe5\xd1\x3e\x0a\x6c\xc7\x81\x50\x86\xaf\x17\x28\xde\x40\xbf\x1f\xe8\xaa\x74\x99\x10\xfa\xf7\xf9\xa5\x01\xa7\xbd\xc6\x6b\x08\xd3\xe5\x3a\x54\x56\x9c\xb9\xfe\xfc\x8e\xc7\xfb\x83\xb5\x33\xf8\x41\x5f\xf8\x8b\x05\xac\xb9\x06\xaf\x33\x21\xc4\x76\xcb\xf0\x3a\xe0\xfa\x45\x06\xac\x62\x40\x2c\xfa\xf6\xad\xbc\xf8\x1d\x0c\x1f\xbb\x40\xdd\x40\x66\xde\x61\x26\xdc\xc9\xa2\x8e\xf9\xdf\xda\x31\x23\x8b\x5a\x5e\xf3\x20\xaa\xed\x69\x3b\x66\x40\xad\x96\x9b\xd3\x67\xcf\x9c\xf2\x9e\x65\xed\x46\xdf\x34\x59\x1c\x36\xb1\x8c\x80\xd6\xf5\xe0\x4d\xce\x30\x5a\xaa\x0f\xbc\xcd\xd3\xf7\x68\xb3\x3c\x60\x8f\xc0\xab\xb5\xe9\x51\xed\x16\x87\x6e\xb0\xb1\x43\xc4\xd1\x09\x8d\x90\xc2\xa9\xc7\xc7\x9f\xf3\x7b\x0d\x6a\x8b\x81\xef\x3a\x88\x0d\xaa\xed\x76\xf8\xdd\xab\xef\x86\x8f\x8f\xdb\xad\x94\xaf\x28\xf0\xdc\x85\x60\x1e\x64\x25\x5e\x10\x31\x4e\xda\x1a\x9f\x30\x16\x3e\x3e\x22\xb8\x11\xba\x79\x7c\x4c\x56\x11\x83\xf9\x0a\xcf\xef\x66\xfe\x67\xbd\xf4\x4f\xee\x85\x27\x59\x11\xc7\xc1\x5e\xec\xe2\xc4\x1d\x17\xe3\x13\xfd\x7c\xea\xfa\xb0\x0a\x31\x04\x1f\xce\x50\x38\x1d\xce\xf0\xbd\x1f\x2a\x8e\x69\x86\x5c\x2c\xfe\xf4\xfc\x5f\x37\x7c\xe7\x48\xd6\x78\x25\x51\x7a\x0a\x3a\x12\x2b\x0a\x4e\x82\x93\x17\x3b\x30\x4d\x3a\x1b\x44\x60\x0f\xd4\xe0\x75\xee\x09\x5b\x21\x7e\x07\x03\xcc\x47\x0b\xe8\xf2\x3f\x72\x97\x67\xbb\x85\xe0\x63\x89\xd1\xd7\xe4\x7b\xf4\xf5\xdc\x0f\x31\x7a\x3b\x42\xd2\x3b\x9c\x5e\xdd\x9a\x67\x10\xd6\x81\x00\x2c\x04\x09\xc5\x63\xf3\xc2\xfc\x15\x3f\x70\x21\x91\x00\x17\xa0\x3b\x7b\x18\x5c\x18\x52\xe4\x23\xe6\x68\x33\xe3\xc3\x2b\x63\x4b\xe4\xf9\xf7\xa1\xad\x82\xba\xe3\x98\x0e\xef\x17\x73\x2a\x5b\xc5\xdb\x62\x7c\xa3\x21\xa5\xaf\x88\xe2\x00\x87\x73\x00\x7d\x19\x93\xca\x50\x24\x29\x1d\x69\x06\xb7\x14\x4b\x45\x66\xd8\xca\xd2\xd4\xc6\xc4\xf1\x61\xa5\xb8\x79\xa0\x45\x21\x44\x61\xdf\x32\x40\xf4\xcd\xa3\x0d\x5c\x2d\x8b\xe5\xb8\xb8\x28\x8c\x2c\x2d\x95\x66\xc8\xc2\x94\xd1\x65\x7f\x9a\x98\xa0\x04\x1e\x6e\x3f\xfc\x22\xee\x99\xb8\x81\xd8\x85\x04\x58\x62\x13\x12\x7f\x61\xc5\x0e\x61\xa3\x47\x31\x77\xf0\x00\x2e\x0a\xb7\xa4\x5e\x52\xfb\xce\x20\x94\xc6\x16\xb6\x4a\xa3\x4e\x7c\xc7\x1f\xec\xb0\x43\x51\x8d\x1b\x43\x66\x27\x2b\xf2\x48\x26\x66\x3a\xfe\x26\xb7\x85\xb5\x0f\x17\x18\xed\xc3\x33\xe1\xa3\xd8\x85\xcb\x50\x69\x55\x94\xea\x8d\x5c\x96\xec\xe4\xd6\xb9\x02\x0d\x36\xd2\x15\xb0\x04\x9b\xc5\x00\xb6\x81\x2d\x67\x31\x7b\x80\xb8\xf5\xf7\x96\xd8\xe5\x10\x7a\x97\xe0\xd6\xf8\xbd\x20\x92\xc5\x2e\x5e\xc5\x1c\x93\xf0\xc2\x5e\xe3\x04\xc1\x14\x3f\x85\x62\x0e\x09\xc5\xfe\x5f\x01\xcb\x72\x00\x56\xa3\x09\x01\xe6\x7f\x51\xdc\xf0\x46\x70\x3b\x85\x42\xf4\xfa\x35\xe7\x36\x90\xec\x1c\xbc\x11\x8c\xbe\x2d\xc5\xc0\x3d\xb9\xa9\xbe\x09\x6e\x7f\x4f\x33\x53\xbd\x2a\x67\x56\x80\x19\xad\xab\x93\x8d\x4d\xdc\x76\x4d\x60\x3a\xc1\x30\xff\xbf\x37\xa3\xc1\xcf\x75\x72\x27\xd0\x64\xa0\xb8\xe5\x95\x2c\x69\xc7\x71\xea\x33\x3b\x2d\x64\x27\xc0\xd2\xc6\x77\x68\xd4\x2a\x55\x8d\x5c\x57\xc2\x4a\x75\xcd\xdf\x24\x19\xca\x94\xaf\xec\xd0\x5e\x53\x73\x72\x71\x7b\x6e\x3a\x0b\x73\x02\x8f\xcf\xf8\x8b\x26\xe3\xfd\x8d\x81\x0c\x31\x43\xba\xd3\x3a\xbf\xea\x8f\xd6\xc9\xc7\x13\xeb\xac\x27\x5a\xb7\x37\x93\x71\x4f\xa4\xa6\x97\xd3\x13\x2e\x56\x27\x98\xcb\x80\x53\x1f\x58\x47\x3c\xdf\xe9\x0e\x76\x92\x4a\x33\xb4\x93\x75\x9f\x0e\xee\x14\xbf\x27\xc2\xbb\x46\xdc\x2a\xb1\xc4\x5a\x84\x18\xb7\x6c\x12\xed\x8d\x78\xbc\xe9\x5e\x90\x67\x89\x4e\xf6\x87\x79\xca\x08\x9f\x20\x54\xd3\x44\xf3\x6f\x61\x8f\xc7\xe2\x7d\x7e\x45\xd0\x53\xa8\x7d\xee\x47\x1e\xc3\x4e\x6d\x75\x94\x57\x9f\xa8\x26\x5c\xda\x1e\xed\xb8\x5f\xdb\xa3\x99\x70\x4e\xbd\x05\x59\x59\xb8\xe8\x0e\x3f\x64\xbf\x50\x8b\x2c\x12\xec\xb1\xca\x02\x2d\xb2\x30\xb3\xa8\x43\x32\x31\x56\x16\x71\x9a\xcf\x79\x4d\x36\x46\x17\xa2\xe3\x9b\x96\x73\x1d\x08\x8d\xb1\xcb\x6c\xcb\x6b\xdd\xe4\x32\x6a\x3e\x57\xa1\x4d\x3b\x0e\x59\xe2\x9d\x26\x35\x79\xa2\x40\x26\xb3\xfc\xb2\x60\x52\x86\x0b\xbb\x72\x1e\x17\x17\x2f\x48\xa4\xde\x8c\x8c\x77\xd6\xf4\x06\x01\x3c\x22\x8a\xb9\x08\xe9\x45\x8d\x57\xbf\xa4\x39\xca\xed\x39\xcf\x8e\x86\xe9\x92\x63\xfe\x12\x67\xcf\x95\xd5\x6e\xe1\x60\xc0\x9e\x5d\x3a\xc6\x21\x06\xbd\xfb\x6d\x3a\xb9\x41\x6b\xdf\x89\x5c\x1f\xfd\xf8\xa1\x83\x02\xdf\xe5\x44\xfc\xe6\xc7\x0f\x07\x97\xb1\xb5\x1e\xdb\x0a\xd9\x05\x75\x49\xbf\x31\x1f\x59\xe0\x30\xf4\xc3\x8e\xa8\x2b\x69\xec\x84\x5d\x59\xed\x00\xb8\xab\x08\x7f\x01\xde\xca\xe1\xfd\x2f\x41\xde\x0a\xd0\x95\xf1\x6c\xfd\xa4\xec\x01\xbc\xaa\x50\xf5\x89\xd8\x97\xe3\x65\x13\xe6\x7d\xa0\x62\x05\x12\xf6\xc1\xbe\x1b\xde\xa5\x01\xaa\x0f\xc0\x0b\xec\xf9\x1d\x66\x1d\x11\x4f\x11\xd9\x09\x79\xaa\xde\x01\x30\x4f\x53\xfe\x02\x7a\xd5\x43\xfc\x05\xf5\x5e\x3e\xea\xc9\x68\xec\x79\xb1\xaf\x5a\x86\x17\x81\x80\x19\xc4\xea\x0e\x81\x6b\xbc\xde\xe3\x55\x2c\xb4\x4a\x00\xf0\x7c\x72\x9e\x85\x3e\x78\x6a\xfe\x4a\x3c\x27\xc1\x3e\x9e\xd2\x22\x51\xef\x0e\xca\x8b\xa8\x17\x37\x69\x8c\x12\xbc\xc1\xfb\x36\x5b\x62\xbc\xc1\x5e\xaf\x00\x54\xc3\xb6\xdb\x61\xbc\x59\xaf\x2f\x00\x80\xe0\xcb\x7a\x63\x99\x9a\x19\x7c\x24\xda\xd4\xaf\xd9\xb3\x7a\x82\xcd\x2a\x6d\xf3\xdd\x67\x4f\x9c\x77\x04\x84\x52\xc9\x2e\xa2\x58\x29\x5d\x7f\x4a\x22\xee\x5e\x4b\xed\xcb\x9c\x8b\x74\x65\x91\xb9\x47\xbc\x25\x9a\x31\x6f\x20\x72\x60\xf4\x7b\x75\x5b\xe7\x99\xe8\xf7\x07\xef\x2e\x2f\xcf\x4c\x18\xda\x05\x59\x02\x67\xf3\x9d\xef\xbb\xe2\xc9\x29\x27\x27\xa7\x1b\x27\x22\xf7\xfe\x24\x2d\x9d\x57\x59\x7c\x62\x88\x74\x8f\x3a\xfa\xf2\x23\x8f\x5f\x42\xbc\x88\x73\x3f\x84\x60\xa7\x57\xb7\x3a\x2f\xef\x58\xa7\x80\xf0\xcb\x6c\x86\x90\xca\xf2\x92\xe4\x8c\x3d\xba\x02\x32\xc7\x49\x2f\x32\x8f\xc5\x48\x64\x38\x5a\xf8\xe1\x3a\x9d\x74\xc0\xef\x07\x2b\x3f\x24\x7f\xf2\x94\x24\x17\x25\x97\x03\x51\x75\xe6\x87\xa2\xeb\x3e\x63\xfe\x5a\x14\x15\x64\xfa\x67\x84\xc3\x07\x9e\x0c\xb3\x3e\x99\xf3\x84\xc7\x4c\xaf\xc5\x7a\x5f\x64\xe8\xe8\x1d\x56\x21\xd2\x80\x46\xb3\x35\x89\xbf\xa8\x52\x77\xa9\x36\x29\xdb\x10\x22\x2e\x43\x3f\x0a\x06\x3c\x51\x10\x3b\xd9\xdd\x84\x54\x4d\x3e\x56\xa2\x22\x8a\xaf\x06\x74\xad\x93\x3b\xc5\x7d\x3e\x31\xba\xdc\x58\x40\x48\x5c\xa5\xdf\xd8\x32\xa4\x71\x08\x56\xca\x64\xab\x6c\x43\x93\xab\xb0\x8c\x58\x9a\x5f\x84\x6e\xf2\xc9\x9b\x69\x21\x79\x0e\xcf\x44\xe4\xe3\xf2\x89\xc7\xef\xb8\x88\xd9\xd1\x77\x08\xe5\x0f\x9d\xe6\xf2\xc9\x0c\xdf\x26\x12\x16\xe5\xe0\xe8\x03\x77\xc5\x9c\xd3\xc2\x97\x04\xa5\x5f\x80\x34\x1a\xe3\x3a\x68\x02\x51\x43\x4c\x57\xb9\x57\x86\x57\x93\x6b\xeb\x72\x6c\xaa\x87\xd0\xb3\x92\xa4\x36\xce\xf3\x55\x41\xb4\xf8\x32\x3f\x31\xdb\xda\x49\xf5\x24\xdc\x91\x7b\xa1\xd2\xfb\x32\x79\x78\x29\xa9\xc4\x45\x5b\xc4\x75\x16\xcf\x04\xb8\xce\xe2\xa0\x78\x0b\xe4\xab\xe0\x36\xd7\x48\xbd\x44\x66\xe6\x94\x07\xad\x89\xb9\xee\x80\x62\x67\xb1\x1b\x89\x2b\xfa\xd8\x2b\x10\xff\xaf\xa0\x6e\x85\x2e\xf7\x04\xdd\x6a\xf3\x88\x65\xd9\x8d\xb9\x09\xde\x8e\xdf\xf7\x08\xb7\x0d\x64\xcb\x4a\xc0\x91\x76\xfc\xfe\x45\x03\xad\xb3\xd8\x85\xb3\x85\xaf\x97\x78\x8c\x4d\xd3\x36\xe8\x92\xbc\xd2\xe2\xa9\xcb\x13\x40\x52\xca\xb7\x2e\x2e\xc7\x13\x9e\x38\xa3\xac\x23\xa3\xc0\xf2\xbe\xd4\x67\x98\xb0\x54\x8a\x89\x22\x9e\xfb\xfe\xaf\x8d\x78\xe3\xf7\xe2\x25\xc9\x81\xe4\xd3\xd4\x0b\x02\x26\xdf\x69\x74\xf1\x6a\x15\xf3\xb0\x06\xd0\x4a\xa8\xed\x1c\xb8\x3a\x88\xdc\x61\x8e\xb9\x4c\x87\x7c\xda\x7a\x2b\x79\x92\x91\xea\x24\x50\xfa\x2d\x6d\x51\x9e\xde\x7c\x39\x79\x2e\x5f\x4e\x0e\xeb\xcb\x49\x3b\x5f\x4e\x5a\xfb\x72\xd2\xc0\x97\x57\xf4\xf1\x8b\x2f\xdf\xc3\x97\x57\xe8\x72\x4f\x5f\x5e\x6d\x1e\xb1\x2c\x6d\x7c\xb9\xd5\xa7\x2f\x6f\x20\x5b\xd1\x97\x5b\x2f\xdb\x97\x93\xc3\xf9\x72\x52\x84\xe0\xab\x93\xd3\x5f\x27\xd3\xfe\x9c\x25\xc9\x38\x4b\x4d\xbd\xa9\x37\x2f\x11\x70\x72\x7d\x7d\x79\x7d\x28\xf9\x14\xf1\x0e\xe2\x59\x3d\x07\x1b\x59\xf9\xac\xc3\x06\x1b\x15\x40\xb1\x47\xb0\x51\x6b\x59\x1d\x9c\x7b\xfe\xa5\x58\xf3\x70\xa3\xce\x94\x3a\x09\x94\x49\x4d\xe8\x24\x8f\xd5\x47\xf8\x43\x9e\x2a\xfc\xe1\x9f\xe3\x3e\x4f\xfc\xc3\x5f\x50\x1c\x32\x00\x92\x2f\x40\xca\x23\xa0\x73\xbc\xf6\xc3\x87\x86\x81\x0e\x10\xda\x1d\xe9\x54\xf5\xe6\xcb\xfe\x71\x3f\xd1\x4f\x95\x7e\xf7\x0c\x7f\x6a\x8c\x23\x96\x66\x77\xfc\x93\xa7\x4a\xef\xed\xa0\x4f\x29\x05\xbd\xbc\x98\xb5\x7d\x1a\xab\x90\xab\xb2\x47\x18\x71\xa2\x2f\x38\x50\x82\x5e\x1c\x6e\x77\xb9\xca\x8a\xf6\xdb\x5d\x8e\xdf\x88\xf6\xbb\xbb\x1c\xd0\x67\x42\xe4\x80\x1e\x14\x90\x81\x7c\x15\x1e\x5f\x85\xfe\x1c\x53\x8a\x69\x43\x48\x0e\xe8\x6e\x44\xae\xe8\xcd\x1e\x80\xac\x0e\xee\x91\x3f\x55\x40\x9c\xfe\xca\xe1\x65\x61\x72\xd7\x19\x19\xd0\xf2\x33\x2d\x9e\xd7\x21\x54\x0c\xef\x9e\x48\x5b\x6d\x9b\x69\xf0\xdc\xe5\x0e\x6e\x04\x1c\xc0\xaf\xe7\xb3\x31\x9e\x87\xd8\x16\x68\x9c\x5f\x1a\xa7\xd6\xc5\x8d\xa4\x3c\xb3\xce\xad\xa9\x19\x50\xcf\x3c\x83\x49\x52\x2d\xe1\xa0\xb1\x70\xc9\xc2\xbd\x3f\xd9\xce\xfd\xb0\xc1\x82\x3d\x11\x23\x70\x23\xaa\x4f\x70\x68\xeb\x8d\xfa\xf2\x07\x15\x46\xb4\x9f\x3b\x08\xe8\x21\xbc\xc1\x66\xf9\x4c\xde\x60\xb3\x3c\xa8\x37\x00\xf2\x55\xde\xe0\xa3\x3c\xf3\x0b\x2d\x5d\x7f\xc6\x8f\xae\x65\x36\x8b\x9a\x7a\x86\xcd\x72\xb7\x67\xa8\xe8\xd9\x17\xcf\xd0\xd6\x33\x6c\x96\x2f\xd1\x33\x54\x0c\xef\x9e\x9e\xa1\xda\x4e\x63\x59\xaa\x3c\xc3\x53\xa1\x58\x45\x87\xf7\x43\xb1\xcd\xb2\x6f\x14\xa3\x2d\x13\x3c\x03\x08\x06\x93\xec\x4e\xed\x30\x32\x19\x9e\xbc\x8a\x79\x65\x8d\x79\xd2\xa1\xb7\x4c\xf2\x3c\x03\x9d\xdc\x1e\x10\xa7\xee\xd0\x1d\x85\x7f\x69\x52\xcd\x12\x2b\xe3\x16\xb7\xb9\x16\xea\x71\xea\xbf\x26\xb9\xf4\x92\x14\xc5\x61\x92\x4d\x1f\xd0\x08\xee\x45\x07\x50\xae\x9f\x0d\x13\xeb\x93\x5e\x85\xc4\x0f\x09\x7b\x68\xd9\xec\x82\xcc\x1b\xa6\xb5\xc6\x4d\x6e\xc8\x9f\x6d\x9b\x5c\x63\x0a\xa6\x5b\x97\xd0\xca\xd3\x5d\xf5\xb7\xcd\xc7\xba\xd9\x54\x9d\x0c\x5a\xff\x9d\x7c\xbb\x01\x48\x3e\x67\xf8\xf1\x07\x3e\x00\xfc\x2b\x86\x9d\x03\xd0\x29\x97\x56\x87\x0a\xdd\x52\x69\xd5\xb3\x95\xbf\x91\x6a\xea\xf9\x48\x0d\x08\x8e\x52\x7b\xfe\x56\x87\xd3\x26\x32\x94\x6e\xfb\xa3\x74\x33\xb9\xee\x74\x38\x47\xb6\x87\xd7\x56\x4f\x94\x2e\xac\xd3\x49\x4f\xa4\x3e\x5a\xd7\xd3\x9e\x48\x5d\x8b\x37\x0e\x7d\x50\x9a\x5a\xe7\x13\x1e\x2c\xc9\xf9\xd9\x93\xce\x4e\x04\xcd\xae\xa7\x90\x28\x67\xd3\x3d\xb3\x5a\x87\x3f\x2a\xf6\x06\x4f\x75\x2d\x4b\x52\x0e\x56\xc4\x66\x2a\x6e\x49\x5d\x43\xe4\x82\x54\x73\x59\xa0\x3d\x51\xe6\x54\xf8\x54\x7d\x88\x8d\xf4\xc1\xa6\xc7\x8a\x4b\xfc\x01\xc7\x71\x7c\x22\x5f\x36\xf2\xe4\x67\x1e\x42\x74\x14\x33\x92\xe7\xe9\xa5\x0e\x0f\x34\x10\xa8\x68\x8e\x57\xbe\x0b\xc3\x30\x02\xf9\xaf\x92\x5b\x19\xee\x5c\x61\xf0\x0f\x0e\x07\xbf\x64\x63\x51\x96\x7d\xb4\xdd\x28\x73\xd4\x5e\xc9\xb9\x7d\x6d\xc3\x80\xd4\x37\x0d\xd0\x9a\x46\x41\xa2\x92\x54\xdf\x44\x68\x5f\x76\x46\x9b\xa9\xa2\x97\x63\x71\xf9\x4d\x4a\x3f\x43\x4e\xab\x85\x20\x9b\xa5\x78\xd7\x63\xc8\x60\xe2\x0e\x3f\xf0\x45\x83\x2c\xd2\x2e\x05\x04\xf2\x5d\xce\x80\x8b\xf4\x53\xec\x81\xd4\xb1\xb0\x72\x75\x32\xe1\x2d\x2a\xfd\x41\x03\x29\xe2\xa8\x48\x85\x3d\x6b\x7b\xbe\x4a\xc2\x1e\xc5\xe5\x1c\x0a\x79\xbb\xdc\x07\x2e\x50\x6a\xde\x02\x90\x26\x91\x8f\x3a\x27\x59\x85\x3f\x51\x44\x0a\x5f\xb9\xb4\x08\x4b\x12\xfa\xc2\x2b\xfe\x23\x21\x2f\x08\x7f\x5b\x1d\xf9\x68\xe1\x2e\xec\x9c\x9b\x2e\xad\x75\x15\xfa\x1b\xe2\xe0\xb0\xae\x66\x43\x69\x21\x4a\x64\xca\x89\xbf\x49\xc4\xe5\x4b\x47\x6c\xa0\xa4\x43\xb5\xa2\x37\x64\xa5\x86\x66\x41\x5c\xbe\x44\x67\x2b\xc9\xf5\xa7\xbf\x26\x6c\xf9\x23\xfe\xa4\x8a\x73\x69\xec\xd0\xc0\x64\x28\x04\xd0\xf3\x55\x93\x50\x9a\x2c\x10\xfe\x03\x15\x0d\xd6\x41\xfc\x48\xce\x0a\xc8\xce\x4d\x10\x94\xa1\x58\x57\x3f\xc6\xdc\x7d\xe3\x21\xbd\xe8\x88\xe3\x21\xb9\x94\xcf\x1e\xcd\x7a\xa0\xef\x8c\x48\xfe\x4b\xa0\xe4\x11\x0f\x04\x2b\x1f\x06\xca\x78\x2b\x2b\x08\xe3\xab\x7c\xea\x90\x10\xcf\x99\x78\x0b\xd9\xd3\x67\x45\xb1\x7d\x74\xf0\x7e\xb1\xbf\x06\x0a\xea\x50\x6d\xb0\x2c\xbe\xf4\xe5\xff\x28\x90\x07\x96\x3e\xbf\x1b\x6d\xd9\x8a\x50\x73\x65\x7b\x8e\x8b\x45\x49\xfe\x40\x56\xbb\x11\xaf\x5c\x84\xc0\xc7\x7e\x95\xf6\x05\xea\xf4\x20\xa0\x7b\xe2\x92\xa5\x77\x2a\xcb\xe5\xb8\x16\x64\x4b\xda\x41\x99\xaa\x1a\xe3\xb6\x92\x2b\xe7\x6c\x78\x45\x3b\xc4\x2c\x5d\x5b\x3a\x94\xd4\x59\x9f\xb6\xd2\xe0\x2a\xee\xd2\x7f\x02\x00\x00\xff\xff\x59\x95\x0a\x6f\xfe\x69\x00\x00")

func indexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_indexHtml,
		"index.html",
	)
}

func indexHtml() (*asset, error) {
	bytes, err := indexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "index.html", size: 27134, mode: os.FileMode(384), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if (err != nil) {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"index.html": indexHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"index.html": &bintree{indexHtml, map[string]*bintree{
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
        data, err := Asset(name)
        if err != nil {
                return err
        }
        info, err := AssetInfo(name)
        if err != nil {
                return err
        }
        err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
        if err != nil {
                return err
        }
        err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
        if err != nil {
                return err
        }
        err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
        if err != nil {
                return err
        }
        return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
        children, err := AssetDir(name)
        // File
        if err != nil {
                return RestoreAsset(dir, name)
        }
        // Dir
        for _, child := range children {
                err = RestoreAssets(dir, filepath.Join(name, child))
                if err != nil {
                        return err
                }
        }
        return nil
}

func _filePath(dir, name string) string {
        cannonicalName := strings.Replace(name, "\\", "/", -1)
        return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

