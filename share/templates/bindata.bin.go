// +build bin

package templates

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
	"os"
	"time"
	"io/ioutil"
	"path"
	"path/filepath"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindata_file_info struct {
	name string
	size int64
	mode os.FileMode
	modTime time.Time
}

func (fi bindata_file_info) Name() string {
	return fi.name
}
func (fi bindata_file_info) Size() int64 {
	return fi.size
}
func (fi bindata_file_info) Mode() os.FileMode {
	return fi.mode
}
func (fi bindata_file_info) ModTime() time.Time {
	return fi.modTime
}
func (fi bindata_file_info) IsDir() bool {
	return false
}
func (fi bindata_file_info) Sys() interface{} {
	return nil
}

var _defines_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x5a\x5f\x6f\xdb\x36\x10\x7f\xef\xa7\x20\x84\x74\x58\x81\x46\xc1\x86\xee\xa5\x73\x04\xb8\xb1\xd3\x0a\x8d\x93\xc0\x7f\x02\xec\xa9\x50\x2c\x3a\xe6\x22\x8b\x1a\x49\xb9\xf3\x02\x7f\xf7\xf1\x28\x51\x7f\x2c\xd1\x96\x64\x67\xd8\x43\xf3\x50\x8b\xe4\x4f\xc7\xe3\xdd\xfd\x8e\x47\xaa\x2f\x2f\x3e\x5e\x90\x10\x23\x2b\xf9\xe5\x1f\x3f\x26\x0f\xdf\xe6\x51\xcc\xe8\x77\x6e\x6d\xb7\x2f\x2f\xdf\x89\x58\x22\xfb\xee\x61\x38\x1e\xbb\x83\x21\xf4\xd8\xf0\x0f\x0e\x38\x86\xdf\xb3\x2b\xf4\xf1\x12\x51\x86\xec\xab\x9b\xfe\x64\x72\xdb\x1f\x0d\x91\x35\x0f\x3c\x9e\xbc\xcd\xbc\xf0\x09\xa3\x33\xf2\x1e\x9d\xcd\x29\xc3\x80\xb5\x07\x9e\xf0\xec\xab\xfb\x99\x7d\x43\xb8\xd8\x6e\x7b\x82\xa1\x67\xbc\xb9\x94\xb2\x00\x62\xdf\x6e\xb7\x4e\x4f\xf8\x48\x09\xb9\xb4\x04\xfe\x5b\x9c\x33\xf2\xb4\x14\x28\xa4\xdf\x99\x17\x59\x4e\x01\xd9\xbb\x10\x7e\x3d\xda\x72\x7a\x3c\xf2\x42\x04\x2a\x6e\xb7\x99\xf4\x19\xc7\xec\x0a\xb0\x72\x96\x62\x1f\x88\x02\xbc\xd3\x5a\xe2\x64\xc3\x53\x81\xc8\x29\xf4\x75\x17\xe8\xfa\x01\xde\x55\x11\xfa\x76\x24\x5e\x08\x26\x87\x71\xe8\x2b\x77\x14\x7e\xde\xec\x75\xac\xf0\x1e\x03\x6c\x81\xd9\xe1\x21\x53\x0a\x1a\xbf\x20\x2e\x18\x89\xf0\x79\x82\x91\x4a\x2f\xb1\x07\xba\x33\x78\x84\x19\x97\xf0\xb0\xc7\x33\x60\xc9\x64\x4d\x29\x26\x0e\x89\x5c\xe6\xdb\x5c\xf1\x43\x12\xa4\xe5\x8e\x13\x00\x96\x3a\x28\x01\x6c\x07\x4f\xc9\xf2\x1e\xa9\xbf\x91\xa6\x14\x78\x15\x05\x9e\xd8\xc3\x07\x64\xab\x88\x53\x78\xf9\x0b\x56\x72\x0e\x1b\xdd\x5f\x3c\x6e\x04\xe6\xdf\x4e\x4b\x29\x9f\xf0\xe7\x9c\x4e\x83\x6b\x35\x47\x95\x52\x00\xb3\x07\x84\xdd\x7a\x2b\xfc\x15\x6f\xca\xdc\x2a\x10\x2a\xc5\xf1\x67\x00\x7e\x99\x8e\x6e\xaa\xdc\xaa\xa2\x99\x19\x5c\x8c\x72\xfd\x42\x7f\xed\x91\xa0\x19\x54\x06\x92\x34\xea\x4f\xe1\x23\x8f\x7e\xef\xf1\x38\xaa\x30\x45\xa3\xee\x31\x9b\xe3\x50\x14\xf8\xb2\x33\xb2\xdd\xe6\xae\x57\x82\x1a\xcc\x3e\xa5\xc2\xcb\x14\xed\xc2\x33\xed\x72\x4d\xb6\x03\x4e\x6d\xc7\xc5\x34\x80\xce\x6e\x72\xf7\xdf\x90\xf0\x19\x32\x4e\xce\x0c\x40\x63\x66\x39\x28\xff\xeb\x79\x68\xc9\xf0\x02\xac\x77\x23\x03\xe6\x7a\x62\x7f\x91\x4d\x99\xb6\xe4\x5f\x6e\xd8\x74\x48\xa7\x34\x84\x9c\x01\x5e\x93\x79\xca\xa9\x1a\xa0\xc7\xb0\x28\xa0\x33\x63\x7b\x15\xb6\x1e\xd6\x69\x74\x6f\xd4\x49\x0e\x15\x66\x19\xd1\x38\x14\xd8\xdf\x8d\x0a\x0d\x6c\xab\x13\x2a\x25\xe5\xb2\x4e\xfd\x87\xbe\x7b\xa3\xd5\x2a\x4f\x95\x0c\xe9\xd8\x53\xe1\x9d\x9a\xa9\x1e\x58\x50\xeb\x38\x9d\x66\x93\xe1\x20\xb3\x54\x79\x2a\x35\x94\x6d\x48\xc0\x23\xad\x52\x2d\xb0\x68\xa9\xe3\x74\x9a\xde\x4d\xfb\x06\x3b\x25\x43\x7a\xe5\x8a\x5d\xf5\x76\x4a\x81\xfb\xec\x94\x92\xaf\x6d\x0a\x2f\x25\xe1\xae\x79\x9c\x84\xd4\x7f\xf5\x44\x9e\x4c\xf2\xff\xce\xe4\xee\x82\x61\xdc\x10\x1a\x37\x4a\xe5\x00\x33\xe4\xf2\xc2\x50\x97\x64\xee\x2a\x7b\x1e\x97\xcd\x53\xc7\x77\xae\x9d\x76\x33\x60\x9a\x52\x0d\xf9\x51\x27\xb7\xc3\x14\x4c\x52\xce\x61\x9c\x4a\x03\x87\x61\x09\x33\xbb\x54\x48\x65\x6e\x74\xe3\x17\x69\x59\x27\xe9\xb3\xc5\x22\x67\x8f\x6b\x2a\x83\xc8\xc2\x2e\xf1\xc6\xc9\xfb\x1a\x45\xbd\xc4\x0e\x70\x20\x3c\x37\x6c\x0c\xbd\x8b\x45\x13\x6c\x33\x89\x05\x61\x5d\x22\x98\xec\xd4\x23\xed\x8b\x7f\x57\x46\x24\x5b\x78\xd5\xa0\xad\x96\xe0\x48\x10\x11\xe0\x4b\xeb\x93\x3b\x9d\xa0\x48\x86\x18\xc7\x73\x1a\xfa\xb2\x34\x0f\x6b\x0a\xf3\x1e\x71\x1e\x7b\x17\xc4\x89\x78\xe3\x1a\xdf\x38\x81\xb4\xd2\x69\x67\x10\x40\x08\xf4\xe9\x8f\xe9\x70\x82\x56\xd4\x8f\x03\x8a\x3e\x7c\x36\x2f\xe4\x13\x4c\xf3\xf6\xc3\xe7\x53\xcd\x63\x5c\x4f\xed\x44\x2d\x29\x4b\x8e\xdf\x11\xc9\x02\x33\x46\xd9\x91\x94\x4d\x64\xfc\xe0\xac\xc9\xb8\xff\x29\x69\xcb\x7c\xd5\xbb\x76\x25\x06\x3b\x70\x69\x87\xa8\xa7\x14\x5d\xa2\xa6\x51\x70\x17\x62\x96\xc9\xd8\x58\x74\x6b\x2a\x16\x79\xd4\x95\x8b\x91\x37\x7f\xc6\xe2\x48\x32\xa6\x42\x7e\xb0\xd1\x68\xde\x1f\x74\x6c\xb6\x9b\xbd\x1e\x29\x2b\xf2\x5f\x95\x9a\x25\x5a\x75\xe3\xe6\x0a\xaf\xda\x92\xf2\x3d\x3a\x93\x6f\xe5\xcc\x1c\x0d\x47\x55\x4e\x4a\x84\xfd\x95\xc0\xe4\x9a\x91\x79\xcf\x01\x46\x00\xf0\xba\xc9\x21\x0e\x80\x95\xdb\xb8\xbc\x3f\x3d\x98\xe9\x14\xd0\xe0\x50\x06\x2f\x1e\x7d\xc1\x26\x85\xbc\xc6\x45\xb6\xe5\x80\x4d\xf6\x8d\xd7\x9d\xa4\x4e\x73\x84\xd2\x41\xd2\x2d\xc4\x22\xde\x32\xc2\x22\x46\xe7\x79\x78\xdd\x4f\xd4\x44\xd5\x10\x03\x98\x7d\xef\x0e\x4c\x1f\x65\x2c\x07\x95\x50\xfb\x9c\x9f\x21\x67\x45\x64\xf1\x3a\x30\x47\x70\xcc\x0e\x6f\x2b\xf9\xd4\x8c\x50\x46\xc4\xa6\x21\xfc\x56\x1e\xbe\x1b\x42\x27\xe4\x9f\xa6\xd0\x31\xe6\xc4\x57\x97\x14\xb5\x70\xa0\x09\x9c\xee\x35\x7c\x4a\x56\x35\x92\xf5\xd5\x4c\xc9\x1a\xbb\x9b\x6c\x17\xc6\x44\xbc\xfb\x65\xf4\xaf\x27\xb9\x8c\x2e\x5d\x35\x94\x6f\x7e\xef\x27\x32\x78\x6a\x2f\x34\x93\x91\xec\x86\x52\x36\xb2\xeb\xcc\x3a\xdc\x11\xd7\x99\xbb\x1a\xcd\x8c\x1a\xcd\x8a\x1a\xcd\xcc\x1a\xcd\xda\x6b\x54\xba\x1c\xaf\x68\x34\x19\x8e\xeb\x2e\x58\xd3\x11\x7d\x6f\x06\x8d\xda\x3b\x5f\x8d\xeb\x7e\x0d\x5d\xf1\xda\xd8\x35\x79\x4d\x8e\xe4\x5e\xcb\xf5\xa9\xc5\x9d\xd0\x6b\xb7\xee\xd5\xb0\xde\x46\x6a\x44\x2f\xfb\xd6\x35\x6a\x94\xe0\x4e\x67\xa3\x07\x77\x3c\xad\xd7\x48\x8d\xe8\x49\xa0\x61\xf0\x5a\x82\x3b\x9d\x46\xe3\xe1\xc4\xe0\x35\x18\xc9\x1c\x21\x1b\xa6\xc8\x56\xb8\x2e\x5e\xd3\x49\x70\x47\xa3\xa9\x3b\x32\x78\x4d\x8d\x64\x5f\x0e\x64\xc3\x60\xa3\x04\xd7\xca\x46\x7b\xb9\x06\x39\xd1\x10\x47\xfd\x82\x46\x57\x77\xa3\x51\xff\x76\x50\xfd\x0e\xa5\x71\xaf\xf0\x29\x23\xdd\xea\xbb\xd5\x09\x82\xd2\x40\x90\x48\xd7\x4e\x89\x42\xc5\xaa\xb9\x08\x40\xbe\xcc\xe7\xe7\x52\x8d\x39\x5e\x49\xc7\x5d\x5a\x5e\x2c\x28\x0a\xf0\x42\xa4\x43\xf2\xf8\x20\xd4\x80\xac\x31\xae\xe3\x40\x96\x74\xb0\xbf\xd9\x93\x25\x65\x22\xff\xef\x0a\x06\xf1\x3e\x15\x1c\xa9\x22\xbd\xd3\x3c\xb6\x6d\xbf\x79\x93\x7f\x0d\x80\x9f\xc3\xcb\x8f\x39\x8e\x92\x8a\xb5\xc1\x46\x58\x74\x2a\xcc\x9c\xfa\x51\x2d\xf1\xc1\x0b\x62\x9c\x7f\x8e\x38\x3c\xf3\xfa\x49\x9d\xf1\xad\xbc\xba\xb2\x74\x57\xb2\xff\xd3\x00\x24\x5d\x5a\xbf\x29\xf9\x6a\x27\x7d\xf0\x9e\x64\xb5\x26\x86\x80\xaa\xd9\xfb\xf7\xce\x96\x95\x83\x69\xbd\xb7\xf2\xe6\xcb\x7c\x8f\x4e\x25\x8f\x64\x27\xbc\x57\x73\xb4\x90\x23\xf6\x6c\xa6\x0b\x3f\x27\xaf\xcf\xb2\x91\x72\x7d\xb6\x8b\x80\x9a\xc5\x3c\x7a\xcf\xe8\x5a\x16\x4b\xcc\x8c\x90\x05\xa9\x38\xfc\xf9\x4a\x41\xd3\xc5\x2c\x48\x20\xc9\xe1\x89\xe5\xfe\x52\x69\xaf\xd5\xb8\xac\x66\xe6\xcb\x26\x65\x34\x59\x20\xfc\x17\xb2\x04\x8b\x25\x4f\x7e\xfe\x93\xd3\x10\x55\x9d\xe6\xbf\x03\xa8\x99\xca\x3a\x02\x50\x49\xf4\x3e\x7c\x46\xfd\xb6\xf5\xdf\xfa\x69\xe7\xc0\x44\x7c\x88\xc0\xa4\xb3\xcd\xe9\x89\x64\xe7\x1f\x27\x94\x3e\xce\x1a\x51\xea\xd2\xac\x83\x83\x07\xb3\x96\x4f\x18\x9e\x0b\xca\x36\x9d\x0e\x47\x99\x67\x5a\x66\x3d\x99\xc0\x19\xe6\xe0\xd0\x9e\x4f\xd6\x7a\x99\x24\x8c\x62\x71\x2e\x6d\x19\x47\xa8\xf0\x7c\xce\x57\x28\x7d\x21\xe9\xb0\xca\xb9\xab\x08\xf5\x7c\x9f\x86\x96\x33\x4e\xe0\x3a\x0d\x29\x84\x86\x2f\x28\x5b\xa9\xcc\xc5\x68\x90\xc9\x55\x08\x0b\x89\x4d\x84\x93\x73\x81\x85\x54\xde\x5b\xd2\x40\xda\x4e\xa5\x99\x01\x5e\x78\x71\x20\xd2\x20\x93\xcb\xd1\xd1\x95\xf4\xbf\xd3\x6d\x79\xf4\x26\x14\x22\xcc\x42\x6b\xc8\x46\xea\xe5\xa4\x33\x0b\x08\xb9\x82\x0b\xb9\xf0\xcc\x44\xff\x06\x00\x00\xff\xff\xd9\x02\x4a\xb6\xf4\x27\x00\x00")

func defines_html_bytes() ([]byte, error) {
	return bindata_read(
		_defines_html,
		"defines.html",
	)
}

func defines_html() (*asset, error) {
	bytes, err := defines_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "defines.html", size: 10228, mode: os.FileMode(384), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _index_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x5c\x7d\x6f\xdb\x36\xb7\xff\xbf\x9f\x82\x57\xed\x86\x3b\x60\x96\xd1\xde\x5d\xdc\xa1\x4b\x0c\xb8\xb1\xd3\x1a\xcb\x8b\x11\x3b\xb9\xcf\xfe\x1a\x64\x8b\xb6\xd9\xc8\x92\x26\xd2\x4e\xb3\xc2\xdf\xfd\x39\x87\x2f\x7a\xb3\x68\xcb\x8a\xb3\x27\x1b\x5a\xa0\x91\x44\x1e\x1e\x1e\x9e\x37\xfe\x0e\xa5\xe4\xeb\x57\x9f\xce\x58\x48\x89\xa3\xae\xfc\xfd\x7b\x75\xf3\xfb\x34\x5e\x25\xd1\x03\x77\x36\x9b\xaf\x5f\x1f\x98\x58\x10\xf7\xfa\xae\x7f\x73\x33\xe8\xf5\xb1\xc5\xc5\x1f\x34\xe0\x14\xaf\x6f\xce\xc8\xfb\x53\x12\x25\xc4\x3d\xbb\xe8\x8e\x46\x57\xdd\xcb\x3e\x71\xa6\x81\xc7\xd5\xe8\xc4\x0b\xe7\x94\xbc\x61\x3f\x92\x37\xd3\x28\xa1\x48\xeb\xf6\x3c\xe1\xb9\x67\xc3\x5b\xf7\x82\x71\xb1\xd9\x9c\x88\x84\xdc\xd3\xc7\x53\xe0\x85\x24\xee\xd5\x66\xd3\x39\x11\x3e\x91\x4c\x4e\x1d\x41\xbf\x88\x56\xc2\xe6\x0b\x41\xc2\xe8\x21\xf1\x62\xa7\x93\xa3\x3c\x69\x0b\xbf\x9a\xda\xe9\x9c\xf0\xd8\x0b\x09\x8a\xb8\xd9\xa4\xdc\x6f\x39\x4d\xce\x90\x16\x66\xc9\xb7\x21\x2b\xa4\xef\x1c\xcc\x71\xf4\xc8\x35\x43\xd2\xc9\xb5\x35\x67\x38\xf0\x03\x5a\x16\x11\xdb\x4a\x1c\xdb\x22\x81\x6e\x1a\xfa\xd2\x1c\xb9\xcb\xab\x9d\x86\x15\xde\x24\xa0\x0e\xaa\x1d\x6f\x52\xa1\xf0\xe1\x2d\xe1\x22\x61\x31\x6d\x29\x1a\x10\x7a\x41\x3d\x94\x3d\xc1\x5b\x9c\x71\x81\x37\x3b\x2c\x83\x9a\x54\x6b\xd2\x34\xab\x90\xc1\x32\xbf\xcb\x04\xdf\xc7\x01\x34\xf7\x34\x06\xa8\xa9\xbd\x1c\x50\x77\x78\xa7\x96\x37\x89\xfc\x47\x50\xa5\xa0\xcb\x38\xf0\xc4\x8e\x78\x20\xae\xf4\x38\x49\x0f\x57\xd4\x52\x67\xbf\xd2\xfd\xd9\xe4\x51\x50\xfe\xfb\x71\x43\xca\x67\xfc\x3e\x0b\xa7\xde\xb9\x9c\x63\x3b\xa4\x90\xcc\xed\xb1\xe4\xca\x5b\xd2\x5f\xe9\x63\x31\xb6\x72\x01\xa5\xe9\xf8\x3d\x12\x7e\x1a\x5f\x5e\x6c\xc7\xd6\x36\x75\x62\x27\xce\x7b\xb9\x19\xd0\x5d\x7b\x2c\xa8\x47\x0a\x8e\x04\x4a\xfd\x3e\x9c\xf0\xf8\x97\x13\xbe\x8a\xb7\x22\xc5\x50\x0d\x69\x32\xa5\xa1\xc8\xc5\x4b\xa9\x67\xb3\xc9\x4c\x2f\x19\xd5\x98\x7d\x1c\x09\x2f\x15\xb4\x49\x9c\x19\x93\x9b\x60\xdb\x63\xd4\xc3\x62\x51\x3b\xd0\x9b\x8b\xcc\xfc\x17\x2c\xbc\xc7\x8c\x93\x45\x06\x52\xd3\xc4\xe9\x90\xec\xdf\x89\x47\x16\x09\x9d\xa1\xf6\x2e\xc0\x61\xce\x47\xee\x27\x78\x84\xb4\x05\xff\x32\xc5\xea\x2e\x93\xd2\x08\xe9\xf4\xe8\x9a\x4d\x75\x4c\x55\x10\x7a\x09\x15\x39\xea\x54\xd9\xde\x56\xb4\xee\x97\xe9\x72\x68\x95\x09\xba\x72\xb3\x5c\x46\xab\x50\x50\xbf\xec\x15\x86\xf0\x50\x99\x48\x21\x29\x17\x65\xea\xde\x75\x07\x17\x46\xac\xe2\x54\xaa\xcb\xf8\x9e\x74\x6f\xad\xa6\x6a\xc2\x9c\x58\x4f\x93\xe9\x76\xd4\xef\xa5\x9a\x2a\x4e\x25\xbb\xd2\x0d\x09\xe3\xc8\x88\x54\x49\x98\xd7\xd4\xd3\x64\x1a\x5f\x8f\xbb\x16\x3d\xa9\x2e\xb3\x72\x19\x5d\xd5\x7a\xd2\x84\xbb\xf4\xa4\x83\xef\xd0\x14\x5e\x48\xc2\x4d\xf3\x38\x0b\x23\xff\xd9\x13\xb9\x9a\xe4\x65\x67\xf2\xc1\x2c\xa1\xb4\x26\xe9\xaa\x56\x2a\x47\x32\x4b\x2e\xcf\x75\x35\x49\xe6\x03\xa9\xcf\xa7\x65\x73\x6d\xf8\xc6\xd8\xa9\x9c\x01\x75\x4a\xb5\xe4\x47\x93\xdc\xf6\x87\xa0\x4a\x39\xfb\xe9\x64\x1a\xd8\x4f\xa6\x22\xb3\x09\x42\x2a\xc6\x46\xb3\xf8\x62\x07\xe2\x24\x53\x5b\xcc\xb2\xe8\x19\xd8\x60\x10\x9b\xb9\x85\xb8\xe9\x64\x6d\xb5\xbc\x1e\x68\x7b\x34\x10\xde\x20\xac\x4d\x7a\xbd\x12\x75\x68\xeb\x71\xcc\x31\x6b\xe2\xc1\xac\x84\x47\x0e\x07\xff\x03\xf0\xc8\x64\xe6\x6d\x3b\xed\x36\x04\x27\x82\x89\x80\x9e\x3a\x1f\x06\xe3\x11\x89\xc1\xc5\x38\x9d\x46\xa1\x0f\xd0\x3c\xac\x00\xe6\x27\xac\x33\x39\x69\xb3\x4e\xcc\x6b\x63\x7c\xeb\x04\xa0\xa5\xe3\xce\x20\x30\x20\xc8\x87\xdf\xc6\xfd\x11\x59\x46\xfe\x2a\x88\xc8\x4f\x1f\xed\x0b\xf9\x80\xd3\x7c\xf7\xd3\xc7\x63\xcd\x63\x5d\x4f\xe5\x44\x07\x86\x2c\x7b\xfa\x8e\xc8\x66\x34\x49\xa2\xe4\x89\x21\xab\x78\x7c\x8b\x59\x9b\x72\xff\xd2\xa0\x2d\xc6\xab\xd9\xb5\xb7\x7c\xb0\x41\x2c\x95\x02\xf5\x98\xac\x0b\xa1\x69\x65\xdc\x24\x30\x8b\xc1\x58\x9b\xf5\xc1\xa1\x98\x8f\xa3\xa6\xb1\x18\x7b\xd3\x7b\x2a\x9e\x18\x8c\x9a\xc9\xb7\x68\xb4\xaa\xf7\x5b\x38\xd6\xdb\xcd\x9e\x2f\x28\xb7\xf8\x3f\x6b\x68\x16\xc2\xaa\x59\x6c\x2e\xe9\xf2\xd0\xa0\xfc\x91\xbc\x81\x51\x59\x64\x5e\xf6\x2f\xb7\x63\x12\x28\xdc\x5f\x19\x4e\x6e\x22\x32\x6b\xd9\x13\x11\x48\x78\x5e\xa7\x88\x43\xc2\xad\xd3\xb8\xac\x5d\x17\x66\x26\x05\xd4\x28\xca\x70\xe0\x93\x0f\xd8\x80\xc9\x73\x1c\x64\x3b\x1d\xd4\xc9\xae\xfe\xaa\x4a\xea\x38\x25\x94\x71\x92\x66\x2e\x16\xf3\x03\x3d\x2c\x4e\xa2\x69\xe6\x5e\xc3\x91\x9c\x68\xdb\xc5\x90\xcc\x1d\x0e\x7a\xb6\x97\x32\x4e\x87\x14\xa8\x76\x19\x3f\xa5\xbc\xcd\x53\xe6\x8f\x03\x33\x0a\x4e\x93\xfd\xdb\x4a\x36\x75\xc2\xa2\x84\x89\xc7\x9a\xe4\x57\x50\x7c\xd7\x24\x1d\xb1\x3f\xeb\x92\xde\x50\xce\x7c\x79\x48\x51\x49\x8e\x61\x82\xd5\xbd\x21\x1f\xb3\x65\x05\x67\x73\x34\x53\xd0\x46\x79\x93\x6d\x12\x31\x31\x6f\x7e\x18\xfd\xee\x28\x87\xd1\x85\xa3\x86\xe2\xc9\xef\x70\x04\xce\x53\x79\xa0\xa9\x7a\xd2\x13\x4a\x78\x48\x8f\x33\xab\xe8\x9e\x70\x9c\x59\x96\xe8\xd6\x2a\xd1\x6d\x5e\xa2\x5b\xbb\x44\xb7\x87\x4b\x54\x38\x1c\xdf\x92\x68\xd4\xbf\xa9\x3a\x60\xd5\x3d\xe6\xdc\x0c\x1f\x2a\xcf\x7c\x0d\x5d\xf3\x63\xe8\x2d\xab\xdd\x0c\x6c\x56\x83\x9e\xcc\x6a\x99\x3c\x95\x74\x47\xb4\xda\xd5\xe0\xac\x5f\xad\x23\xd9\x63\x96\x7d\x35\xb0\x4a\xa4\xe8\x8e\xa7\xa3\xbb\xc1\xcd\xb8\x5a\x22\xd9\x63\x26\xc1\x07\x8b\xd5\x14\xdd\xf1\x24\xba\xe9\x8f\x2c\x56\xc3\x9e\xd4\x10\xf0\x60\xf3\x6c\x49\xd7\xc4\x6a\x26\x09\x96\x24\x1a\x0f\x2e\x2d\x56\x93\x3d\xe9\x9b\x03\x78\xb0\xe8\x48\xd1\x1d\xa4\xa3\x9d\xb1\x86\x39\xd1\xe2\x47\xdd\x9c\x44\x67\xd7\x97\x97\xdd\xab\xde\xf6\x7b\x28\x43\xf7\x0c\xaf\x32\xf4\x56\xdf\x0c\x27\x88\x28\x0a\x04\x8b\x0d\x76\x52\x02\xe5\x51\x73\x9e\x80\xf8\x90\xcf\x5b\x20\xc6\x94\x2e\xc1\x70\xa7\x8e\xb7\x12\x11\x09\xe8\x4c\xe8\x2e\x28\x1f\x84\xec\x00\x8c\x71\xbe\x0a\x00\xd2\xe1\xfe\xe6\x8e\x16\x51\x22\xb2\xcf\x15\x2c\xec\xfd\x48\x70\x22\x41\x7a\xa3\x79\x5c\xd7\x7d\xf5\x2a\x7b\x1b\x80\x97\xfd\xcb\x5f\x71\x1a\x2b\xc4\x5a\x63\x23\xcc\x1b\x15\x67\xd6\x76\x94\x4b\xbc\xf3\x82\x15\xcd\x5e\x47\xec\x9f\x79\x3d\x97\x35\xbe\x93\xa1\x2b\xc7\x34\xa9\xfd\x3f\x0a\x90\xd3\xa9\xf3\xbf\x92\xbf\xdc\x49\xef\xbc\x39\xa0\x35\xd1\x47\xaa\x8a\xbd\x7f\xe7\x6c\x29\x1c\xd4\x78\x6f\xe9\x4d\x17\xd9\x1e\xad\x39\x5f\x42\x23\x8e\xab\x28\x2d\xa0\xc7\xbd\xbd\x35\xc0\xaf\x93\xe1\xb3\xb4\xa7\x88\xcf\xca\x14\x88\x59\xec\xbd\xc3\x24\x5a\x03\x58\x4a\xec\x14\x00\x48\xc5\xfe\xd7\x57\x92\x54\x2f\x66\xc6\x02\x08\x0e\x4f\x2c\x76\x43\xa5\x9d\x5a\xe3\x80\x66\xa6\x8b\x3a\x30\x9a\xcd\x08\xfd\x83\x38\x22\x59\x41\x9c\xfc\xf7\x67\x1e\x85\x64\xdb\x68\xfe\x0f\x48\x6a\x0f\x65\xe3\x01\xa4\xc0\x7a\x17\x7d\x1a\xfa\x87\xe2\xbf\xf5\xbc\x54\x30\x31\x1f\x3d\x50\x35\x1e\x52\x3d\xb1\xb4\xfe\xe9\x84\x60\xe3\xf4\x21\xd6\x26\x4d\x1b\x38\x5a\x30\x7d\xf2\x59\x42\xa7\x22\x4a\x1e\x1b\x15\x47\xa9\x65\x0e\xcc\x7a\x90\xc0\x13\xca\xd1\xa0\x27\x3e\x5b\x9b\x65\xb2\x30\x5e\x89\x16\xe8\x72\x15\x93\xdc\x7d\x8b\x2f\x89\x1e\xa0\x1a\x9c\x62\xee\xca\x93\x7a\xbe\x1f\x85\x4e\xe7\x46\x91\x9b\x34\x24\x29\x0c\xf9\x2c\x4a\x96\x32\x73\x25\x51\x90\xf2\x95\x14\x0e\x11\x8f\x31\x55\x75\x81\x43\x64\xde\x5b\x44\x01\xe8\x4e\xa6\x99\x1e\x9d\x79\xab\x40\x68\x27\x83\xe5\x18\xef\x52\xed\x3f\x98\x67\x28\xbd\x59\x84\x1e\xe6\x90\x35\x66\x23\x39\x58\x35\xa6\x0e\x01\x2b\x68\xc3\xc2\x53\x15\x9d\xfc\x57\xef\xfa\x6c\xfc\xdb\xb0\x4f\x16\x62\x19\x74\x4e\xf4\x4f\x69\x85\x25\x15\x1e\x99\x2e\xbc\x84\x53\xc8\xb4\x2b\x31\x6b\xfd\xec\xe8\xd6\x85\x10\x71\x8b\xfe\xb1\x62\xeb\x53\xe7\x5f\xad\xdb\x6e\xeb\x2c\x5a\x42\xa4\x31\xe5\x3b\x26\x39\x0f\xfa\xa7\xd4\x9f\x53\x33\x08\xbd\x03\x5c\x8c\xd1\x87\x18\xb6\x83\x1c\xdd\x03\xf3\xc5\xe2\xd4\x97\xef\x40\x5b\xf2\xe1\x47\x30\x03\x13\xcc\x0b\x5a\x7c\xea\x05\xf4\xf4\x2d\x7a\x1d\x1e\xf6\xa4\xa9\xf0\x53\xc4\x45\x28\x53\x0a\x81\x3b\x60\x03\xc6\x97\x04\x27\x01\x94\x1b\xa0\xde\x00\xec\x03\x33\x18\xd5\xb2\xa5\x37\xa7\xed\x38\x9c\x3b\x6a\x5b\x77\xda\x33\x6f\x8d\x04\x2e\xb6\xe5\x47\x71\xf1\x18\x80\x65\x28\x2d\x98\xa5\x3d\x85\x3d\xc0\x0c\x85\xfb\x36\x0b\x7d\xfa\xc5\xc5\x56\x70\x8a\x29\xc4\x87\xc8\x53\x7f\xf6\xd6\x9e\x6a\x75\xca\x2a\x24\x3c\x99\x02\x8f\xcf\xbc\x9d\xa0\x06\x13\x0a\x77\xef\xdc\xb7\xee\xdb\xff\x33\x0d\xee\x92\x85\xee\x67\xae\xf7\xba\xa5\xc7\x42\x45\x2f\xed\xef\x8e\xbb\x1f\x3f\xf6\x7b\x13\x16\x6e\x36\x40\xa7\xe5\x50\x23\x4c\xca\x80\x19\xda\x4b\x16\xdc\xeb\x4e\xd9\x61\xac\xaf\xa4\x82\x1b\x65\x64\x15\x38\x18\x0b\x18\xff\xd3\x80\xe1\x56\xa8\x9d\xe4\x24\xf4\xd2\x10\x81\xdb\x89\x97\x10\x75\x69\xf9\xca\xf5\xcc\xe3\x8c\x7d\xa1\x7e\x4b\x44\xb1\x43\xc0\xb7\xa9\xa4\x66\x73\xf0\x07\x0c\x89\x7c\xa0\xa1\xc9\x61\x39\x14\x86\x04\x2b\xe6\x17\x3b\x35\x33\x03\xc6\x2a\xba\x26\x90\x48\x7d\x09\x16\x51\xd8\x85\x76\x81\xd4\x2c\xdb\xb8\x61\x12\x09\x11\x2d\x75\xbb\x88\xe6\x73\x79\xd2\x19\xc5\xd1\x1a\x66\xd0\xad\x00\x8a\xe7\x18\x69\x0b\x6c\x24\xb3\x68\xba\xe2\x39\x94\x21\xa5\x3d\x75\x5e\xfb\x0c\x93\xe0\xa4\x55\x1c\x9c\xba\x70\xb2\x0a\x43\x16\xce\x89\x71\xcf\xde\x60\x34\xbe\x19\x7c\xd0\xe0\xa0\xe4\xb1\x0a\xf0\x49\x0d\xcb\x74\x82\x8b\x29\xf3\xcf\xc0\xa1\xa4\x33\x06\xd2\x8a\x00\x70\x10\x78\x31\xcf\x12\xb5\x69\x20\x65\x82\x6c\xe8\x2a\x16\x6c\x49\x5b\x31\x20\xd0\x50\x6c\x0d\x74\x3a\xaa\x3f\x7f\x6e\x9a\x8d\xca\x56\x71\x2b\x9f\x73\x9f\x9e\x4a\xf1\x56\x41\xce\x52\x46\x06\xb8\xc8\xc0\x92\x7c\x58\xec\x94\x8c\x29\x93\x5d\xca\x77\x30\x44\x9e\x01\x4b\x07\x04\xde\xee\x01\x17\x5d\x33\xa0\xbd\x0a\xec\x12\x98\x5b\xf3\x8d\x12\x70\xaf\xe2\x9a\x1b\x1f\x80\x25\x20\x2d\x07\xb8\x71\x94\x56\x92\x96\x29\xce\x6b\x74\xf6\x0e\xfe\x54\xc6\x54\x82\xe7\xfa\x63\xc8\x0b\xaf\xf1\xac\xbc\xb2\x77\x0d\x29\xe7\xf5\x5a\x01\x83\x8c\x44\x2e\xc4\xe8\x40\x4b\xe3\x4d\x05\x5b\xd3\xac\x40\x72\x30\xf5\xf2\xf7\xed\xf6\xc3\xc3\x83\x0b\x1e\x95\xc0\x7f\x77\x1a\x2d\xdb\x2a\x0b\x42\x0a\x09\xa8\xc7\x29\x6f\xe3\xbe\xc9\x45\x7a\x46\x0e\x3e\xc5\x21\x1c\x53\x07\x05\x18\x33\x1a\x5c\x5f\xa1\x83\x5e\x8f\xc6\xfd\xab\x71\x59\x0c\x69\xd7\xcc\xf9\x76\x06\x30\xda\x0b\xd2\x74\x22\xca\xde\x05\xe8\x84\x94\x5c\xd1\xac\x0b\xc9\x89\x1a\xe4\x23\x22\x4d\xcc\x03\xe3\x4b\xc6\xb9\x86\x1a\x93\x15\x04\x70\xba\xe1\x4e\x83\x08\x7d\x5e\xe5\x59\xd5\xa5\x03\x51\x8f\xd2\x7c\x1d\xe2\x25\xcc\x6b\x2d\x98\xef\x53\xc8\x9d\x12\x93\x75\xbe\x47\xc7\xe5\xbf\x9c\xb4\xd5\xc0\x5c\xec\xa9\x89\xa1\x93\x7b\xb8\x5b\x75\xf1\xb1\xe8\xdf\x85\x9f\xe0\x0d\xd9\xb2\x65\xd2\xab\x56\x0e\x89\x01\x14\x40\x52\xc0\xc4\xc8\xe9\x1a\xf4\xf2\x08\xc8\xa3\xa0\x05\xd0\x4f\xb1\x61\x12\x44\xd3\x7b\x54\x59\x6b\xe9\xb7\xde\x99\x9b\x68\x36\x83\x0d\xa4\xf5\xb6\x48\x0b\xf2\xd1\x00\xdb\x02\x6f\x42\x83\x72\x40\xb7\x54\xab\x24\x92\x39\x15\xd3\xd3\x44\x84\x2d\x39\x85\x03\x89\x0e\xd2\x9a\xbf\x5a\x2e\x1f\x97\x74\x09\x92\xcf\xd8\x7c\xba\xa0\xd3\xfb\x49\xf4\x45\x76\xb6\x38\x6e\x86\xaf\xd3\x4e\xe9\x82\x46\x4a\x60\xa3\xd2\xb4\xe2\x96\xa2\xdf\x99\x17\xf0\x12\xfc\x3d\x93\x5b\x8a\xfb\x09\xa0\xa0\x62\x74\xd9\xbf\x04\x8c\x42\x94\x63\x9b\x8d\xc9\x04\x06\x4c\xe7\x74\x2e\xe9\x52\xe2\x42\xcf\x00\x28\x99\x20\x2d\xa2\x96\x97\x9d\xf5\x28\x37\xc9\x9e\xb7\x7d\x82\xa8\x27\xf4\x7b\x54\x56\x09\xaf\x3d\x8d\x65\x21\x6d\x67\x5a\x34\xcc\x77\x14\x0c\x16\x8d\xa5\xe2\xa8\x19\xb2\x2d\x1d\x71\x65\x7a\x92\x11\x25\xec\x4f\x74\xc3\xa0\x25\x9b\x27\x50\x73\xa0\x95\xe4\x3e\x28\x9b\x8a\x3e\x24\x31\xa9\x42\xb0\xe8\xad\xb4\xb4\x25\xa3\xa1\x15\x2c\x4e\xef\x00\x14\x97\xf6\x53\x15\x4f\xbc\xec\x88\x30\x42\x8e\x32\x58\xa1\xe8\x98\x25\x1f\x73\x8c\xee\x4b\x1a\xee\x7c\x92\x8b\x4d\x0d\xb4\x6b\x06\x03\x8f\xf7\x78\xe1\xe8\xff\xbb\x43\xbb\x03\x82\x72\x29\x7f\xc0\x6a\xd2\x2e\x10\x25\x48\x81\x87\x0d\x5a\x2a\x4b\xb2\xac\x50\xae\x29\x23\xf3\x42\xe9\x9a\x01\xac\x6c\x29\xf6\x4c\xd1\x92\x2b\xf3\xcc\x94\x38\xc5\xf6\xfc\xda\xe5\xb6\x82\xa3\x66\x9c\xea\x08\x65\x39\x1f\x4b\x73\x25\xb0\x35\x75\xe0\x9e\x97\x57\xba\x92\x74\xcb\x58\xc1\xa2\xac\x42\xe6\xfb\x9f\xe7\xc9\x74\x6c\x66\x4f\x74\xa6\xef\x68\x79\x6e\x70\x6e\xf7\x32\x36\xcb\x80\x8c\x1e\x38\xf6\x26\x83\x73\x77\x8c\xbb\xb5\x46\x88\xa5\xdc\xb7\x2d\xfc\xdf\x22\xf5\xa5\x7a\x6d\x92\xf9\xa4\x0e\x9b\x24\xbe\xff\x58\x96\x03\x19\x99\x2c\x28\x8f\x93\xce\x76\x3b\x5b\xff\x0b\x38\xbd\x8f\x71\xa6\x9c\x0d\x50\x90\x3c\x48\xad\x72\x37\x8b\x40\x25\x2f\x54\x1c\x11\x13\x0f\xce\x37\x9b\x63\xa7\x38\xe4\xd9\x2c\xc3\x6d\xc1\x7b\x4c\x42\xbc\x80\xe7\xd9\xac\x65\xce\x84\x94\xe1\xbc\x09\xfa\x5f\x5a\x60\x9c\x8f\xbb\x1f\x46\x2e\x3b\x1f\x76\xcf\x7e\xed\x8f\x47\xee\x2d\xc3\x57\xb3\x39\x64\xfd\x3a\xfd\xb6\xc3\xe9\x0c\xd5\x4d\x1e\xbe\x1f\x3a\x4f\xff\xe6\xe6\xfa\xa6\x7a\x1a\xf5\x75\x97\xd3\x91\x67\x82\xbb\x27\xd1\x09\x64\xcf\x5c\xf2\x4b\xd1\xca\xa9\xe4\x37\x9d\x4e\xe7\x03\x5e\xf6\x40\x7c\x15\xad\x46\x05\x39\x49\x60\x56\x52\xde\x42\xf2\xde\x58\xa9\xda\x1f\xaa\x1c\x56\x25\x39\xd9\x5d\xd8\x60\xf4\xea\x54\xa9\x62\xb5\x98\x4e\x8e\x87\xda\x37\xdd\xbb\xd2\xc5\xd5\xd9\xc1\xca\x1f\x78\x6d\x6f\x64\x99\xce\xb4\x3d\x9b\xa8\x2c\xe7\x25\x47\xd4\x98\xe6\x5a\x4f\x61\x65\x47\xcd\xe9\x4b\x2d\xac\x9e\xba\x0a\x5f\xa7\xee\xd2\x96\x72\xc9\x26\xca\xca\xdc\xfc\x88\xba\x52\x4c\xeb\xa9\xaa\x14\x67\x39\x4d\xc9\x45\xd5\x53\x54\xfe\xd3\xfb\x66\xf0\xe8\xdd\xf3\xc0\xa3\x69\xbc\xb2\xe3\xa3\xb4\xf3\x68\x00\xe9\x6c\x78\x0b\x76\xaa\x06\x48\x30\x9b\xd3\x01\x82\x2a\x20\x54\x21\xe6\x0b\x46\x42\xea\x5c\x35\x55\x5e\x13\x14\xa4\x14\xf5\xcf\xad\xff\xa4\xb1\xff\x62\xc0\xa4\x74\x6a\x45\x4c\xbb\x44\xb2\x42\x26\xe0\x79\x7c\xcc\x24\x99\x3e\xa5\x2c\xcc\xf9\x60\xd3\x82\x50\x2b\xab\xb2\x20\x04\xb6\x75\xd2\x5e\xfa\x97\x06\x5e\x54\x41\xe8\xef\x28\x08\xfd\x63\x17\x84\xbd\x73\x6b\xba\xf3\x2b\xeb\xc1\xde\xce\x7a\x70\x5b\xf6\x17\x9c\x05\x33\x37\xf4\x9f\x52\x0f\xf6\xbe\xd5\x83\xf5\xd2\x5b\x6f\x67\x3d\xe8\x37\xa8\x07\x7b\xcf\x50\x0f\xf6\x9e\xb3\x1e\xf4\x77\xd7\x69\x3d\x85\xe9\xfc\xf3\xc1\xd5\x75\xaf\xb2\x78\x32\xbf\xc3\x8a\xbf\xaf\x80\xd7\xaa\x3a\xcd\xaf\x55\xa7\xa5\x73\xd9\xea\x34\xff\xd0\x3a\x2d\x95\x2d\x27\xc8\x3e\x18\x5d\xb5\x62\x1b\x8e\xee\xd5\xc6\xd1\x65\xae\x3b\x81\xb4\x55\xe9\xd9\x7b\x50\xbd\xb0\x3a\x7b\x4a\xe9\xf7\xb0\xed\x35\x87\x5f\xaa\x39\x0e\x51\xd6\xfe\x9a\xa3\x81\xae\x6a\xd4\x1c\x36\x9f\xc9\x69\xaa\x76\xcd\xe1\x1f\x50\x73\x1c\xf4\xe2\xaf\xd6\x6b\xac\x9f\x4b\xaf\xb1\x9e\xa9\x7a\x89\xb9\x7d\x2f\x37\x7d\x47\xdb\xcb\x87\x23\xeb\x5e\x8e\x6f\x7e\x87\x49\x34\xa5\x9c\xeb\x50\x2e\x6d\xdc\xdb\x82\xbe\xe0\x8d\x5b\x8a\x9d\xaa\xaf\xc9\x9e\x2d\x55\x55\x6b\xcf\x56\x2f\xdd\x6d\x85\x4b\xf1\x6f\x8d\x34\xde\x73\x86\xa3\x83\xf7\x9c\x97\x56\x2f\xa1\x87\x35\xc0\x13\x01\x78\x24\xb1\x81\x0a\xab\x21\x87\xa3\x30\x12\x3d\x3a\x4d\xa8\x27\xc1\xc4\x2e\x5c\x11\x73\x9c\xc3\x2a\x5c\xab\x5a\xae\x25\xfe\x21\xb8\x66\x72\x65\x80\x67\xb7\x58\x38\x45\x5d\xc8\x33\x1c\xc5\xc1\x8a\x8f\xc1\xd9\xac\x80\xa7\xb2\xbe\x8a\x79\xd3\xf2\x4a\x46\x48\x75\x75\x15\xd7\xca\xef\xe6\x77\x79\xfe\xa1\x99\x7d\x3d\xb7\x67\x76\xd3\x77\xb4\xcc\x7e\xf7\xd1\x9a\xd9\xf1\xab\x1d\xfd\x35\x2f\x99\x07\xd1\x04\x3f\x4f\x14\x9e\x58\x55\x66\xf9\x6d\xa1\x5f\x7a\x96\x4f\x55\xd9\x24\xcb\x4b\xb5\xbd\x9c\x2c\x7f\xf7\xf1\x6f\x9f\xe5\xd7\xfb\xaa\xc6\x43\x92\xd3\x7a\xde\x34\x39\x49\xc3\x56\x27\xa7\xf5\xbc\x4e\x72\x4a\xbf\x29\xaf\x9d\x9c\x76\x7e\x4e\xdb\x79\xb5\xf6\x12\x82\x52\x92\x53\xf3\x35\xdb\x66\xf3\xcb\xab\xdc\x97\xad\xfa\x63\x70\xf9\x2d\xf3\xbf\x03\x00\x00\xff\xff\x5f\x09\x2f\xeb\xd5\x54\x00\x00")

func index_html_bytes() ([]byte, error) {
	return bindata_read(
		_index_html,
		"index.html",
	)
}

func index_html() (*asset, error) {
	bytes, err := index_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "index.html", size: 21717, mode: os.FileMode(384), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if (err != nil) {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"defines.html": defines_html,
	"index.html": index_html,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type _bintree_t struct {
	Func func() (*asset, error)
	Children map[string]*_bintree_t
}
var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"defines.html": &_bintree_t{defines_html, map[string]*_bintree_t{
	}},
	"index.html": &_bintree_t{index_html, map[string]*_bintree_t{
	}},
}}

// Restore an asset under the given directory
func RestoreAsset(dir, name string) error {
        data, err := Asset(name)
        if err != nil {
                return err
        }
        info, err := AssetInfo(name)
        if err != nil {
                return err
        }
        err = os.MkdirAll(_filePath(dir, path.Dir(name)), os.FileMode(0755))
        if err != nil {
                return err
        }
        err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
        if err != nil {
                return err
        }
        err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
        if err != nil {
                return err
        }
        return nil
}

// Restore assets under the given directory recursively
func RestoreAssets(dir, name string) error {
        children, err := AssetDir(name)
        if err != nil { // File
                return RestoreAsset(dir, name)
        } else { // Dir
                for _, child := range children {
                        err = RestoreAssets(dir, path.Join(name, child))
                        if err != nil {
                                return err
                        }
                }
        }
        return nil
}

func _filePath(dir, name string) string {
        cannonicalName := strings.Replace(name, "\\", "/", -1)
        return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

