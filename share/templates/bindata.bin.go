// +build bin

package templates

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
	"os"
	"time"
	"io/ioutil"
	"path"
	"path/filepath"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindata_file_info struct {
	name string
	size int64
	mode os.FileMode
	modTime time.Time
}

func (fi bindata_file_info) Name() string {
	return fi.name
}
func (fi bindata_file_info) Size() int64 {
	return fi.size
}
func (fi bindata_file_info) Mode() os.FileMode {
	return fi.mode
}
func (fi bindata_file_info) ModTime() time.Time {
	return fi.modTime
}
func (fi bindata_file_info) IsDir() bool {
	return false
}
func (fi bindata_file_info) Sys() interface{} {
	return nil
}

var _defines_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x5a\x4b\x6f\xdb\x3e\x12\xbf\xe7\x53\x10\x42\xba\x68\x81\x5a\x41\x8b\xee\x1e\xba\x8e\x00\x37\x76\x5a\xa1\x71\x12\xf8\x91\xc5\x9e\x0a\xd9\xa2\x63\x6e\x64\x51\x4b\x51\x6e\xbd\x86\xbf\xfb\x72\x48\x51\x0f\x5b\xb2\x1e\x76\xfa\xbf\xb4\x87\xc6\x24\x7f\x9a\x19\x0e\xe7\x37\x43\x52\xda\x6e\x5d\xbc\x20\x3e\x46\x86\xfa\x1b\x7e\xfe\xac\x7e\xfc\x98\x7b\x24\x30\x76\xbb\xed\xf6\xf2\x06\x7d\xbe\x46\x94\x21\xf3\xe6\xae\x37\x1e\xdf\xf7\x86\x03\x64\xcc\x3d\x27\x0c\xc5\x70\x97\xf8\x41\xc4\xd1\x76\x6b\xda\xfd\x1e\xe7\x6c\xb7\x43\x08\x1e\xd9\xed\xae\x8d\x39\xf5\x3c\x27\x08\x71\x67\xbe\xc4\xf3\x97\x19\xfd\x65\x20\xbe\x09\xb0\x18\x48\xda\x0e\x23\x4e\x67\x49\x5c\x17\xfb\xd7\x06\x67\x11\x36\x90\x6a\x59\xdd\x2b\x29\xd9\xea\x7a\xce\x0c\x7b\xa0\xe0\x96\xb2\x58\x43\xa2\x00\x4c\x84\xa1\xe1\xbf\xc6\x7c\xe3\x61\x35\x6c\x89\x8e\x09\xfe\xc5\x85\x71\x57\xf2\x61\xeb\xe2\x62\xbb\xc5\xbe\xbb\xdb\x5d\x1c\x99\x6e\x10\x31\xfa\x33\x94\x33\xfe\x49\xf8\x12\x99\x0f\x4f\x83\xd1\xc8\xee\x0f\xa0\xc7\x84\xff\xb0\x17\xe2\x4a\x87\x6c\xb7\xcc\xf1\x9f\x31\xba\x24\xef\xd1\xe5\x9c\x32\x0c\x58\xb3\xef\x70\xc7\xbc\x79\x9c\x9a\x77\x24\x04\xc3\x38\x43\x2f\x78\x73\x2d\x64\x01\xc4\xbc\x17\x56\x77\xb9\x8b\xa4\x10\xe1\x08\x61\x7d\x87\x91\xe7\x25\x47\x3e\xfd\xc9\x9c\xc0\xb0\x32\xc8\xee\x15\x77\x8b\xd1\x86\xd5\x0d\x03\xc7\xd7\xfe\xd1\xcf\x4c\x43\xcc\x6e\x00\x2b\x7d\x93\xf6\x81\x28\xc0\x5b\x8d\x25\x8e\x37\x61\x2c\x10\x59\x99\xbe\xf6\x02\x6d\xd7\xc3\xfb\x26\x42\xdf\x9e\xc4\x2b\xce\xac\x78\x29\xf3\x7f\x8e\x2f\x2c\x77\x66\x1e\x86\x60\x95\x3f\x12\xa3\xa0\xf1\x01\x85\x9c\x91\x00\x77\x14\x46\x18\xbd\xc4\x0e\xd8\xce\xe0\x27\x68\x5c\xc2\x8f\x23\x2b\x03\x9e\x54\x73\x8a\x31\x91\x4f\xc4\x34\xdf\xa4\x86\x57\x49\x10\x9e\x3b\x4d\x00\x78\xaa\x52\x02\xf8\x0e\x7e\xa9\xe9\xcd\xa8\xbb\x11\xae\xe4\x78\x15\x78\x0e\x3f\xc2\x07\x64\xca\x88\x93\x78\xf1\x17\xbc\x64\x55\x3b\xdd\x5d\xcc\x36\x1c\x87\x3f\x6a\x53\xea\x56\x53\xea\xdb\x64\x78\x77\xfb\x30\x42\xc6\x82\xb2\xea\xf4\x93\xb0\xcd\x25\xe1\x4b\xca\xb4\xfe\xad\x54\x9f\xb2\x6d\xbb\x15\x74\x43\x42\x94\x11\x5b\xd6\x11\x96\xcd\x36\x1d\x97\x30\xdf\x59\x89\xac\x23\x05\x98\x7d\xc2\xee\x45\x33\xcf\xc6\x94\x82\x47\xbc\x25\x33\xd1\x5b\xf8\x83\xc4\x5c\x94\xa2\x8e\xd2\xe4\xe2\x75\x4e\x07\x5e\x83\x0e\xf4\xe1\xe3\xbb\x43\x2e\x9f\xac\xab\x70\x3e\xe8\x1f\x05\xaa\xb2\x9c\x14\x5e\x96\xf8\xde\xda\x21\x5e\x3d\xa8\x08\x7b\x11\x02\x7f\xf3\x67\x61\xf0\xcf\x6e\x18\x05\x07\xbc\xd6\xa8\x47\xcc\xe6\xd8\xe7\x19\x76\xef\x8d\xec\x76\x69\xa0\x4a\x41\x35\xb4\x4f\x28\x77\x12\x43\xdb\x64\x05\x1d\xa0\x3a\x35\x54\x95\xb9\x46\x99\x23\x0e\xf7\xcb\xbb\x34\x22\xef\x88\xff\x02\xf9\x31\xe5\x31\xa0\x31\x33\x2c\x94\xfe\xeb\x3a\x68\xc9\xf0\x02\xbc\x77\x27\x62\xf8\x76\x6c\x7e\x13\x4d\x28\xa9\x28\xe3\xd8\x78\x48\x27\x60\x84\x2c\x11\x52\x64\x1e\x67\x80\x02\xa0\xc3\x30\xcf\xa0\x13\x67\x3b\x07\xb9\xa5\xda\xa6\xe1\x63\xa9\x4d\x62\x28\xa3\x65\x48\x23\x9f\x63\x77\x3f\x2a\x34\xb0\xa9\x4d\x28\x57\x42\xf2\x36\xf5\x9e\x7a\xf6\x9d\x36\x2b\xaf\x4a\x0d\xe9\xd8\x93\xe1\x1d\xbb\xa9\x18\x98\x31\xeb\x34\x9b\xa6\xe3\x41\x3f\xf1\x54\x5e\x95\x1c\x4a\xca\x27\xf0\x48\x9b\x54\x08\xcc\x7a\xea\x34\x9b\x26\x0f\x93\x5e\x89\x9f\xd4\x90\x9e\xb9\x64\x57\xb1\x9f\x62\xe0\x31\x3f\xc5\xe4\x6b\x5a\x70\x72\x25\xa3\x6d\xd5\x21\x3e\x75\xff\xca\xb2\xa3\xf4\x17\xd7\x1d\x35\xf6\x5b\x0a\x4f\xac\xea\xf7\x54\x9e\x12\x65\x0d\x4b\x8f\xbd\x60\x18\xd7\x84\x46\xb5\x6a\x0f\xc0\x4a\x8a\x4f\x66\xa8\x4d\xf5\xb1\xe5\x8c\x4f\x2b\x3f\x71\xa4\xb6\xde\x9a\xee\xa7\xec\xb8\x06\x94\x24\x74\x9d\x8d\xab\x73\x86\xca\x91\xd5\x38\x99\xb7\xaa\x61\x2a\x95\xb4\xd9\x80\xe6\xc9\xdc\x2e\x21\x90\x86\xdb\x50\x7d\x74\x5b\xa4\x9c\xb6\xf7\xb7\x92\xfa\xe0\x46\x16\x26\x04\xf8\x77\xbc\x51\xac\xb5\xd2\x3e\x48\x26\x95\xa1\x2c\xb0\x7d\xec\x71\xc7\xf6\x6b\x43\x1f\x22\x5e\x07\x5b\x4f\x62\x46\x58\x9b\x08\x26\x7b\x1b\xa8\xe6\x67\x2b\x5b\x44\x24\x5b\x38\x87\x41\x7b\x78\xc2\x41\x9c\x70\x0f\x5f\x1b\x5f\xec\xc9\x18\x05\x22\xc4\x42\x3c\xa7\xbe\x2b\x4e\x3e\x7e\xc1\xb9\xa7\x4b\xac\x59\xf7\x8a\x58\x41\x58\xfb\x08\x55\xaa\x40\x78\xe9\xbc\x1a\x38\x10\x02\x7d\xf9\xf7\x64\x30\x46\x2b\xea\x46\x1e\x45\x9f\xbe\x96\x4f\xe4\x0b\xa8\x79\xf3\xe9\xeb\xb9\xf4\x94\xce\xa7\x50\x51\x43\xca\x92\xd3\x4b\x38\x59\x60\xc6\x28\x3b\x91\xb2\x4a\xc6\x1f\xce\x96\x39\xf7\xb7\x92\x36\xcf\x57\x5d\xb5\x0f\x62\xb0\x05\x97\xf6\x88\x7a\x4e\xd1\x39\x6a\x96\x0a\x6e\x43\xcc\x3c\x19\x6b\x8b\x6e\x4c\xc5\x2c\x8f\xda\x72\x31\x70\xe6\x2f\x98\x9f\x48\xc6\x58\xc8\x1f\x36\x96\xba\xf7\x0f\x1d\xeb\x55\xb3\xd7\x23\xe5\x81\xfc\x57\xa5\x66\x8e\x56\xed\xb8\xb9\xc2\xab\xa6\xa4\x7c\x8f\x2e\xc5\x53\x29\x33\x87\x83\xe1\x21\x27\x05\xc2\xfc\x4e\x40\xb9\x66\x64\xda\x53\xc1\x08\x00\xde\xd6\x39\xc4\x01\xf0\xe0\xfa\x30\xed\x8f\x0f\x66\x3a\x05\xd4\x38\x94\xc1\x83\x27\xdf\x08\x0a\x21\xaf\xf1\x9e\xc0\xb0\xc0\x27\xc7\xc6\x8b\x4e\x52\xe7\x39\x42\xe9\x20\x69\x17\x62\x41\xd8\x30\xc2\x02\x46\xe7\x69\x78\x3d\x8e\xa5\xa2\xc3\x10\x03\x98\xf9\x68\xf7\xcb\xde\x79\x19\x16\xca\xa1\x8e\x2d\x7e\x82\x9c\x66\x91\xd9\xfb\xcb\x14\x11\x62\x56\x5d\x56\x52\xd5\x8c\x50\x46\xf8\xa6\x26\xfc\x5e\x1c\xbe\x6b\x42\xc7\xe4\x7f\x75\xa1\x23\x1c\x12\x57\x5e\x52\x14\xc2\x81\x26\x70\xba\xd7\xf0\x09\x59\x15\x48\xd6\x37\x3b\x39\x6f\xec\x17\xd9\x36\x8c\x09\xc2\xf6\xb7\xe7\x1f\xcf\x72\x7b\x9e\xbb\x6a\xc8\x5f\x55\x3f\x8e\x45\xf0\x14\xde\xc0\xaa\x91\xe4\x4a\x55\x34\x92\xfb\xd7\x22\xdc\x09\xf7\xaf\xfb\x16\x4d\x4b\x2d\x9a\x66\x2d\x9a\x96\x5b\x34\x6d\x6e\x51\xee\x36\xff\xc0\xa2\xf1\x60\x54\x74\x23\x1c\x8f\xe8\x7b\x33\x68\x14\x5e\x52\x6b\x5c\xfb\x7b\xf3\x83\x55\x1b\xd9\x65\xab\x26\x46\xd2\x55\x4b\xed\x29\xc4\x9d\x71\xd5\xee\xed\x9b\x41\xb1\x8f\xe4\x88\x9e\xf6\xbd\x5d\x6a\x91\xc2\x9d\xcf\x47\x4f\xf6\x68\x52\x6c\x91\x1c\xd1\x4a\xa0\x51\xb2\x6a\x0a\x77\x3e\x8b\x46\x83\x71\xc9\xaa\xc1\x48\xb2\x10\xa2\x51\x16\xd9\x12\xd7\x66\xd5\x74\x12\xdc\xb3\x68\x62\x0f\x4b\x56\x4d\x8e\x24\xaf\x3a\x44\xa3\xc4\x47\x0a\xd7\xc8\x47\x47\xb9\x06\x39\xb1\x24\x8e\x7a\x19\x8b\x6e\x1e\x86\xc3\xde\x7d\xff\xf0\xc5\x99\xc6\xbd\xc2\xbb\x97\xb8\xd4\xb7\xdb\x27\x70\x4a\x3d\x4e\x02\xbd\x77\x52\x06\x65\x77\xcd\x59\x00\x72\x45\x3e\xef\x08\x33\xe6\x78\x25\x16\xee\xda\x70\x22\x4e\x91\x87\x17\x3c\x1e\x12\xc7\x07\x2e\x07\xe0\x8b\x9f\xc8\x13\x5b\x3a\xa8\x6f\xe6\x78\x49\x19\x4f\xbf\x06\x29\x11\xef\x52\x1e\x22\xb9\x49\x6f\xa5\xc7\x34\xcd\x8b\x8b\xf4\x6d\x00\xfc\xa9\x9e\x7e\x14\xe2\x40\xed\x58\x6b\x14\xc2\xec\xa2\x82\xe6\x78\x1d\xe5\x14\x9f\x1c\x2f\xc2\xe9\xeb\x88\x6a\xcd\xeb\x67\x79\xc6\x37\xd2\xdd\x95\xa1\xbb\x54\xfd\xa7\x1e\x48\xba\x36\xfe\x2e\xe5\xcb\x4a\xfa\xe4\x3c\x8b\xdd\x1a\x1f\x00\xaa\xa0\xf6\x1f\xd5\x96\x6c\x07\xe3\xfd\xde\xca\x99\x2f\xd3\x1a\x1d\x4b\x1e\x8a\x4e\x78\xae\xe0\x68\x21\x46\xcc\xe9\x54\x6f\xfc\xac\x74\x7f\x96\x8c\xe4\xf7\x67\xfb\x08\xf5\x86\xac\x6c\xf4\x91\xd1\xb5\xd8\x2c\xb1\x72\x84\xd8\x90\xf2\x92\x9b\x85\xcc\x67\x56\x12\x1a\x4f\x66\x41\x3c\x41\x0e\x87\x2f\x8f\x6f\x95\x8e\x7a\x2d\x14\xbb\x99\xf9\xb2\xce\x36\x9a\x2c\x10\xfe\x2f\x8a\x3f\x83\x7b\xfb\x9f\x90\xfa\xe8\x70\xd1\xdc\x77\x00\x2d\xa7\xb2\x8e\x00\x94\x13\x7d\x0c\x9f\x50\xbf\xe9\xfe\x6f\xfd\xbc\x77\x60\x22\x2e\x44\xa0\xea\x6c\x72\x7a\x22\xc9\xf9\xc7\x82\x57\x88\x49\x23\x88\x97\x34\xe9\x08\x61\x05\x93\x96\x4b\x18\x9e\x73\xca\x36\xad\x0e\x47\xc9\xca\x34\xcc\x7a\x22\x81\x33\x1c\xc2\x82\x76\x5d\xb2\xd6\xd3\x94\x1f\x2b\x76\x84\x2f\xa3\x00\x65\x7e\x77\xc2\x15\x8a\x1f\x50\x1d\x46\x3e\x77\x65\xa1\x8e\xeb\x52\xdf\xb0\x46\x0a\xae\xd3\x90\xfa\xbe\x32\x86\x2f\x28\x5b\xc9\xcc\xc5\xa8\x97\xc8\x95\x08\xfd\x69\x25\x94\x44\x03\xc9\xbc\xb7\xa4\x9e\xf0\x9d\x4c\x33\x7d\xbc\x70\x22\x8f\xc7\x41\x26\xa6\xa3\xa3\x4b\xf5\xbf\xd3\x6d\x71\xf4\x26\x14\x22\xcc\x40\x6b\xc8\x46\xf2\x61\xd5\x99\x04\x84\x98\xc1\x95\x98\x78\xe2\xa2\xff\x07\x00\x00\xff\xff\x13\x3d\x7d\x93\x42\x2a\x00\x00")

func defines_html_bytes() ([]byte, error) {
	return bindata_read(
		_defines_html,
		"defines.html",
	)
}

func defines_html() (*asset, error) {
	bytes, err := defines_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "defines.html", size: 10818, mode: os.FileMode(384), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _index_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x3c\x6b\x6f\xdb\xc6\xb2\xdf\xf3\x2b\xf6\x32\xe9\x45\x03\x94\x14\x92\xdb\x7b\x4e\x91\xca\x04\x14\x4b\x4e\x84\xfa\x21\x58\x72\x7a\xfa\xa9\xa0\xc4\x95\xb4\x09\x45\xb2\xe4\x52\x8e\x6b\xf8\xbf\x9f\x99\x5d\x2e\x5f\xe2\x52\x14\x2d\xa7\x4d\x91\x00\x91\xc8\xdd\xe1\xcc\xec\xbc\x67\xb9\xf2\xfd\xbd\x4b\x97\xcc\xa7\xc4\x90\xdf\xf1\x9b\x37\xf2\xe2\xf7\x85\xc7\x42\xe3\xe1\xe1\xfe\xfe\xc5\x29\x79\x73\x42\x82\x88\x58\xa7\xe7\x83\xe9\xf4\x72\x70\x31\x22\xc6\xc2\x73\xe2\x18\xa6\xfb\xcc\x0f\x13\x4e\xee\xef\xad\xf1\x70\xc0\x79\xf4\xf0\x40\x08\x3e\xf2\xf0\x70\x62\x2c\x02\xcf\x73\xc2\x98\x9a\x8b\x35\x5d\x7c\x9a\x07\x9f\x0d\xc2\xef\x42\x0a\x13\xd9\xbd\x13\x31\xc7\x5c\x33\xd7\xa5\xfe\x89\xc1\xa3\x84\x1a\x44\xde\xd9\xfd\x9e\xc0\x6c\xf7\x3d\x67\x4e\x3d\x24\x70\x16\x44\x29\x85\x8c\x00\xb2\x88\x53\x17\xbf\x4e\xf9\x9d\x47\xe5\xb4\x0d\x03\x33\xfa\x99\x03\x73\x3d\xf1\xb0\xfd\xec\xd9\xfd\x3d\xf5\xdd\x87\x87\x67\x0d\xcb\x0d\x93\x28\xb8\x8d\xc5\x8a\x6f\x19\x5f\x13\xeb\xea\xc3\xe8\xfa\x7a\x3c\x1c\xe1\x88\x85\x1f\xd4\x8b\xe9\x5e\x81\xdc\xdf\x47\x8e\xbf\xa2\xe4\x05\xfb\x81\xbc\x58\x04\x11\x45\x58\x6b\xe8\x70\xc7\x3a\x9d\xdc\x58\xe7\x2c\x46\xc6\x78\x44\x3e\xd1\xbb\x13\xc0\x85\x20\xd6\x25\x70\xdd\xe7\x2e\x11\x48\x40\x10\xc0\xbd\x19\xb1\xd5\x9a\x13\x3f\xb8\x8d\x9c\xd0\xb0\x0b\x90\xfd\x1e\x77\xeb\xa1\x0d\xbb\x1f\x87\x8e\xaf\xe4\xa3\x9e\xb9\x89\x69\x74\x8a\xb0\x42\x36\xf9\x18\xa2\x42\x78\xfb\x60\x8c\xd3\xbb\x38\x45\x48\xec\xc2\x58\x77\x84\x63\xd7\xa3\x55\x16\x71\xac\x82\xb1\xc7\x23\x3b\x55\x65\xf9\xab\x59\xb1\xdc\x99\x7b\x14\x8d\x55\x5c\x64\x4c\xe1\xcd\x2b\x12\xf3\x88\x85\xd4\x94\x30\xc0\xf4\x9a\x3a\xc8\x7b\x84\x97\x48\x71\x8d\x17\x0d\x9a\x41\x49\xca\x35\xa5\x30\x89\xcf\x60\x99\xdf\xe5\x8c\xef\xc3\x00\x92\x7b\x1c\x02\x94\xd4\x5e\x0c\x28\x3b\xbc\x92\xcb\x9b\x07\xee\x1d\x88\x92\xd3\x4d\xe8\x39\xbc\xc1\x1f\x88\x25\x2c\x4e\xc0\xc3\x37\x4a\xc9\xde\x2f\x74\x77\x39\xbf\xe3\x34\xfe\xbd\xb5\x4b\x9d\x29\x97\x7a\x3f\xbb\x38\x3f\xbb\xba\x26\xc6\x32\x88\xf6\x87\x9f\xcc\xdb\x5c\x16\x7f\xca\x3d\x6d\x78\x26\xc8\xe7\xde\x76\x7f\x0f\xee\x46\x00\x95\x91\x72\x66\x02\x67\xf3\x3b\xd3\x65\x91\xef\x6c\x20\xea\x08\x04\xd6\x90\x45\x97\x70\x5b\xf6\xc6\xdc\x05\x1b\xa4\x25\x22\xd1\xf7\xf8\x45\x60\x2d\x92\x90\x29\x29\xb9\x74\x5b\xa2\x41\xb7\x48\x83\xbc\x7a\xfd\x72\xd7\x97\x1f\x4d\xab\x76\x3d\xe4\x5f\x35\xa4\x8a\x3e\x09\x52\x16\xf0\x83\xad\xc3\xbc\x76\xa0\x60\xf6\x60\x02\xff\xeb\xcf\xe3\xf0\xe7\x7e\x9c\x84\x3b\x7e\xad\xa0\x26\x34\x5a\x50\x9f\x17\xbc\xbb\x32\xf3\xf0\x90\x1b\xaa\x40\xd4\x82\xfa\x2c\xe0\x4e\xc6\x68\x97\xa8\xa0\x0c\x54\x85\x86\x7d\x69\xee\xa0\xc8\x91\x9a\xfb\x8b\xf3\xdc\x22\xcf\x99\xff\x09\xe3\x63\xee\xc7\x08\x4d\x23\xc3\x26\xf9\xbf\xbe\x43\xd6\x11\x5d\xa2\xf4\xce\xc1\x86\xcf\xa6\xd6\x7b\xb8\xc5\x94\x4a\x0a\x82\x4d\xa7\x54\x00\x26\xc4\x06\x93\x62\x8b\x34\x02\xd4\x00\x3a\x11\xe5\x05\xe8\x4c\xd8\xce\x4e\x6c\xd9\xcf\xd3\xc5\x44\xcb\x13\x4c\x15\xa8\x5c\x04\x89\xcf\xa9\x5b\xb5\x0a\x05\x78\x28\x4f\xa4\x94\x42\xca\x3c\x0d\x3e\x0c\xc6\xe7\x8a\xad\x32\x29\x39\xa5\x6c\x4f\x98\x77\x2a\xa6\x7a\xc0\x02\x5b\x8f\xe3\xe9\x66\x3a\x1a\x66\x92\x2a\x93\x12\x53\x59\xfa\x44\x3f\x52\x2c\xd5\x02\x16\x25\xf5\x38\x9e\x66\x57\xb3\x81\x46\x4e\x72\x4a\xad\x5c\x78\x57\xbd\x9c\x52\xc0\x26\x39\xa5\xce\x77\x68\xc2\x29\xa5\x8c\xae\x59\x87\xf9\x81\xfb\x57\xa6\x1d\x49\xbf\x3e\xef\xc8\xb9\x2f\x92\x78\x52\x52\x5f\x26\xf3\x68\x88\x1d\x98\x7a\xc6\xcb\x88\xd2\x96\xa0\x49\xab\xdc\x83\x60\x9a\xe4\x53\x98\xea\x92\x7d\xc6\x62\xc5\x8f\x4b\x3f\xa9\xa5\x76\x2e\x4d\xab\x21\x3b\xcd\x01\x9a\x80\xae\xa2\xf1\xfe\x98\x21\x63\xe4\x7e\x38\x11\xb7\xf6\x83\xc9\x50\xd2\xa5\x00\x2d\x3b\x73\xb7\x80\xc0\x0e\x2c\x43\x55\xeb\xb6\xcc\x7d\x7a\x5c\x2d\x25\x55\xe3\xc6\x96\x16\x1a\xf8\x2f\xf4\x4e\x7a\xad\x9d\x8f\x61\x30\xd9\x6b\xca\x00\x3b\xa4\x1e\x77\xc6\x7e\x6b\xd0\xab\x84\xb7\x81\x6d\x87\xb1\x80\xac\x8b\x05\xb3\x4a\x01\x75\x78\x6f\x35\x06\x8b\x8c\x96\xce\xae\xd1\xee\x76\x38\x84\x33\xee\xd1\x13\xe3\xed\x78\x36\x25\x21\x98\x58\x4c\x17\x81\xef\x42\xe7\xe3\xd7\xf4\x3d\x7d\x66\xcf\xfb\x3d\x66\x87\x71\xeb\x16\x4a\x4b\x00\xa4\x74\x5c\x0a\x1c\x1d\x82\xbc\xfd\x6d\x36\x9a\x92\x4d\xe0\x26\x5e\x40\x7e\x7c\xa7\x5f\xc8\x5b\x24\xf3\xdd\x8f\xef\x8e\x45\x47\xbb\x9e\x5a\x42\x07\xba\x2c\x7b\x7c\x0a\x67\x4b\x1a\x45\x41\xf4\x48\x97\x95\x38\xbe\xf9\xac\x4e\xb8\x5f\xd4\x69\xcb\xfe\xaa\xb2\xf6\x8e\x0d\x76\xf0\xa5\x8a\xa3\x1e\x13\x75\xc9\x35\xb5\x88\xbb\x38\x66\xd9\x19\x5b\xa3\x3e\xd8\x15\x8b\x7e\xd4\xd5\x17\x43\x67\xf1\x89\xf2\x47\x3a\x63\x8a\xe4\x9b\x37\x6a\xc5\xfb\xcd\x1d\xdb\x65\xb3\xa7\x73\xca\x1d\xfc\x4f\xea\x9a\x25\xb7\xea\xe6\x9b\x1b\xba\x39\xd4\x29\x7f\x20\x2f\xe0\xa9\xdc\x33\x2f\x46\x17\xbb\x3e\x09\x10\xd6\x2f\x0c\x89\x2b\x8f\xcc\x47\xf6\x78\x04\x02\x9e\xb5\x69\xe2\x10\x70\x67\xfb\x30\x1f\x4f\x1b\x33\x15\x02\x5a\x34\x65\xf8\xe0\xa3\x77\x04\x01\xc9\x53\xbc\x27\x30\x6c\x94\x49\xd3\x7c\x5d\x27\x75\x9c\x16\x4a\x19\x49\x37\x13\x0b\xe3\x03\x2d\x2c\x8c\x82\x45\x6e\x5e\x93\xa9\x20\xb4\x6b\x62\x08\x66\x4d\xc6\x43\xdd\x3b\x2f\xc3\x26\x25\xa8\x26\xe5\x67\x90\x37\x45\xc8\xe2\xfe\x65\x0e\x11\xd3\x68\x7f\x5a\xc9\x49\x47\x2c\x88\x18\xbf\x6b\x09\x7e\x09\xcd\x77\x4b\xd0\x29\xfb\xb3\x2d\xe8\x35\x8d\x99\x2b\x36\x29\x6a\xc1\xd1\x4d\xb0\xbb\x57\xe0\x33\xb6\xa9\xc1\xac\x76\x76\x4a\xd2\xa8\x26\xd9\x2e\x1e\x13\xc6\xdd\x77\xcf\x5f\x1f\x65\xf7\xbc\xb4\xd5\x50\xde\xaa\x9e\x4c\xc1\x78\x6a\x77\x60\xe5\x4c\xb6\xa5\x0a\x37\xd9\xfe\x6b\x1d\xdc\x23\xf6\x5f\xab\x1c\xdd\x68\x39\xba\x29\x72\x74\xa3\xe7\xe8\xe6\x70\x8e\x4a\xbb\xf9\x3b\x1c\x4d\x47\xd7\x75\x3b\xc2\xe9\x8c\xda\x37\xc3\x9b\xda\x4d\x6a\x05\xd7\x7d\xdf\x7c\x47\x6b\xd7\x63\x9d\xd6\x60\x26\xd7\x5a\xce\x4f\x2d\xdc\x11\xb5\x76\x39\x3e\x1d\xd5\xcb\x48\xcc\xa8\x65\x5f\x8e\xb5\x1c\x49\xb8\xe3\xc9\xe8\xc3\xf8\x7a\x56\xcf\x91\x98\x51\x44\xf0\x46\xa3\x35\x09\x77\x3c\x8e\xae\x47\x53\x8d\xd6\x70\x26\x53\x04\xdc\xe8\x2c\x5b\xc0\x75\xd1\x9a\x0a\x82\x15\x8e\x66\xe3\x0b\x8d\xd6\xc4\x4c\xf6\xaa\x03\x6e\x34\x32\x92\x70\x07\xc9\xa8\xd1\xd7\x30\x26\x6a\xec\x68\x50\xe0\xe8\xf4\xea\xe2\x62\x70\x39\xdc\x7d\x71\xa6\xe0\x9e\xe0\xdd\x4b\x9a\xea\xbb\xd5\x09\x3c\x08\x3c\xce\x42\x55\x3b\x49\x86\x8a\x55\x73\x11\x80\xb8\x10\xcf\x4d\x60\x63\x41\x37\xa0\xb8\x13\xc3\x49\x78\x40\x3c\xba\xe4\xe9\x14\xb4\x0f\x5c\x4c\xe0\x89\x9f\xc4\x83\x92\x0e\xf3\x9b\x35\x5d\x07\x11\xcf\x4f\x83\x68\xd0\xbb\x01\x8f\x89\x28\xd2\x3b\xd1\xb1\x2c\xeb\xd9\xb3\xfc\x6d\x00\x7e\xed\x5f\x7e\x12\xd3\x50\x56\xac\x2d\x12\x61\x51\xa9\x48\x39\xd5\xa3\x58\xe2\x07\xc7\x4b\x68\xfe\x3a\x62\x3f\xe5\xed\x4a\xf4\xf8\x46\x5e\x5d\x19\x6a\x48\xe6\xff\xc0\x43\x4c\x27\xc6\xff\x0b\xfc\x22\x93\x7e\x70\x56\x50\xad\xf1\x11\x42\xd5\xe4\xfe\x46\x6a\x59\x39\x98\xd6\x7b\x1b\x67\xb1\xce\x73\x74\x8a\xf9\x02\x06\xf1\xb9\x9a\xd6\x02\x66\xac\x9b\x1b\x55\xf8\xd9\x79\x7d\x96\xcd\x94\xeb\xb3\x2a\x84\x7c\x43\xa6\x9b\x9d\x44\xc1\x16\x8a\xa5\x48\x0f\x01\x05\x29\xd7\xec\x2c\x14\x8e\x59\x09\xd0\x74\x31\x4b\xe6\x81\x73\x38\x7c\xdd\x5c\x2a\x35\x4a\x2d\x86\x6a\x66\xb1\x6e\x53\x46\xb3\x25\xa1\x7f\x90\xf4\x18\xdc\xf7\x1f\xe3\xc0\x27\xbb\x4a\x73\x5f\x22\xa8\xde\x95\x95\x05\x90\x12\xea\x26\xf8\xcc\xf5\x0f\xad\xff\xb6\xab\x4a\xc3\xc4\x5c\xb4\x40\x39\x78\x48\xf7\xc4\xb2\xfe\xc7\xc6\x57\x88\xd9\x4d\x98\xaa\x34\x1b\x88\x51\x83\xd9\x9d\xcb\x22\xba\xe0\x41\x74\xd7\xa9\x39\xca\x34\x73\x60\xd4\x83\x00\x1e\xd1\x18\x15\xda\x77\xd9\x56\x2d\x53\x1c\x56\x34\x41\x96\x49\x48\x0a\xd7\x66\xbc\x21\xe9\x03\x72\xc0\x28\xc7\xae\x22\xa8\xe3\xba\x81\x6f\xd8\xd7\x12\x5c\x85\x21\x79\xbe\x32\x05\x5f\x06\xd1\x46\x44\xae\x28\xf0\x32\xbc\x02\x42\x1d\xad\xc4\x94\x68\x10\x11\xf7\xd6\x81\x07\xb2\x13\x61\x66\x48\x97\x4e\xe2\xf1\xd4\xc8\x60\x39\xca\xba\xe4\xf8\x4b\x75\x0f\xad\x37\x0b\xd0\xc2\x0c\xb2\xc5\x68\x24\x1e\x96\x83\x99\x41\xc0\x0a\x7a\xb0\xf0\x4c\x44\xfd\xff\x19\x5e\x9d\xce\x7e\x9b\x8c\xc8\x9a\x6f\x3c\xbb\x9f\x7e\x0a\x2d\x6c\x28\x77\xc8\x62\xed\x44\x31\x85\x48\x9b\xf0\xa5\xf9\x93\x91\x8e\xae\x39\x0f\x4d\xfa\x47\xc2\xb6\x27\xc6\x7f\xcc\x9b\x81\x79\x1a\x6c\xc0\xd3\x98\xb4\x1d\x15\x9c\xc7\xa3\x13\xea\xae\xa8\x7a\x08\xad\x03\x4c\x8c\xd1\xdb\x10\xd2\x41\x01\xee\x96\xb9\x7c\x7d\xe2\x8a\x77\xa0\xa6\xb8\xf9\x01\xd4\xc0\x38\x73\x3c\x33\x5e\x38\x1e\x3d\x79\x85\x56\x87\x9b\x3d\x59\x28\x7c\x1f\xc4\xdc\x17\x21\x85\xc0\x15\xa0\x01\xe5\x0b\x80\xbe\x07\xed\x06\x88\xd7\x03\xfd\x00\x05\x25\x5a\xb6\x71\x56\xb4\x17\xfa\x2b\x43\xa6\x75\xa3\xb7\x74\xb6\x08\x60\xe1\x58\xf1\xa9\x18\x0f\xa3\xc6\x6b\x4a\x4b\x6a\xe9\x2d\x20\x07\xa8\x47\xe1\xba\xc7\x7c\x97\x7e\xb6\x70\x14\x8c\x62\x01\xfe\xc1\x8b\xd0\x1f\x9d\xad\x23\x47\x8d\xaa\x08\x49\x1c\x2d\x00\xc7\xc7\xb8\x17\xa1\x04\x23\x0a\x57\xaf\xad\x57\xd6\xab\x7f\xab\x01\x6b\xc3\x7c\xeb\x63\x9c\xe6\xba\x8d\xc3\x7c\x09\x2f\xf4\x6f\xcd\x06\xef\xde\x8d\x86\x73\xe6\x3f\x3c\x00\x5c\xca\x87\x7c\x42\x85\x0c\xa0\xd0\xdb\x30\xef\x53\x3a\x29\x26\x94\xf6\x25\x57\x70\x21\x95\x2c\x1d\x07\x7d\x01\xfd\x7f\xe1\x31\x4c\x85\xa9\x91\xf4\x7d\x27\x73\x11\xb8\x9c\x3b\x11\x91\x5f\xa6\x2b\x4d\x4f\xdd\x2e\xd9\x67\xea\x9a\x3c\x08\x0d\x02\xb6\x4d\x05\x34\x5b\x81\x3d\xa0\x4b\x14\x1d\x0d\x55\x0e\xcb\xa1\xf0\x88\x97\x30\xb7\x3c\x99\x22\x53\xc5\x58\xcd\xd4\x1c\x02\xa9\x2b\x8a\x45\x64\x76\x9d\x9a\x40\xa6\x96\xdd\xba\x61\x1e\x70\x1e\x6c\xd2\x71\x1e\xac\x56\x62\xa7\x33\x08\x83\x2d\x50\x48\x47\xa1\x28\x5e\xa1\xa7\xad\x71\x90\x2c\x83\x45\x12\x17\xaa\x0c\xc1\xed\x89\xf1\xdc\x65\x18\x04\xe7\x66\xf9\xe1\xcc\x84\xa3\xc4\xf7\x99\xbf\x22\xca\x3c\x87\xe3\xe9\xec\x7a\xfc\x36\x2d\x0e\x2a\x16\x2b\x0b\x3e\x21\x61\x11\x4e\x70\x31\x55\xfc\x79\x71\x28\xe0\x94\x82\x52\x41\xa8\xc3\xd9\x46\x2e\x58\x39\x40\xaa\x00\xf9\xa3\x49\xc8\xd9\x86\x9a\x21\x54\xa0\x3e\xdf\x79\xd0\xb0\xe5\x7c\x71\xdf\x34\x7f\x2a\x5f\xc5\x8d\xb8\x2f\x9c\xec\x15\xec\x25\x5e\x41\x53\x8a\x07\xf8\x12\x8e\x25\xf0\xe0\xd9\x93\xb2\x32\x45\xb0\xcb\xf0\x8e\x27\xe2\xc4\x37\xcb\x1e\xf0\x9c\xe6\x07\xce\x07\xea\x81\x5e\xe2\xe9\x39\x50\x97\xea\x50\x15\x60\xaf\xc3\x5a\x78\xde\x03\x4d\x40\x58\xf6\x30\x71\x54\x56\x92\xb5\x29\xc6\x73\x34\x76\x1b\x3f\xa5\x32\x25\xe3\x85\xf9\x10\xe2\xc2\x73\xdc\x2b\xaf\x9d\xdd\x42\xc8\x79\xbe\x95\x85\x41\x0e\x22\x16\xa2\x64\x90\x72\xe3\x2c\x38\xdb\xd2\xbc\x41\x32\x30\xf4\xc6\x6f\x7a\xbd\xdb\xdb\x5b\x0b\x2c\x2a\x82\xff\xd6\x22\xd8\xf4\x64\x14\x84\x10\xe2\x51\x27\xa6\x71\x0f\xf3\x66\xcc\xb3\x3d\x72\xb0\xa9\x18\xdc\x31\x33\x50\x28\x63\xa6\xe3\xab\x4b\x34\xd0\xab\xe9\x6c\x74\x39\xab\xb2\x21\xf4\x9a\x7e\xc2\xfa\x73\x3b\x12\x6e\x5e\xef\xcf\x24\x84\x34\x08\x6e\x80\xa1\x20\xa6\x5b\xe0\xe7\x0e\x72\x6d\xc9\x93\xa1\x5e\x29\x0f\xcc\xbd\x60\xf1\x09\xab\x5d\x73\xe3\x9a\xaf\xd5\x45\xb0\x5c\x42\xc8\x34\x5f\x95\x61\xc1\xe2\xa8\x87\x63\xf2\x67\x05\x15\x13\x36\xe5\xa8\x00\x12\x51\x04\x1d\x72\xce\x7d\x53\x90\x30\xc0\xb5\xc1\x91\xdd\x64\xb3\xb9\xdb\xd0\x0d\x70\xbe\x64\xab\xfc\xb7\x0c\x30\x69\xc6\x18\xfe\x9f\x67\x93\x42\xe8\x8a\x4b\x40\x23\x03\x93\xc4\x96\xd5\x7b\x4b\xc7\x8b\x2b\x05\xdf\xa9\x08\xa2\xd6\x7b\x28\x7e\x24\xa2\x8b\xd1\x05\x64\x65\x22\x55\xa9\x42\xb1\x32\x05\x20\x67\xd8\x17\x74\x23\x2a\x21\x47\x95\x0c\x22\x24\x68\x58\xad\x2e\xbb\xdb\x0f\x34\xe4\x8f\x2b\xca\x15\xca\xe3\x50\x96\x02\x55\x2e\x45\x85\xbc\xa1\x44\xd6\x48\x2c\x63\x47\x52\xc8\x93\x18\x56\x52\x59\xef\x1e\x44\xec\x4f\x34\x43\xcf\x14\xc3\x73\xa8\xb2\x51\x4b\x22\xf2\x8b\xa1\xb2\x0d\x89\x2a\x4c\xd6\x6c\x68\xad\xb4\x92\x84\x50\xd1\xb2\x10\xcc\xae\xa0\x0c\xac\x64\x90\x79\x02\xc8\xfd\xb8\x6a\x88\xf0\x84\x78\x4a\x65\xc7\xb2\x61\x56\x6c\xcc\x50\xb2\xaf\x48\xd8\x7e\x2f\x16\x9b\x29\xa8\x89\x82\x2a\x08\xf7\x58\xe1\xf4\xd7\xc1\x44\x6f\x80\x20\x5c\x1a\xdf\x62\xff\xa4\x67\x88\x12\x84\xc0\xf6\x3a\xe5\xaa\x18\x1e\x9a\x85\xab\x1a\xa7\x22\x53\x69\x95\x0c\x5a\xd6\xb4\x37\xaa\x4c\x2f\x34\x36\x8a\x24\x92\xd8\xa1\x5f\xb2\xbb\x03\x2d\x6e\x8f\xad\x65\x99\x10\x30\xab\x0e\x68\xcf\x6b\x9b\xb4\x87\xb2\xaa\x59\x72\xf7\x53\x17\x07\xff\xef\x69\xe2\x1e\x5b\xea\xc3\x9e\x9a\x3b\x5a\xd4\x1b\x9f\xe9\x6d\x8e\x2d\xf3\x44\x9e\x3e\x38\x73\xe6\xe3\x33\x6b\x86\xd9\x2a\xad\x90\x2a\x91\x70\x97\xf9\xaf\x22\x10\x66\x72\xed\x12\x07\x85\x0c\xbb\x84\xc1\xbf\x2c\xe6\x01\x8f\x4c\x34\x54\xc7\x09\x6e\xcd\xc6\x36\xfa\x0c\x46\xef\xa2\xb7\x49\x63\x83\x22\x5a\x6c\x24\xd6\x99\x9b\x86\xa1\x8a\x15\x4a\x8c\x58\x13\x8e\xcf\xa0\x3d\x3e\x72\xc0\x43\x9c\xdd\xe2\xdd\x4e\x79\x8b\xa1\x28\x2e\xd5\xb3\x6c\x69\xaa\x3d\x11\xa9\x38\x67\x8e\xf6\x97\x15\xd8\x67\xb3\xc1\xdb\xa9\xc5\xce\x26\x83\xd3\x5f\x46\xb3\xa9\x75\xc3\xf0\xd5\x64\xa1\xb2\x7c\x9e\x9d\x6d\x30\xec\x89\xbc\x28\x96\xaf\x87\xd2\x19\x5d\x5f\x5f\x5d\xd7\x93\x91\xa7\x9b\x0c\x5b\xec\x89\x35\x13\x49\x03\xc8\x1e\x5a\xe2\xa4\x64\x2d\x29\x71\xa6\xd1\xb0\xdf\xe2\x57\x43\x89\x5b\x71\x59\x25\x87\x02\x3b\x40\xba\xba\xff\xa2\x15\xeb\xcb\x3a\x63\x95\x01\x4e\x4c\x83\xa9\x6a\x9c\x3a\x5d\xa6\xac\xd9\xb5\xaa\x4b\xa3\xe4\xa1\x8a\xce\x52\x59\xb6\xc0\x36\x09\xad\x7a\xd2\x69\x37\xaf\xe5\x72\x4b\x15\x7b\x80\xd8\x0a\x56\xf2\x54\x52\x4b\x49\xb4\x13\x5a\xd5\x6a\x0b\x32\x93\x8b\x6b\x27\xb2\xd2\x51\xcd\x26\x89\x49\xfb\x3c\x40\x60\xb9\xa9\x3f\x95\xbc\x24\x85\x76\xe2\xaa\x38\x5e\x41\x5a\xf2\x27\x8d\xad\x84\x55\x3c\x8b\xfe\x98\xaa\xe9\xf5\xd3\x54\x4d\x8b\x30\xd1\x97\x4d\xd9\xe4\xd1\xea\xa6\xd3\xc9\x8d\xbe\x70\x02\x72\x86\x0d\x10\x75\x05\x52\x0d\x9f\x5f\x45\x85\x94\x8b\xb0\x4b\x89\x24\xc5\xf5\xcf\x6d\x15\x85\xc6\xbf\x70\x35\x95\x9a\xa0\xae\x9c\x6a\x62\x49\x5b\x4f\x01\xce\xe3\x17\x54\x02\xe9\x91\x3b\x48\x5c\xdd\x61\x86\xb8\xc7\x04\xb3\xa0\x08\x98\xdb\x04\xc4\xec\x6f\x1e\xfc\x0d\x3b\x48\xb7\xa1\x83\x74\x8f\xdd\x41\x0e\x1b\x3a\x48\xb7\xb6\x83\x1c\x36\x76\x90\xbb\xcc\x7f\x15\xf1\xd1\x7d\x4c\x07\x39\xfc\xd6\x41\xb6\x8b\x79\xc3\xc6\x0e\xd2\xed\xd0\x41\x0e\x9f\xa0\x83\x1c\x3e\x65\x07\xe9\x36\x77\x76\x43\x59\xf4\xb9\x67\xe3\xcb\xab\x61\x6d\xbb\xa5\x7e\xf5\x89\x27\xfc\xf1\xbb\xae\xb3\x73\x5b\x75\x76\x19\x2d\x5d\x67\xe7\x76\xea\xec\x32\x06\x0b\xdc\x68\x0a\xee\xba\xd5\xea\x2a\xee\x61\xb7\x8a\xbb\x4a\xa2\xb1\xe4\xd6\x4a\x3f\x7f\x85\xa8\x7e\xa4\xde\x22\xc7\x54\x7e\xc2\xac\xef\x50\xdc\x4a\x87\xd2\x42\x60\xfb\x3b\x94\xc7\xca\xab\x45\x87\xa2\x33\xa0\x82\xb4\x5a\x77\x28\xee\xc1\x1d\x8a\xc6\xd7\x1b\x5f\x7f\x37\xbf\x19\xfb\xa9\xf2\x66\xec\x89\x7a\x9d\x30\xd6\xe7\x77\x35\x77\xb4\xfc\x3e\x99\xea\xf3\x3b\xbe\x3f\x9d\x44\xc1\x82\xc6\x71\xea\xde\x95\x64\xbe\xcb\xe9\x57\x91\xcc\x33\x21\x76\x49\xe6\x42\x60\xad\x92\xb9\x7c\x7f\xad\x6b\x73\xca\x7f\x67\xa4\x73\x32\x9a\x4c\x0f\x4e\x46\x7f\xb7\xee\x0a\xcd\xac\x43\xa1\xe1\x81\x59\x12\x5d\xb5\xa1\x55\xe4\x64\xea\x07\x7c\x48\x17\x11\x75\x44\x95\xd1\x54\x70\x84\x31\xd2\xd0\x32\x67\xd6\xf3\xb5\xc1\x3f\x59\xd7\x8d\xaf\xbc\x12\x6a\x66\x0b\x49\xb4\xad\x85\x26\xd3\xd0\x4b\x62\xf9\xe7\xfc\x34\x95\xd0\xbe\x6e\x2c\x8c\x0f\xf4\x94\x66\x1f\xc9\xc2\x7f\xd8\x2a\xf2\xab\x1f\xc9\xfc\xa3\x63\xfe\x76\xa5\x8f\xf9\x6a\xee\x68\x31\xff\xc3\x3b\x7d\xcc\xc7\x53\x31\xe9\x69\x59\xb2\xf2\x82\x39\x1e\xff\xe3\x0e\x4f\x6a\xe3\xff\x2e\xd7\x5f\x45\xfc\xcf\x04\xda\x25\xfe\x0b\xe1\xfd\x7d\xe2\xff\x87\x77\x5f\x7d\xfc\xdf\xee\x6b\x34\x3b\x86\xad\xed\xa1\x0a\x6e\x56\x6d\x16\xb6\xb6\xab\x36\x61\x2b\x3b\xc6\x7d\x60\xd8\x6a\x3c\xc7\x6a\x3f\xdb\x3a\x11\x41\xbe\xc9\x89\x3a\x46\xf6\xf0\xf0\xf3\xb3\xc2\x91\xd2\xf4\x14\xb6\x38\x44\xfc\xdf\x00\x00\x00\xff\xff\x41\xec\x0c\xa3\x9c\x56\x00\x00")

func index_html_bytes() ([]byte, error) {
	return bindata_read(
		_index_html,
		"index.html",
	)
}

func index_html() (*asset, error) {
	bytes, err := index_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "index.html", size: 22172, mode: os.FileMode(384), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if (err != nil) {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"defines.html": defines_html,
	"index.html": index_html,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type _bintree_t struct {
	Func func() (*asset, error)
	Children map[string]*_bintree_t
}
var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"defines.html": &_bintree_t{defines_html, map[string]*_bintree_t{
	}},
	"index.html": &_bintree_t{index_html, map[string]*_bintree_t{
	}},
}}

// Restore an asset under the given directory
func RestoreAsset(dir, name string) error {
        data, err := Asset(name)
        if err != nil {
                return err
        }
        info, err := AssetInfo(name)
        if err != nil {
                return err
        }
        err = os.MkdirAll(_filePath(dir, path.Dir(name)), os.FileMode(0755))
        if err != nil {
                return err
        }
        err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
        if err != nil {
                return err
        }
        err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
        if err != nil {
                return err
        }
        return nil
}

// Restore assets under the given directory recursively
func RestoreAssets(dir, name string) error {
        children, err := AssetDir(name)
        if err != nil { // File
                return RestoreAsset(dir, name)
        } else { // Dir
                for _, child := range children {
                        err = RestoreAssets(dir, path.Join(name, child))
                        if err != nil {
                                return err
                        }
                }
        }
        return nil
}

func _filePath(dir, name string) string {
        cannonicalName := strings.Replace(name, "\\", "/", -1)
        return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

