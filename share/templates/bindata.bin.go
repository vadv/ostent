// Code generated by go-bindata.
// sources:
// index.html
// DO NOT EDIT!

// +build bin

package templates

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
	"os"
	"time"
	"io/ioutil"
	"path"
	"path/filepath"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name string
	size int64
	mode os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _indexHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x5c\x6d\x73\xdb\xb6\x93\x7f\x9f\x4f\x81\x63\xdb\x9b\xa6\x53\x51\x97\x5c\x7b\x97\x49\x6d\xcf\x38\x96\x92\x6a\x1a\xdb\x3a\x5b\xce\x5d\x5f\x75\x28\x11\x92\x10\x53\x24\x4b\x80\x72\x5c\x8d\xbe\xfb\xed\x02\xe0\x33\x29\x93\x22\xa5\x78\xe6\x9f\xcc\xc4\xe2\x03\xb0\x4f\x58\xfc\xb0\x00\x96\x38\xf9\xb7\xc1\xf5\xc5\xe4\xcf\xf1\x90\x2c\xc5\xca\x79\x71\x76\x22\x7f\x08\x81\x0b\x6a\xd9\x70\x81\x97\x2b\x2a\x2c\x32\x5b\x5a\x01\xa7\xe2\xd4\x08\xc5\xbc\xf7\xc6\x48\xbf\x5a\x0a\xe1\xf7\xe8\xdf\x21\x5b\x9f\x1a\xff\xd7\xbb\x3b\xef\x5d\x78\x2b\xdf\x12\x6c\xea\x50\x83\xcc\x3c\x57\x50\x17\xea\x8d\x86\xa7\xd4\x5e\xd0\x4c\x4d\xd7\x5a\xd1\x53\x63\xcd\xe8\x83\xef\x05\x22\x55\xf8\x81\xd9\x62\x79\x6a\xd3\x35\x9b\xd1\x9e\xbc\xf9\x99\x30\x97\x09\x66\x39\x3d\x3e\xb3\x1c\x7a\xfa\x2a\x22\x24\x98\x70\xa8\xbc\x86\xbb\xcd\xc6\x1c\x58\xc2\x32\x7f\xf7\xb8\x40\xe2\xdb\x2d\x81\x2b\x20\x79\xd2\x4f\xca\x9d\x9d\x38\xcc\xbd\x27\x01\x75\x4e\x0d\x06\x2c\x0d\x22\x1e\x7d\x90\x83\xad\xac\x05\xed\xfb\xee\xc2\x20\xcb\x80\xce\x4f\x8d\xfe\xdc\x5a\x63\x01\x13\x9f\x15\xaa\x72\xf1\xe8\x50\xbe\xa4\x54\x44\x04\x04\xfd\x22\xfa\x33\xce\xe3\xfa\x70\xdd\x67\xae\x4d\xbf\x98\xf8\x54\x53\xe0\xb3\x80\xf9\x22\x5d\xe5\xb3\xb5\xb6\xd4\x53\x23\x6f\x67\xc2\x83\x19\x10\xfa\xcc\xfb\x01\x5a\x38\xa0\x70\xf5\xda\x7c\x65\xbe\x7a\x13\x3d\x30\x57\xcc\x35\x3f\x03\x4f\x1b\x14\xef\xad\x2c\xe6\xaa\xf2\x9b\x0d\x9b\x13\x73\x72\xfe\xe1\xc3\x70\x30\x65\xee\x76\x0b\xe5\xb4\x30\xaa\xc6\x66\x43\x1d\x0e\x16\x02\x0e\xfd\x15\x73\xee\xf5\x4b\xf9\xc2\xb5\xb7\x5b\x23\x32\xea\x49\x5f\x09\xa7\xe5\xef\x6b\xd7\x38\x3b\x99\x7a\xf6\xa3\x7e\xe8\x5a\x6b\x32\x73\x2c\xce\x4f\x0d\xb8\x9c\x5a\x01\x51\x3f\x3d\x9b\xce\xad\xd0\x11\xd1\xed\x9c\x7d\xa1\x76\x4f\x78\xbe\x41\x02\x0f\x9a\x11\x4b\xb3\x05\x38\x0b\x34\x43\xcc\xcf\x66\x31\x31\xf4\x08\x50\x89\x42\x4d\x27\x64\x76\x54\x26\x57\xca\x0e\x3c\xdf\xf6\x1e\xdc\x88\x0b\x4a\x48\x83\xa4\xb0\x14\x36\x14\xc2\x73\xb3\x42\x82\x20\x8b\x85\x43\xc1\xef\x1c\xc7\xf2\x39\xb5\xa3\x96\x54\x85\xb5\x4d\x55\x21\x94\x45\x95\x8a\x1e\x5b\xc1\x02\x1b\xea\x3b\x4d\x2b\x7e\x9d\x62\x2b\xdb\xdb\xb7\x62\xb6\x3c\xe8\x79\xae\xf3\x98\x2d\x02\x85\x26\x4a\x8e\xc4\x18\x60\x73\xa8\xb6\x83\x12\xfa\x65\x0f\xd8\x16\x48\x3d\x9b\x9a\x7d\x65\xc4\x4c\x23\x58\x84\xd9\x49\x73\x4d\x03\xcb\x05\x93\xe7\x1a\x31\x6a\x14\x6d\x56\x5d\x28\xd3\x12\x51\x51\x83\x58\x01\xb3\x7a\xf4\x0b\x70\xb7\x29\x50\x16\x41\x48\xe3\xde\x97\x6f\x08\x74\x18\x64\xbf\xd4\xe0\x50\x50\xa3\x88\x1e\x27\x7d\xa8\x94\xd7\xcb\xca\xa8\x14\x3a\x05\x05\x56\xd4\x0d\x23\xff\x56\xd7\x52\x4c\xc7\x9a\x52\xc7\xa1\xf6\xf4\x31\x6f\x82\x1c\x07\x87\x15\x48\x6a\x8f\xd6\x44\xfd\x80\x72\x00\xb5\x4c\xb7\x89\xab\x07\xa1\xeb\x32\x77\x71\xd2\x77\x58\x91\x6e\x8d\xfa\xd0\x48\x85\x16\x01\x94\xca\x97\x4b\xd9\x6b\x30\xba\x9d\xdc\x8c\xde\xa1\xb9\xac\xa2\x6b\x14\xc4\xe8\x87\x4e\xc6\x82\x19\x1b\x27\xcd\x94\xef\x56\x09\x24\xa8\x07\x64\x47\xbf\x4b\x37\x0b\x42\x93\x2e\x0a\x3f\x25\xb6\x46\x66\xcc\x37\xf2\xd0\x50\xa2\x73\xac\xf1\x68\x8c\xca\x96\x19\x38\x67\xba\xa2\x75\x23\xf5\xa2\x12\x8e\x55\xc6\x99\xe4\x7a\x43\xa3\x0e\x50\x6c\xa9\x98\x2b\x70\x2b\xbc\x4d\xe9\xf5\xf1\xbc\xcc\xe7\x4b\x9a\xa9\x68\xe6\x7d\xbc\xbf\x4c\x9a\x96\xee\x2f\x49\x84\xbe\x60\x2b\x5a\x68\xa0\x98\x7c\x4d\x32\x1a\xae\x14\xb5\x12\x9c\x2a\xed\x15\x19\x7b\xde\xc9\xaa\x65\x1d\x43\xdb\xb4\x54\xc2\x6c\x07\x29\x2f\x59\xec\x46\x55\x1e\x1f\x5d\x06\x6c\xb1\x14\xd5\x50\xb3\xcb\xed\x53\xb4\x1d\xc6\x45\x8f\xb9\x10\x06\xd1\xca\x5e\x15\x91\xae\xb0\xa9\x82\xe7\xef\x30\x08\x28\xb7\x1e\xbe\x6a\x66\xb1\xa7\x78\xf9\xbc\x8a\x95\xcf\xbb\xe5\xb4\x5e\x54\x71\x5a\x5b\x0b\x00\x7b\x71\x08\x57\x28\xf6\x18\x62\xcd\x04\x5b\x17\x87\xb8\xdc\x08\xbc\xa6\x01\x47\xef\xaf\x18\x83\xf7\x19\x76\x71\x36\xc0\xdf\xf6\xfb\x0f\x0f\x0f\x26\x8c\xa3\x01\xfc\x37\x67\xde\xaa\xaf\xe2\x70\x88\x5a\x1d\x6a\x71\xca\xfb\x8e\x25\x28\x2f\x1b\x55\xae\x6f\x27\xc3\xab\x49\xd9\x50\xd2\x0e\x6c\x22\x5d\x0f\x82\x38\x9a\x78\x17\x90\xd3\x8d\x19\x25\xb5\x08\x86\x3e\x0d\x6f\x6e\x47\xd7\x57\xc7\xc1\xa1\xdc\x70\x9e\xba\x85\x1b\xc0\x0a\x3d\x63\x88\x46\x24\x39\x17\x28\x8f\xf6\x89\x6f\xd9\x36\x84\x32\x38\x5f\xe0\x74\x0d\x7a\x3f\xf2\x65\xe9\x34\x21\xf0\x1e\xf2\x53\x03\xa4\xbd\xa2\x2b\x08\xd3\xd5\x3c\x54\x15\x9c\x3a\xde\xec\x1e\xe3\xfd\xde\xca\xee\xbd\x8e\x2e\xbc\xf9\x1c\xe6\x5c\xbd\x57\x99\x10\x62\xb3\x11\x74\xe5\xa3\x7d\x89\x01\xb3\x18\x10\x8b\xbf\x7d\xab\x2e\xfe\x02\xc7\xa7\x0e\x50\x37\x88\x99\x1f\x30\x13\xee\x6c\xbe\x8b\xf9\x7f\x36\x63\xc6\xe6\x3b\x79\xcd\xfc\x70\xa7\xa6\xcd\x98\x01\xb5\x9d\xdc\xec\x2e\x35\xb3\xcb\x35\xcb\xfa\x4d\x74\x53\x67\x72\x58\xc7\x33\x7c\xbe\x4b\x83\x37\x39\xc7\x68\x68\x3e\x18\x6d\x8e\xaf\xd1\x7a\x71\x40\x8d\xaa\x1c\xa2\x4a\xa5\x9d\x6b\x1c\x51\x85\xb5\x15\x10\x84\x27\x72\x4a\x34\x50\x6d\xb7\xbf\xe5\x17\x1b\xf4\x1a\x03\x2e\x3b\xc8\x15\xaa\xcd\xa6\xff\xd3\x8b\x9f\xfa\xdb\xed\x66\xa3\x04\x4c\x49\x6c\x21\x7a\xe3\x02\x8d\x01\x92\x6a\x20\x05\xca\xbf\xc3\x2f\x2e\x04\xb9\x17\x0e\x9b\xdd\x9f\x6e\xc4\x92\x71\x73\x09\x43\x97\x43\xe5\x93\xed\x0b\x05\x95\x13\x90\x53\x41\xe4\x99\x5e\x02\xd9\xc5\x4c\x9b\x67\xe6\xc0\xd4\x01\x6a\x31\xd7\x0f\x05\xea\x31\x1a\x9c\x0b\x11\x00\x3f\xb8\x91\x2d\xb1\xdd\x26\x73\x96\xde\x6c\x49\x67\xf7\x53\xef\x4b\xb4\xd0\x90\xdc\xcb\x71\x6b\xc9\x6c\x9b\xba\xf1\x80\x2a\xef\x50\x9a\xcf\xfc\xcb\x85\xe3\xc1\x9c\xc7\x90\x7c\x90\xa1\x1c\xe2\x90\xe1\x7b\x2f\xd0\x1c\xd3\x0c\x51\x2c\x7c\x7b\xf9\xbf\xb7\xb8\x4e\xa5\x4a\xe4\x14\x95\x24\x1a\x29\xeb\x87\xe0\x7d\xdc\xc0\x32\x0f\x4c\x2c\x09\xde\x81\x3b\xa1\x6b\x00\x5d\xfc\xa3\xd6\x94\x36\x1b\x08\x75\x16\x94\x7c\xcf\x7e\x26\xdf\xcf\xbc\x80\x92\xb7\xa7\x44\x8d\x45\x17\xe3\x3b\xf3\x23\x04\x91\x20\x80\x08\x36\x9b\x7b\xfa\x48\x24\x7a\x01\xa9\xe9\x63\xef\xca\x50\xe5\xcd\x2b\x25\xed\x89\xb0\x23\x7f\x46\x37\x52\x41\x2c\x71\xbd\x87\xc0\xd2\xd1\x23\x88\x1f\xd7\x38\xe9\x0b\xbb\xb2\x56\xbc\xfe\x86\x2b\x1a\x89\xa9\xa2\xea\x77\x9c\x06\x17\xea\x59\xb2\x9a\x98\xbc\x42\xe2\xf1\x22\xc7\x59\x1b\x46\xb7\x8f\x5c\xf3\x21\x79\x46\xf0\xaa\x3b\x3e\x23\xe9\xdf\xa5\x0a\xe1\xab\x0a\x46\x7d\x11\xa4\x3c\x22\xfb\x53\xc7\x3f\x14\x06\x61\xe3\xe2\x45\x2c\x34\xde\xbc\x22\x10\xc7\x30\x9f\x6a\x9c\x52\x7a\xa5\xd6\x99\x81\x73\x04\x25\x62\x99\x06\x99\xf8\x0e\x5f\x3c\xe1\x0e\xb2\x18\x36\x58\x66\xe5\x2a\x74\x59\x26\x46\x3a\xfb\x21\xb7\x64\xb5\x0f\x17\x68\xad\xc3\x33\xc1\xa6\x6a\xc3\xa5\xaf\xad\x2a\x9f\x46\x0b\xb7\x22\x59\xb9\xdd\x05\xfd\x51\x77\x57\xc8\x2f\x12\x28\x96\x0d\xd8\x04\x38\xec\xf9\xf4\x11\xe2\xd4\xbf\x1a\xa2\x87\xcd\xf8\x7d\x82\x1c\x83\xf7\x92\x48\x01\x3d\x34\x71\x8d\x20\x36\x0b\xe4\xe2\x9e\xaa\x6d\x0e\x58\x70\x25\x97\xf2\x72\xdd\x28\x07\x21\x3b\x8c\x20\x91\xf4\x47\xfc\x21\xaf\x5e\x23\xb7\x9e\x62\x67\xd3\x75\x86\x11\x5d\x23\xa3\x97\xa5\x28\xb4\x17\xb7\xff\x4a\x33\x2b\xd5\xaa\x9c\x59\x01\x21\xa0\xdb\xcb\x5a\xe7\x6b\x8b\x39\xcd\xaa\x40\x4f\x82\x16\xfe\x77\x77\xca\xfd\xdf\x4e\x78\xe8\x27\x48\x52\xad\x43\xc8\xa9\x4f\x83\x19\x84\xeb\xa0\x49\x72\x43\x62\x8a\x63\xf5\x40\x4a\x1f\xd1\xac\x05\x75\x91\x54\x13\x4f\x58\x69\x45\x5a\x81\x56\xe4\x9b\x9d\x20\x57\xa9\x5d\xc4\x32\x0e\x4c\x48\x74\xa5\x7d\x7a\x6c\x05\xd6\x8a\x9b\xc3\xab\xbb\x4b\xd3\x9e\x13\xe3\xfd\xad\x41\x0c\xd9\x43\xda\xd1\xb9\x1c\x77\x43\xe7\xfc\xd3\xf9\xe8\x63\x07\x74\xee\x6e\x87\x83\x0e\xc8\x4c\xae\x27\xe7\x28\x4e\x2b\x58\xcb\x80\x51\x17\xd8\xc6\x5c\xcf\x6e\x0f\x6e\x8a\x4a\x09\xba\xa9\x17\xc7\x83\x37\xcd\xef\x48\xf8\x56\xc1\x6d\x2f\x80\x1b\xcd\x03\x4a\x1b\x56\x09\x3b\x47\x38\x24\xd9\x1a\xe2\x46\xd2\x2c\xdd\x61\x9c\xf6\xd1\xae\xc2\xb3\xa8\x66\x7e\xa7\xf5\x6c\x20\xf7\xec\x2b\x02\x9d\x42\xe9\x4b\x2f\x74\x05\xb5\x77\x16\x27\x79\x1b\xc9\x62\x72\x2c\xdb\xa3\x1e\x0e\x68\x7b\x54\x93\x23\x4e\x67\x81\x55\x16\x32\xda\x43\x10\xdb\x2f\xbc\x62\xf3\x04\x7f\x46\x15\xc1\x15\xcb\x04\x57\xba\x8b\xb2\xb9\x99\x41\x9d\xe6\x30\xc3\xa2\xc0\x26\x4b\xb1\x7e\x7f\x87\x0a\x03\xea\x08\x6b\xe4\x36\xae\x72\x1d\x8a\x26\x75\x9a\x71\xc8\x12\x6f\xd5\x69\x59\x97\x81\x49\x66\x4a\x35\x82\x4e\x17\xcc\xad\xca\x7e\x5a\x9c\x90\x10\x99\x3e\x73\x6a\xbc\x1b\x4d\x6e\x09\xc0\x1d\xe1\x74\xe6\xa5\x77\xae\x81\xe6\xee\x69\xca\x49\x6e\xdd\x78\x7a\xd2\x4f\x3f\x39\xc3\x8d\x98\x3d\x67\x4b\x4f\x0b\x07\xad\xf2\xd5\xa5\x13\x08\x21\xe4\xdd\x9f\x93\xe1\x2d\x59\x79\x76\xe8\x78\xe4\x97\x0f\x2d\x0c\xf8\x2e\x27\xe2\x0f\xbf\x7c\x38\xb8\x8c\x8d\xed\xd8\x54\xc8\x36\xa8\xca\xba\x8d\xeb\xd8\x9c\x06\x81\x17\xb4\x44\x55\x45\xa3\x04\x56\xd5\x8b\x03\xe0\xaa\x26\xfc\x0d\x58\x9f\x6e\xd9\xe7\x84\xac\x15\xa0\x1a\x05\xa6\xbb\x3a\x5d\x07\xe0\x54\x85\x9a\x47\x62\x5f\x8e\x87\x75\x98\x77\x81\x7a\x15\x48\xd7\x05\xfb\x76\x78\x96\x06\xa0\x2e\x00\xcd\xb7\x66\xf7\x54\xb4\x44\x34\x4d\xa4\x04\xd2\xf4\x9b\x03\x60\x5a\x44\xf9\x1b\xa8\xd5\x68\xdd\x6f\xa8\xf6\x4c\x50\x4d\x45\x53\x5f\x17\xdb\xaa\x65\x78\x16\x08\x97\x41\xa4\xf6\x10\xb7\xa2\xab\x3d\x36\x28\xa1\x56\x02\x70\x97\xc3\xcb\x02\xb4\x61\x1e\x89\x02\xb5\x7b\x86\xc9\xc8\x58\xc3\xfc\x83\xa1\x50\x39\x54\x4b\xbd\xa9\x89\x02\x58\xe1\x7d\x93\x65\x2b\xac\xd0\xe9\xb2\xbc\x26\xd8\x66\xc9\x0a\x49\x74\xba\x28\x0f\x04\xbf\xc2\x4e\x62\xaa\x77\x60\x93\x34\x29\xbf\x63\x5d\xe9\x08\x0b\x4a\x91\xdf\xb7\xef\x41\x71\xba\x07\x10\x4a\x25\x9d\xc8\xc7\xaf\x94\xa5\x55\xe6\x41\xfa\x85\xcc\x96\x63\xee\x82\x4c\x85\xdb\x93\x79\x27\xd1\xde\xb4\x45\xf0\x3b\x94\x77\x63\xb9\x11\x8d\x49\x08\xd9\x85\xfd\x77\xd7\xd7\x1f\x4d\xc0\xe7\x39\x5b\x00\x4f\x62\x60\x7d\xb5\x0c\xa7\xc8\x44\x69\x8c\xc5\x37\x86\xcc\x77\x50\x99\x89\x98\xe0\xf1\x14\xed\x64\x13\xfc\x62\x7c\x17\xa5\xc1\x9d\x45\x39\x10\x78\x99\x4d\xc8\xd1\x49\x55\xaa\xbe\xd1\x4c\x0b\x10\x37\x4e\xf8\x50\x39\x1c\x46\xc2\xfe\x64\xee\x05\xab\x74\xaa\xc6\xd2\x0b\xd8\x3f\x98\xf7\xe3\xf4\xe4\xab\xa9\x17\x48\x2d\x3d\x21\xbc\x95\x7c\x84\xec\xf1\xf7\x7c\x86\x79\x83\x45\xfe\xff\x13\xd2\xe0\x31\xe6\x20\x67\xe1\x32\x1b\x25\x5a\xd7\x94\x22\xf4\x78\x38\x5d\xb1\xf8\x5b\x25\x7d\x97\xaa\x93\x6a\x6d\x64\xd6\x5b\x04\x5e\xe8\xf7\x30\x05\x8f\xda\xd9\x39\x7e\xaa\x24\x36\x8b\x2c\x48\xe2\xab\x1e\x5f\x45\x69\x93\xf2\x3e\x9f\x72\x5c\xc7\x25\x40\x64\x2a\x4d\x19\xb7\xbf\x72\x01\xc9\x45\x7f\x52\x54\xd3\x03\x34\xa9\x94\x79\xb4\x20\xbf\x4b\xb3\xe4\x33\x22\x63\xf9\xf2\xe2\x61\xde\xca\x50\x66\xbc\x62\x97\x82\x3b\x29\x93\xcd\x38\xde\xda\x7b\x8b\xa7\x92\x68\x4b\x05\x8c\xb2\x37\x13\xce\x88\x24\x70\x57\xcc\xe3\x2c\x64\xe7\x97\x7e\x55\x51\xab\x75\x77\xc1\x0c\xa8\x11\x50\xbe\x34\xb2\x7a\x8c\x87\x37\xa3\xeb\x81\xa9\x5f\x4a\x55\x0a\x79\x62\xc8\xf3\x45\x41\xb4\xf8\x32\xdf\xfb\x1a\x78\x48\x75\x4f\x7b\x22\xb5\x41\x67\xcb\x65\xb2\xda\x52\x02\xc9\x8b\xa6\xc0\x69\xcf\x8f\x8e\x9b\xb8\x2d\x7a\x20\xd8\xb4\xe7\x69\x63\x96\xed\xc8\x0a\x73\x82\x61\x66\xe2\x90\x4f\x20\xaa\x3d\x6f\x0a\xa8\xa8\x5e\x2b\x3c\xfd\xd7\x04\x4f\x34\x5b\x37\xd8\x99\x72\x82\x58\x8c\x86\xd0\x99\xc0\xe6\xe0\x7d\x97\xa8\x59\x26\x5a\xe4\xa7\x09\x60\x0e\xde\x3f\x6b\xbc\x44\x25\x76\xc3\x65\xe1\xc3\x1e\x0c\x7b\x79\xda\xfb\x1c\x26\x0d\x2f\x86\x6e\xb8\x42\x8b\xf1\xd2\xf4\x09\x41\x8c\xd1\xd5\xf5\x60\x88\x29\x26\xda\x37\x32\xf6\x2b\x57\xc5\xaa\x99\x9c\x91\x50\xcf\x7d\x1a\xd7\x40\xbc\xc1\x7b\xb9\xf5\x70\x28\xf9\x22\xf2\x05\x01\x93\x4f\x18\xba\x1b\x9c\xb0\x07\xee\x40\xad\x04\x11\xd5\x56\xb0\x42\xc4\x2b\x5a\x41\xb6\xa4\x09\x2b\x89\x23\x79\x39\xa5\x4f\xd3\x4f\xa6\x4a\xb5\x3c\x37\x97\x30\xa0\x46\xc9\xfc\x2a\x40\x3a\xf9\x3b\xd1\x47\x6e\xc2\xd4\x56\x27\x69\xf2\xba\xfa\xa8\x7d\xe3\xa6\xea\xa4\xb7\x52\x9f\xd6\xa6\xb3\x80\x80\x1d\x3f\x20\x60\x87\x0b\x08\xd8\x13\x01\x01\x6b\x1c\x10\xb0\xc6\x01\x01\xfb\x16\x10\xa4\x6b\xd7\x0d\x08\x58\x67\x01\x01\xeb\x32\x20\x18\x75\x1a\x10\x94\x89\x56\x0c\x08\x46\xcf\x3b\x20\x60\x47\x0a\x08\x18\xc2\xef\xf8\xfc\xe2\x8f\xe1\xe4\x10\x23\x6e\x86\xfc\x5e\x21\x81\xa4\x30\xbc\xb9\xb9\xbe\x39\x98\x7c\x9a\xfa\xfe\xe2\x8d\x0e\x16\xb1\x64\xc8\x1f\x25\x62\x61\xf5\x22\x96\x78\xd1\xbe\xce\x18\x9f\x73\xb2\x7a\x63\x7c\xb2\x93\xd8\x6c\x94\xcf\x6f\x81\xd5\x8f\x5a\xa2\xad\xd6\xda\x2a\xc5\x6e\x59\x57\x23\x9d\x95\xd1\x54\xa1\x4c\xa2\x42\x13\x7d\x6a\x47\x61\x39\x37\xae\xab\xcf\x3e\x51\x18\xfb\x5a\x51\x18\x7e\xa9\x7b\xec\x30\x0c\x37\x95\x0e\x15\x87\x01\xed\xa4\x63\x5e\xd2\x95\x17\x3c\xd6\x8c\xb7\xa0\x66\xd3\x80\x4b\x2a\xf2\x6d\x49\xbb\x8b\x20\x4c\x9a\xb2\x9b\x28\x2c\xed\x02\xb1\x20\x4f\x84\x61\x4f\xca\xc7\x1f\x2c\xbf\x2b\x01\x91\x96\x2c\xcd\xe6\x03\x1d\xdd\xed\xa1\x0e\x25\x48\xe7\x19\x47\x6b\x52\xf0\xe3\x2c\x77\x4b\xef\xd9\x6f\xb9\x3b\xde\x4e\xed\x76\xb9\xdb\xe7\x47\x87\x55\x9f\x1f\x0c\x55\xfd\xd4\x97\xb2\xe3\xc0\x9b\x51\xce\x29\xaf\x89\xab\x3e\x6f\x0a\xab\xa8\x48\x33\x54\x55\xa7\xee\x54\x21\x6a\xfa\xbb\x85\xe7\x05\xae\x6d\xbb\x98\xcf\xcb\x4f\xa2\x78\x4e\xc8\x8e\xad\xd9\x0d\x6e\xa6\xbc\x30\x0d\x84\x4d\xa6\xd7\xe3\x5b\xd9\xd9\xe1\xd7\xf5\xc4\x80\xce\x02\x6a\x49\x00\xce\xcc\xb3\xab\x84\x74\xc0\xed\xcb\x45\xfc\x38\xba\x1c\x4d\x4c\x9f\xbb\x45\x01\x7b\xfb\xc9\x96\xac\x03\xd4\x12\x0d\xe2\x9c\x0a\xeb\xed\x10\x2d\x5e\xa7\x8a\x19\xfb\x4e\xc8\x93\xb3\x1e\xb2\x52\x3f\x35\xae\x1c\x06\xd9\xd1\x7b\xf6\x03\x76\x9f\x1f\x02\xd7\xd7\x8b\xa3\xe3\xfa\x7a\x71\x30\x5c\x5f\x2f\x12\x5b\x7e\x52\x87\x70\x91\x85\xe3\x4d\xf1\x2c\x59\x61\x89\xb0\x2e\xc6\xaf\x17\x4d\x31\x1e\x95\xfa\x86\xf1\x75\x30\x1e\xdb\xe8\xb9\x63\x3c\xb6\x66\x37\x18\x9f\xf2\xc8\x58\x8c\x2a\x8c\xff\x3a\x88\x84\xba\xee\x87\x48\xeb\x45\xd7\x88\xc4\x1b\xa6\x74\xfa\x10\xbb\x25\xf9\x9c\x11\xee\xe7\x73\x3a\xfd\x28\x4f\xdd\x67\x98\xd1\x89\x95\xcc\xf1\x68\x80\x89\x85\xee\x62\xc7\xe1\x33\x1a\xda\xc0\x8e\x71\x9d\x7a\xa9\x9b\x71\x8d\xbb\x5c\x0d\xfd\x3a\xf5\xaf\x49\x76\xbc\xcf\x43\x0e\x28\x51\xa6\x85\xbe\xc7\xd3\x50\x6a\xa6\xca\x27\x5a\x05\x0c\xe6\xf0\xe2\xb1\x61\xb5\x2b\x36\xab\x99\xc8\x1a\x57\xb9\x65\xff\x34\xad\x72\x43\x39\xb8\xa8\xbb\x23\x2f\x1f\x13\x59\xa3\x0f\x8d\xcf\xa2\x6a\x13\x7d\x14\xe7\xee\xaf\xd7\x1b\x35\xc0\x2f\xb2\x01\xf0\xab\x84\x5d\x0d\x90\xff\x56\xa1\x55\x66\x6c\x34\xe2\x97\x26\xc6\xbe\x3e\xca\x41\x15\x18\xae\x80\x8e\x2d\xcf\x73\x40\x2a\x77\xdd\x50\xb9\x1d\xde\xb4\x3f\xee\x42\x6a\x75\x33\xea\x80\xca\xd5\xe8\x62\xd8\x01\x99\x4f\xa3\x9b\x49\x07\x64\x6e\xe4\xfe\x41\x5b\x2a\x93\xd1\xe5\x10\x43\x19\xd5\xb1\x3a\xb0\xd1\xb9\xa4\xd7\xf6\x2c\x0f\x3d\x38\xb4\xcf\x7b\x8e\x82\x14\x1d\xf7\xc2\x60\xa2\x1e\xc8\x81\x92\x98\xfa\xe0\x35\x1d\x5a\xa4\xae\x21\xb8\x20\xba\xa8\x7a\x60\xe8\xb1\x23\x73\x70\x7a\xaa\x3c\x84\x2f\xd1\xd9\x9f\x67\x37\xaa\x62\xbc\x0a\x7e\x16\x1f\x23\x17\x07\x84\x32\xf2\xc1\x63\x01\x21\x80\x89\x19\xa9\x43\xe0\x52\xc7\xeb\x19\x04\xec\x33\xa3\x4b\xcf\x81\x88\x11\xcf\xbc\x1b\x27\xb7\x32\x2c\xf1\x29\x00\xba\x8d\x40\xa4\x06\xfd\xd4\xc3\x4f\x96\x13\xc6\x4f\x5f\x48\x7b\x97\x1c\x37\xd7\x74\xd4\x4e\x7d\x6d\x00\xb5\xf5\x11\x65\x66\x1c\x76\xc4\x67\xd1\x49\xee\xdb\x6d\x74\x88\x55\x03\x0e\xeb\x85\xdc\x1c\x91\x40\x18\x10\x18\xd3\x31\x42\x57\x8f\x62\x7c\xf7\x1c\xa4\x7a\x6a\xfc\x1a\x0f\x05\xfa\x40\x54\x35\x0d\x18\x62\xe9\x4a\x60\xae\x21\x41\x1c\x99\xe8\xd0\x63\x65\xcd\x96\x49\xe8\xa1\xb9\x5c\xc2\x43\xac\x57\x08\x41\xf4\x89\xc0\x3a\x0e\x09\x43\x39\x82\x20\x09\xf3\x4e\xc6\x08\x65\xf1\x41\xdd\x91\xe9\xbf\x13\xf2\x79\xc2\x2f\xab\xa3\x0f\xfc\x94\x03\x8b\x5d\x59\xb9\xa1\xb2\xb4\xd4\x38\xf0\xd6\xcc\xa6\xc1\xae\x92\xf5\xa4\x7d\x93\x48\x8b\x53\x32\x9a\x16\x57\x5f\xde\xe2\xf3\x9d\xa2\xd7\x63\xf5\xeb\x7f\x24\xbc\xe6\xcc\xa1\xbe\x25\x96\x25\xec\x74\xdb\x61\x89\xbf\xb0\xc8\x93\xe3\x77\x0d\x6f\xe1\x10\xbf\xce\x96\x75\x22\x59\x36\x27\xf4\x6f\xa2\x8f\x81\xfc\xf1\x33\xf7\x5c\x52\x74\x5c\xfb\x65\x05\x0c\xe7\x3a\x08\xc9\x90\xde\x55\x3e\xc6\xd2\x7d\x83\x93\x28\xf8\x8f\x83\x13\x35\x6f\xce\x1e\x4c\xda\xe6\x13\x1e\x96\xff\xc8\x26\x79\x85\x51\x58\xe5\x4b\x5f\xbb\x6a\x65\x01\xe9\x76\x95\x6f\x6d\x16\xd0\x99\x90\xdb\x6c\x1d\x7d\xb1\x13\x7b\x43\x8b\xa1\x2b\x37\x66\x15\x07\x9b\xdd\x03\x55\xeb\x61\x2a\x3d\x39\x6f\x38\x44\x19\x88\xc4\x6a\xde\xac\xfd\x1d\x34\x8b\x1c\x5d\x3d\x7f\x19\xdd\x8f\xe5\x30\x05\xce\x6e\x90\x35\x8e\x16\xb2\xb2\x7a\x18\xfb\xa6\xd1\x6c\x6a\x99\x0a\x54\xd0\x55\x97\x99\xcd\x4b\x75\x0c\x10\xf0\x38\x77\xd8\xc2\xbd\x50\xcf\x15\x83\xc2\xa1\xb2\xe9\x63\x37\x4d\x5d\x34\x1e\x6a\xf4\x22\x63\xe1\x7c\x4e\xf3\xc2\x0a\xa8\x48\x97\x96\xc2\xa7\x4f\xe3\xb4\xb4\x2f\x2c\x63\x75\xfe\x3f\x00\x00\xff\xff\xfd\x92\x44\xbf\xab\x69\x00\x00")

func indexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_indexHtml,
		"index.html",
	)
}

func indexHtml() (*asset, error) {
	bytes, err := indexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "index.html", size: 27051, mode: os.FileMode(384), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if (err != nil) {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"index.html": indexHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"index.html": &bintree{indexHtml, map[string]*bintree{
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
        data, err := Asset(name)
        if err != nil {
                return err
        }
        info, err := AssetInfo(name)
        if err != nil {
                return err
        }
        err = os.MkdirAll(_filePath(dir, path.Dir(name)), os.FileMode(0755))
        if err != nil {
                return err
        }
        err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
        if err != nil {
                return err
        }
        err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
        if err != nil {
                return err
        }
        return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
        children, err := AssetDir(name)
        // File
        if err != nil {
                return RestoreAsset(dir, name)
        }
        // Dir
        for _, child := range children {
                err = RestoreAssets(dir, path.Join(name, child))
                if err != nil {
                        return err
                }
        }
        return nil
}

func _filePath(dir, name string) string {
        cannonicalName := strings.Replace(name, "\\", "/", -1)
        return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

