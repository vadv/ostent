// Code generated by go-bindata.
// sources:
// index.html
// DO NOT EDIT!

// +build bin

package templates

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
	"os"
	"time"
	"io/ioutil"
	"path"
	"path/filepath"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name string
	size int64
	mode os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _indexHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x5c\xfb\x73\xdb\xb6\x93\xff\x3d\x7f\x05\x8e\xdf\xf6\xa6\xe9\x54\xd4\x25\xd7\xde\x65\x52\xdb\x33\x8e\xa5\xa4\x9a\xc6\xb6\xce\x96\x73\xd7\x9f\x3a\x94\x08\x49\x88\x29\x92\x25\x40\x39\xae\xc6\xff\xfb\xed\x02\xe0\xfb\x61\x52\xa4\xec\x74\x26\x99\x89\xc5\x07\xb0\x0f\x60\xf1\xd9\x05\xb0\xc4\xd1\xbf\x8d\x2e\xcf\x66\x7f\x4c\xc7\x64\x2d\x36\xce\x8b\x93\x23\xf9\x43\x08\x5c\x50\xcb\x86\x0b\xbc\xdc\x50\x61\x91\xc5\xda\x0a\x38\x15\xc7\x46\x28\x96\x83\x37\x46\xfa\xd5\x5a\x08\x7f\x40\xff\x0a\xd9\xf6\xd8\xf8\xbf\xc1\xcd\xe9\xe0\xcc\xdb\xf8\x96\x60\x73\x87\x1a\x64\xe1\xb9\x82\xba\x50\x6f\x32\x3e\xa6\xf6\x8a\x66\x6a\xba\xd6\x86\x1e\x1b\x5b\x46\xef\x7c\x2f\x10\xa9\xc2\x77\xcc\x16\xeb\x63\x9b\x6e\xd9\x82\x0e\xe4\xcd\x4f\x84\xb9\x4c\x30\xcb\x19\xf0\x85\xe5\xd0\xe3\x57\x11\x21\xc1\x84\x43\xe5\x35\xdc\xed\x76\xe6\xc8\x12\x96\xf9\x9b\xc7\x05\x12\x7f\x78\x20\x70\x05\x24\x8f\x86\x49\xb9\x93\x23\x87\xb9\xb7\x24\xa0\xce\xb1\xc1\x80\xa5\x41\xc4\xbd\x0f\x72\xb0\x8d\xb5\xa2\x43\xdf\x5d\x19\x64\x1d\xd0\xe5\xb1\x31\x5c\x5a\x5b\x2c\x60\xe2\xb3\x42\x55\x2e\xee\x1d\xca\xd7\x94\x8a\x88\x80\xa0\x5f\xc4\x70\xc1\x79\x5c\x1f\xae\x87\xcc\xb5\xe9\x17\x13\x9f\x6a\x0a\x7c\x11\x30\x5f\xa4\xab\x7c\xb6\xb6\x96\x7a\x6a\xe4\xdb\x99\xf0\x60\x01\x84\x3e\xf3\x61\x80\x2d\x1c\x50\xb8\x7a\x6d\xbe\x32\x5f\xbd\x89\x1e\x98\x1b\xe6\x9a\x9f\x81\xa7\x0d\x8a\x0f\x36\x16\x73\x55\xf9\xdd\x8e\x2d\x89\x39\x3b\xfd\xf0\x61\x3c\x9a\x33\xf7\xe1\x01\xca\x69\x61\x54\x8d\xdd\x8e\x3a\x1c\x5a\x08\x38\x0c\x37\xcc\xb9\xd5\x2f\xe5\x0b\xd7\x7e\x78\x30\xa2\x46\x3d\x1a\x2a\xe1\xb4\xfc\x43\x6d\x1a\x27\x47\x73\xcf\xbe\xd7\x0f\x5d\x6b\x4b\x16\x8e\xc5\xf9\xb1\x01\x97\x73\x2b\x20\xea\x67\x60\xd3\xa5\x15\x3a\x22\xba\x5d\xb2\x2f\xd4\x1e\x08\xcf\x37\x48\xe0\x41\x37\x62\x69\xb6\x02\x63\x81\x6e\x88\xf9\xd9\x2c\x26\x86\x16\x01\x2a\x51\xa8\xe9\x84\xcc\x8e\xca\xe4\x4a\xd9\x81\xe7\xdb\xde\x9d\x1b\x71\x41\x09\x69\x90\x14\x96\xc2\x86\x42\x78\x6e\x56\x48\x10\x64\xb5\x72\x28\xd8\x9d\xe3\x58\x3e\xa7\x76\xd4\x93\xaa\xb0\x6e\x53\x55\x08\x65\x51\xa5\xa2\xc7\x56\xb0\xc2\x8e\xfa\x97\xa6\x15\xbf\x4e\xb1\x95\xfd\xed\x5b\x31\x5b\x1e\x0c\x3c\xd7\xb9\xcf\x16\x81\x42\x33\x25\x47\xd2\x18\xd0\xe6\x50\xad\x86\x12\xda\xe5\x00\xd8\x16\x48\x7d\x35\x35\x87\xaa\x11\x33\x9d\x60\x11\x66\x27\xdd\x35\x0f\x2c\x17\x9a\x3c\xd7\x89\x51\xa7\xe8\x66\xd5\x85\x32\x3d\x11\x15\x35\x88\x15\x30\x6b\x40\xbf\x00\x77\x9b\x02\x65\x11\x84\x34\x1e\x7d\xf9\x8e\x40\x83\x41\xf6\x6b\x0d\x0e\x05\x35\x8a\xe8\x71\x34\x84\x4a\x79\xbd\xac\x8c\x4a\xa1\x53\x50\x60\x43\xdd\x30\xb2\x6f\x75\x2d\xc5\x74\xac\x39\x75\x1c\x6a\xcf\xef\xf3\x4d\x90\xe3\xe0\xb0\x02\x49\x6d\xd1\x9a\xa8\x1f\x50\x0e\xa0\x96\x19\x36\x71\xf5\x20\x74\x5d\xe6\xae\x8e\x86\x0e\x2b\xd2\x6d\x50\x1f\x3a\xa9\xd0\x23\x80\x52\xf9\x72\xa9\xf6\x1a\x4d\xae\x67\x57\x93\x77\xd8\x5c\x56\xd1\x34\x0a\x62\x0c\x43\x27\xd3\x82\x99\x36\x4e\xba\x29\x3f\xac\x12\x48\x50\x0f\x48\xcd\xb8\x4b\x77\x0b\x42\x93\x2e\x0a\x3f\x25\x6d\x8d\xcc\x98\x6f\xe4\xa1\xa1\x44\xe7\x58\xe3\xc9\x14\x95\x2d\x6b\xe0\x5c\xd3\x15\x5b\x37\x52\x2f\x2a\xe1\x58\x65\x9c\x49\x6e\x34\xb4\x1a\x00\xc5\x9e\x8a\xb9\x02\xb7\xc2\xdb\x94\x5e\x1f\x4f\xcb\x6c\xbe\xa4\x9b\x8a\xcd\xbc\x8f\xf5\x97\x49\xd3\xd1\xfc\x25\x89\xd0\x17\x6c\x43\x0b\x1d\x14\x93\x6f\x48\x46\xc3\x95\xa2\x56\x82\x53\xa5\xa3\x22\xd3\x9e\x37\xb2\x6a\xd9\xc0\xd0\x6d\x5a\x2a\x61\x76\x80\x94\x97\x2c\x0e\xa3\x2a\x8b\x8f\x2e\x03\xb6\x5a\x8b\x6a\xa8\xa9\x33\xfb\x14\x6d\x87\x71\x31\x60\x2e\x84\x41\xb4\x72\x54\x45\xa4\x2b\xda\x54\xc1\xf3\xbf\x30\x08\x28\x6f\x3d\x7c\xd5\xae\xc5\x1e\xe3\xe5\xf3\x2a\x56\x3e\xef\x97\xd3\x76\x55\xc5\x69\x6b\xad\x00\xec\xc5\x21\x4c\xa1\x38\x62\x88\xb5\x10\x6c\x5b\x74\x71\x39\x0f\xbc\xa5\x01\x47\xeb\xaf\xf0\xc1\xfb\xb8\x5d\x9c\x0d\xf0\xb7\xc3\xe1\xdd\xdd\x9d\x09\x7e\x34\x80\xff\xe6\xc2\xdb\x0c\x55\x1c\x0e\x51\xab\x43\x2d\x4e\xf9\xd0\xb1\x04\xe5\x65\x5e\xe5\xf2\x7a\x36\xbe\x98\x95\xb9\x92\x6e\x60\x13\xe9\x7a\x10\xc4\xd1\xc4\xfb\x80\x9c\x7e\x9a\x51\x52\x8b\x60\xe8\xd3\xf8\xea\x7a\x72\x79\xf1\x34\x38\x94\x73\xe7\xa9\x5b\xb8\x01\xac\xd0\x33\x86\xc8\x23\xc9\xb9\x40\x79\xb4\x4f\x7c\xcb\xb6\x21\x94\xc1\xf9\x02\xa7\x5b\xd0\xfb\x9e\xaf\x4b\xa7\x09\x81\x77\x97\x9f\x1a\x20\xed\x0d\xdd\x40\x98\xae\xe6\xa1\xaa\xe0\xdc\xf1\x16\xb7\x18\xef\x0f\x36\xf6\xe0\x75\x74\xe1\x2d\x97\x30\xe7\x1a\xbc\xca\x84\x10\xbb\x9d\xa0\x1b\x1f\xdb\x97\x18\x30\x8b\x01\xb1\xf8\xdb\xb7\xea\xe2\x4f\x30\x7c\xea\x00\x75\x83\x98\x79\x87\x99\x70\x67\xcb\x3a\xe6\xff\xd9\x8e\x19\x5b\xd6\xf2\x5a\xf8\x61\xad\xa6\xed\x98\x01\xb5\x5a\x6e\x76\x9f\x9a\xd9\xe5\x9a\x65\xed\x26\xba\x69\x32\x39\x6c\x62\x19\x3e\xaf\xd3\xe0\x4d\xce\x30\x5a\x36\x1f\x78\x9b\xa7\xd7\x68\xbb\x3a\xa0\x46\x55\x06\x51\xa5\x52\xed\x1a\x47\x54\x61\x6b\x05\x04\xe1\x89\x1c\x13\x0d\x54\x0f\x0f\xbf\xe6\x17\x1b\xf4\x1a\x03\x2e\x3b\xc8\x15\xaa\xdd\x6e\xf8\xe3\x8b\x1f\x87\x0f\x0f\xbb\x9d\x12\x30\x25\xb1\x85\xe8\x8d\x0b\x34\x06\x48\xaa\x81\x14\x28\xff\x06\xbf\xb8\x10\xe4\x9e\x39\x6c\x71\x7b\xbc\x13\x6b\xc6\xcd\x35\xb8\x2e\x87\xca\x27\x0f\x2f\x14\x54\xce\x40\x4e\x05\x91\x27\x7a\x09\xa4\x8e\x99\x6e\x9e\x85\x03\x53\x07\xa8\xc5\x5c\x3f\x14\xa8\xc7\x64\x74\x2a\x44\x00\xfc\xe0\x46\xf6\xc4\xc3\x43\x32\x67\x19\x2c\xd6\x74\x71\x3b\xf7\xbe\x44\x0b\x0d\xc9\xbd\xf4\x5b\x6b\x66\xdb\xd4\x8d\x1d\xaa\xbc\x43\x69\x3e\xf3\x2f\x67\x8e\x07\x73\x1e\x43\xf2\x41\x86\xd2\xc5\x21\xc3\xf7\x5e\xa0\x39\xa6\x19\xa2\x58\xf8\xf6\xfc\x7f\xaf\x71\x9d\x4a\x95\xc8\x29\x2a\x49\xb4\x52\xd6\x0f\xc1\xfa\xb8\x81\x65\xee\x98\x58\x13\xbc\x03\x73\x42\xd3\x00\xba\xf8\x47\xad\x29\xed\x76\x10\xea\xac\x28\xf9\x8e\xfd\x44\xbe\x5b\x78\x01\x25\x6f\x8f\x89\xf2\x45\x67\xd3\x1b\xf3\x23\x04\x91\x20\x80\x08\x76\xbb\x5b\x7a\x4f\x24\x7a\x01\xa9\xf9\xfd\xe0\xc2\x50\xe5\xcd\x0b\x25\xed\x91\xb0\x23\x7b\x46\x33\x52\x41\x2c\x71\xbd\xbb\xc0\xd2\xd1\x23\x88\x1f\xd7\x38\x1a\x0a\xbb\xb2\x56\xbc\xfe\x86\x2b\x1a\x49\x53\x45\xd5\x6f\x38\x0d\xce\xd4\xb3\x64\x35\x31\x79\x85\xc4\xe3\x45\x8e\x93\x2e\x8c\xae\xef\xb9\xe6\x43\xf2\x8c\xe0\x55\x7f\x7c\x26\xd2\xbe\x4b\x15\xc2\x57\x15\x8c\x86\x22\x48\x59\x44\xf6\xa7\x89\x7d\x28\x0c\xc2\xce\xc5\x8b\x58\x68\xbc\x79\x45\x20\x8e\x61\x3e\xd5\x38\xa5\xf4\x4a\xad\x33\x03\xe7\x08\x4a\xc4\x3a\x0d\x32\xf1\x1d\xbe\x78\xc4\x1c\x64\x31\xec\xb0\xcc\xca\x55\xe8\xb2\x4c\x8c\x74\xf2\x7d\x6e\xc9\x6a\x1f\x2e\xd0\x5b\x87\x67\x82\x5d\xd5\x85\xcb\x50\xb7\xaa\x7c\x1a\x2d\xdc\x8a\x64\xe5\xb6\x0e\xfa\xa3\xe1\xae\x90\x5f\x24\x50\x2c\x3b\xb0\x0d\x70\xd8\xcb\xf9\x3d\xc4\xa9\x7f\xb6\x44\x0f\x9b\xf1\xdb\x04\x39\x46\xef\x25\x91\x02\x7a\x68\xe2\x1a\x41\x6c\x16\xc8\xc5\x3d\x55\xdb\x1c\xb1\xe0\x42\x2e\xe5\xe5\x86\x51\x0e\x42\x6a\x1a\x41\x22\xe9\x0f\xf8\x43\x5e\xbd\x46\x6e\x03\xc5\xce\xa6\xdb\x0c\x23\xba\x45\x46\x2f\x4b\x51\x68\x2f\x6e\xff\x95\x66\x56\xaa\x55\x39\xb3\x02\x42\xc0\xb0\x97\xb5\x4e\xb7\x16\x73\xda\x55\x81\x91\x04\x3d\xfc\xef\xee\x9c\xfb\xbf\x1e\xf1\xd0\x4f\x90\xa4\x5a\x87\x90\x53\x9f\x06\x0b\x08\xd7\x41\x93\xe4\x86\xc4\x14\xa7\xea\x81\x94\x3e\xa2\xd9\x08\xea\x22\xa9\x66\x9e\xb0\xd2\x8a\x74\x02\xad\xc8\x36\x7b\x41\xae\xd2\x76\x11\xeb\x38\x30\x21\xd1\x95\xb6\xe9\x8f\x70\xc9\xcd\xa9\x15\x58\x1b\x6e\x8e\x2f\x6e\xce\x4d\x7b\x49\x8c\xf7\xd7\x06\x31\xe4\x38\xe9\x83\xda\xf9\xb4\x4f\x6a\xa7\x9f\x4e\x27\x1f\x7b\xa3\x76\x73\x3d\x1e\xf5\x46\x6c\x76\x39\x3b\x45\xd1\x3a\x81\x5e\x06\xaa\xfa\x40\x3e\xe6\x7a\x76\x77\xe8\x53\x54\x4a\xb0\x4f\xbd\x78\x3a\xf0\xd3\xfc\x9e\x08\xfd\x2a\xb8\xed\x05\x7f\x93\x65\x40\x69\xcb\x2a\x61\xef\xf8\x87\x24\x3b\x03\xe0\x44\x36\x4b\x7f\x08\xa8\x6d\xb4\xaf\xe0\x2d\xaa\x99\xdf\x87\x3d\x19\xc9\x1d\xfd\x8a\x30\xa8\x50\xfa\xdc\x0b\x5d\x41\xed\xda\xe2\x24\xdf\x46\xb2\x98\xf4\x74\x7b\xd4\x43\x77\xb7\x47\x35\xe9\x8f\x7a\x0b\xbb\xb2\x90\xd1\x1d\x82\xd8\x7e\xc1\x17\x5b\x26\xf8\x33\xa9\x08\xbd\x58\x26\xf4\xd2\x43\x94\x2d\xcd\x0c\xea\xb4\x87\x19\x16\x85\x3d\x59\x8a\xcd\xc7\x3b\x54\x18\x51\x47\x58\x13\xb7\x75\x95\xcb\x50\xb4\xa9\xd3\x8e\x43\x96\x78\xa7\x41\xcb\xfa\x0c\x5b\x32\x13\xae\x09\x0c\xba\x60\x69\x55\x8e\xd3\xe2\x74\x85\xc8\xe4\x9a\x63\xe3\xdd\x64\x76\x4d\x00\xee\x08\xa7\x0b\x2f\xbd\xaf\x0d\x34\xeb\x27\x31\x47\xb9\x55\xe5\xf9\xd1\x30\xfd\xe4\x04\xb7\x69\xf6\x9c\x4b\x3d\x2e\x1c\xf4\xca\xb3\x4b\x27\x10\x42\xc8\xbb\x3f\x66\xe3\x6b\xb2\xf1\xec\xd0\xf1\xc8\xcf\x1f\x3a\x34\xe0\xbb\x9c\x88\xdf\xff\xfc\xe1\xe0\x32\xb6\x6e\xc7\xb6\x42\x76\x41\x55\xd6\x6f\x5c\xc7\x96\x34\x08\xbc\xa0\x23\xaa\x2a\x1a\x25\xb0\xaa\x5e\x1c\x00\x57\x35\xe1\x6f\xc0\xfa\x78\xcf\x7e\x4d\xc8\x5a\x01\xaa\x51\x60\x5a\x37\xe8\x7a\x00\xa7\x2a\xd4\x7c\x22\xf6\xe5\x78\xd8\x84\x79\x1f\xa8\x57\x81\x74\x7d\xb0\xef\x86\x67\x69\x00\xea\x03\xd0\x7c\x6b\x71\x4b\x45\x47\x44\xd3\x44\x4a\x20\x4d\xbf\x39\x00\xa6\x45\x94\xbf\x81\x5a\x83\xde\xfd\x86\x6a\x5f\x09\xaa\xa9\x68\xea\x79\xb1\xad\x5a\x86\xaf\x02\xe1\x32\x88\xd4\x1d\xe2\x36\x74\xb3\xc7\xf6\x25\xd4\x4a\x00\xee\x7c\x7c\x5e\x80\x36\xcc\x32\x51\xa0\x76\xcb\x30\x55\x19\x6b\x98\xbf\x33\x14\x2a\x87\x6a\xa9\x37\x0d\x51\x00\x2b\xbc\x6f\xb3\x6c\x85\x15\x7a\x5d\xb4\xd7\x04\xbb\x2c\x59\x21\x89\x5e\x97\xec\x81\xe0\x33\xec\x33\xa6\x46\x07\x76\x49\x9b\xf2\x35\xeb\x4a\x4f\xb0\xa0\x14\xd9\x7d\xf7\x11\x14\x27\x83\x00\xa1\x54\x4a\x8a\x7c\xfc\x4a\xb5\xb4\xca\x4b\x48\xbf\x90\xb9\x74\xcc\x5d\x91\xb9\x70\x07\x32\x2b\x25\xda\xb9\xb6\x08\x7e\xa5\xf2\x6e\x2a\xb7\xa9\x31\x45\xa1\x6c\x79\xff\xdd\xe5\xe5\x47\x93\xaf\xbd\x3b\x40\xea\x25\x5b\x01\x77\x62\x20\x25\xb5\x20\xa7\x08\x46\xe9\x8e\xc5\x37\x86\xcc\x8b\x50\x19\x8c\x98\x08\xd2\x9c\x4b\xb2\x6d\x7e\x36\xbd\x89\x12\xe7\x4e\xa2\xac\x09\xbc\xcc\xa6\xf0\xe8\x34\x2c\x55\xdf\xd8\x57\x33\x50\x21\x4e\x16\x51\xf9\x1f\x46\x22\xc8\xd1\xd2\x0b\x36\xe9\x34\x8f\xb5\x17\xb0\xbf\x31\x67\xc8\x19\xc8\x57\x73\x2f\x90\x9a\x7b\x42\x78\x1b\xf9\x08\x05\xc1\xdf\xd3\x05\xe6\x1c\x56\x49\xf2\x3f\x21\x0d\xee\x63\x3e\x72\xa6\x2e\xf3\x59\xa2\xb5\x4f\x29\xc8\x80\x87\xf3\x0d\x8b\xbf\x76\xd2\x77\xa9\x3a\x29\x8b\x40\x96\x83\x55\xe0\x85\xfe\x00\x93\xf8\xa8\x9d\x5d\x07\x48\x95\xc4\x0e\x93\x05\x49\x7c\x35\xe0\x9b\x28\xf1\x52\xde\xe7\x93\x96\x9b\x9b\x0d\x08\x4e\x65\xb3\xc6\xf6\xa1\x4c\x44\xf2\xd2\x9f\x26\xb5\xb2\x10\x4d\x30\xd5\x54\x5a\xa8\xdf\x64\x13\xe5\xf3\x2b\x63\x59\xf3\xa2\x62\x16\xcc\x58\xe6\xcf\xe2\x10\x84\x3b\x29\x99\xcd\x38\xde\xda\x1d\x85\x54\x89\xb9\xa5\x62\x46\x19\xa1\x09\x7f\xc4\x1f\xb8\x2b\xe6\x86\x16\x32\xfe\x4b\xbf\xd4\x68\xd4\xdf\x75\xe0\x04\xca\x04\x94\xaf\x8d\x32\x6d\xa6\xe3\xab\xc9\xe5\xc8\xd4\x45\xa4\x42\x85\x0c\x34\xe4\xfc\xa2\x20\x60\x7c\x99\x1f\xa5\xad\x2d\xa7\x7a\x34\x3e\x92\x3a\xa1\xb3\xf1\x32\x59\x73\x29\xb1\xe4\x45\x5b\xe8\xb5\x97\xcf\x88\xbc\xb8\xc5\x7a\x70\xe0\xb5\x97\xe9\x06\xae\xde\xed\x15\xe6\x0c\x43\xd8\xc4\x6c\x1f\x41\x66\x7b\xb9\x3f\x30\xa3\xe2\x9d\x70\xf9\x1b\x08\x63\x13\xf6\x89\xc1\x29\x33\x89\x45\x6a\x09\xc1\x09\xfc\x8e\xde\xf7\x8f\xbe\x65\x02\x46\xf6\x9c\x00\xef\xe8\xfd\x3f\x00\x77\x51\x95\x7a\xd8\x2d\x7c\x7a\x84\xa1\x37\x4f\x5b\xa5\xc3\x64\x27\x88\xb1\x1b\x6e\xb0\xf5\x78\x4d\x22\x87\x20\xc6\xe4\xe2\x72\x34\xc6\x24\x18\x6d\x33\x99\xb6\x2c\x57\xcb\x6a\x95\x2c\x92\xf0\xc8\x7d\xc8\xd7\x5a\xd4\xd1\x7b\xb9\x21\x72\x58\x59\x23\x26\x05\x61\x93\x8f\x2f\xfa\x76\x7e\x38\x62\x6b\x10\x2f\xc1\x55\xb5\x59\xad\x70\xf5\x82\xd6\x12\x2f\xe9\xe0\x4a\x16\xc8\x44\x2e\x3d\xa4\xb9\x24\x53\xba\x46\x36\x9e\x4b\x6c\x50\xbe\x38\xbf\x5a\x91\x4e\x61\x4f\xb4\x92\x9b\x45\x2d\x95\x4a\x4c\xa1\xa9\x56\x6a\x97\xbb\xad\x52\xe9\x8d\xdf\xc7\x75\xea\x2d\xf8\x60\xcf\x19\x7c\xb0\xa7\x08\x3e\x58\xa3\xe0\x83\xb5\x0e\x3e\x58\x87\xe0\x83\x7d\x0b\x3e\xba\x06\x1f\xac\xe7\xe0\x83\xf5\x19\x7c\x4c\x0e\x10\x7c\x94\x09\x58\x0c\x3e\x26\xff\x84\xe0\x83\x3d\x69\xf0\xc1\x10\xc6\xa7\xa7\x67\xbf\x8f\x67\x87\xf3\xe8\x19\x26\x1d\xc2\x0f\x49\x67\x7c\x75\x75\x79\x75\x60\x59\x35\x8f\xae\xa2\x4e\x0e\x1c\x29\x65\x98\x3c\x61\xa4\xc4\x9a\x45\x4a\xf1\x76\x46\xf3\xa8\x22\x67\x8e\xcd\xa2\x8a\x64\xa7\xb5\x5d\x5c\x91\xdf\x22\x6c\x1e\x2d\x45\x5b\xd1\x2d\x15\x8b\x4d\xb7\xa9\x5e\x3a\x77\xa5\xad\x5a\x99\x74\x8e\x36\x5a\xb5\x8c\x01\x73\x46\xde\x54\xab\x7d\x62\x40\xf6\x5c\x31\x20\x7e\xf3\xfc\x7c\x41\x20\x6e\xc5\x1d\x3e\x0a\x04\x2e\xc9\xf0\x3d\xa7\x1b\x2f\xb8\x6f\x18\xe7\x41\xcd\xfd\x03\x3d\xa9\xdc\xb7\xe5\xff\xbe\x83\x3f\xd9\xac\x7d\x46\x7f\x69\xf3\x88\x85\x7a\x24\xfc\x6b\x28\x2b\xbf\xb3\xfc\x7e\x85\x45\x8a\xb2\x0e\x5b\x8e\x74\x84\xb9\xb7\x82\x94\x20\xb5\xaf\x3e\x62\x94\xe2\x3f\xe5\x36\x81\xb4\xb0\xfd\xb6\x09\xe2\x8d\xec\x7e\xb7\x09\x7c\xfe\x8c\x20\xed\xf3\x27\xc0\x68\x3f\xf5\x55\xf3\x34\xf0\x16\x94\x73\xca\x1b\xa2\xb4\xcf\xf7\x07\x69\x54\xae\x1d\x46\xab\xb3\x92\xaa\xf0\x39\xfd\x3d\xc9\xd7\x08\xd5\xfd\x0c\x49\x9f\x97\x9f\x25\xf2\xf5\x79\x0b\xec\xdf\x3e\xf1\x37\x65\xa7\x69\x28\x6d\xb3\x54\x30\xbd\x96\x10\x01\xbf\xae\x27\x46\x74\x11\x50\x4b\x02\x79\x66\xcd\xa0\x4a\x54\x07\x06\x46\x9d\xa0\x1f\x27\xe7\x93\x99\xe9\x73\xb7\x28\xe6\x60\x3f\x09\x93\x95\x8d\x46\x02\x42\x74\x55\xdb\x92\x35\x02\x46\x2b\x1a\x09\x7b\xdf\x09\x79\x72\x8a\x47\x56\xf6\xc7\xbc\xd4\x21\x3d\x04\x5a\xd5\x7e\x0e\xc2\xe7\x87\xf0\x0f\xdb\xd5\x33\xfa\x87\xed\xea\x09\xfc\xc3\x76\x95\xb4\xef\x27\x75\xf0\x1a\x59\x39\xde\x1c\xcf\x0f\x16\x96\x08\x9b\xfa\x8a\xed\x6a\x7f\x5f\x81\x8a\x7e\xf3\x15\x6d\x7d\x05\xf6\xdc\x3f\xc3\x57\x60\xff\xf6\xe9\x2b\x52\x36\x1b\x8b\x54\xe5\x2b\x9e\x13\xcd\x50\xef\xfd\xd0\x6c\xbb\xea\x1b\xcd\x78\xcb\x84\x5e\x1f\x62\xc5\x24\x9b\x37\xf2\x1c\xf9\x8c\x5e\x3f\xfa\x4a\xc1\x67\x98\xcf\x8b\x95\xcc\xe9\x64\x84\x69\xa5\xee\xaa\xe6\x60\x22\x0d\x8b\xd0\x9a\x71\x9d\x66\x89\xbb\x71\x8d\x9b\x5c\x0d\xfd\x3a\xf5\xaf\xcd\xb7\x11\x3e\x0f\x39\x60\x48\x99\x16\xfa\x1e\x4f\xca\x69\xf8\xa1\x44\xa2\x55\xc0\xbc\x80\x89\xfb\x96\xd5\x2e\xd8\xa2\x61\x1a\x73\x5c\xe5\x9a\xfd\xdd\xb6\xca\x15\xe5\x60\xa2\x6e\xcd\x57\x19\x98\xc6\x1c\x7d\x66\x7e\x12\x55\x9b\xe9\x63\x5a\xeb\xcf\x2e\x68\xd5\x01\x3f\xcb\x0e\xc0\x6f\x52\xea\x3a\x20\xff\xa5\x4a\xa7\xbc\xe8\x28\x5a\x28\x4d\x8b\x7e\xfd\x84\x87\x98\x60\xc0\x03\x9a\xf6\x72\xb2\x07\xd2\xba\xe9\x93\xd6\xf5\xf8\xaa\xaf\x03\x51\xa4\x9e\x57\x93\xde\x68\x5d\x4c\xce\xc6\xbd\x11\xfb\x34\xb9\x9a\xf5\x46\xec\x4a\xee\xa9\xf4\x43\x6b\x36\x39\x1f\x63\x60\xa4\x06\x62\x6f\x6d\x77\x2a\xa9\x76\x3d\xff\x45\xbb\x94\xee\xb9\xf2\x51\xc8\xa3\x23\x6d\x70\x41\xea\x81\x74\xb2\xc4\xd4\x47\xf9\xe9\x10\x25\x75\x0d\x41\x0a\xd1\x45\xd5\x03\x43\x7b\x9c\xcc\x51\xfc\xa9\xf2\x10\x06\x45\xa7\xc9\x9e\x5c\xa9\x8a\xf1\x6e\xc0\x49\x7c\x30\x61\x1c\x64\xca\x08\x0a\x0f\x9a\x84\x40\x28\x66\xa4\x8e\x15\x4c\x1d\xd8\x68\x10\x68\x9f\x05\x5d\x7b\x0e\x44\xa1\x78\x8a\xe2\x34\xb9\x95\x81\x8d\x4f\xc1\x0d\xd8\x08\x5f\x2a\x60\x48\x3d\xfc\x64\x39\x61\xfc\xf4\x85\x6c\xef\x92\x03\x0c\xdb\xfa\xfa\xd4\x17\x2a\x50\x5b\x1f\x7a\x67\xc6\x21\x4b\x7c\xba\xa1\xe4\xfe\xf0\x10\x1d\x8b\xd6\x82\xc3\x76\x25\xb7\x8a\x24\x7c\x06\x04\x22\x01\x8c\xff\xd5\xa3\xd8\x2b\x78\x0e\x52\x3d\x36\x7e\x89\x1d\x88\x3e\x62\x57\x4d\x32\xc6\x58\xba\x12\xce\x1b\x48\x10\xc7\x33\x3a\x60\xd9\x58\x8b\x75\x12\xb0\x68\x2e\xe7\xf0\x10\xeb\x15\x02\x17\x7d\xc6\xb4\x8e\x5e\xc2\x50\xfa\x1d\x24\x61\xde\xc8\xc8\xa2\x2c\xaa\x68\xea\xcf\xfe\x3b\x21\x9f\x27\xfc\xb2\x3a\x66\xc1\xcf\x7f\xb0\xd8\x85\x95\x73\xb0\xa5\xa5\xa6\x81\xb7\x65\x36\x0d\xea\x4a\x36\x93\xf6\x4d\x22\x2d\x4e\xf8\x68\x5a\x5c\x7d\x79\x8d\xcf\x6b\x45\x6f\xc6\xea\x97\xff\x48\x78\x2d\x99\x43\x7d\x4b\xac\x4b\xd8\xe9\xbe\xc3\x12\x7f\x62\x91\x47\xbd\x7e\x03\x6b\xe1\x10\xf5\x2e\xd6\x4d\xe2\x5f\xb6\x24\xf4\x2f\xa2\x0f\x16\xfd\xe1\x33\xf7\x5c\x52\x34\x5c\xfb\x65\x05\x18\xe7\x06\x08\xc9\x90\xae\x2b\x1f\x63\xe9\xbe\x21\x4d\x34\x65\x88\x43\x1a\x35\x2b\xcf\x1e\x75\xdb\xe5\xb3\x2f\x96\xff\x30\x2b\x79\x85\xb1\x5b\xe5\x4b\x5f\x9b\x6a\x65\x01\x69\x76\x95\x6f\x6d\x16\xd0\x85\x90\x5b\x8b\x3d\x7d\xe5\x15\x5b\x43\x07\xd7\x95\xf3\x59\x45\x67\x53\xef\xa8\x3a\xbb\xa9\xf4\x24\xbf\xa5\x8b\x32\x10\x89\xd5\xcc\x5b\xdb\x3b\x68\x16\x19\xba\x7a\xfe\x32\xba\x9f\x4a\x37\x05\xc6\x6e\x90\x2d\x7a\x0b\x59\x59\x3d\x8c\x6d\xd3\x68\x37\x21\x4d\x85\x2b\x68\xaa\xeb\xcc\x36\xad\x3a\x3a\x0a\x78\x9c\x3a\x6c\xe5\x9e\xa9\xe7\x8a\x41\xe1\x98\xe2\xf4\x41\xae\xa6\x2e\x1a\xbb\x1a\xbd\xb8\x59\x38\xf1\xd5\x3c\xb3\x02\x2a\xd2\xa5\xa5\xf0\xe9\xf3\x5d\x2d\x6d\x0b\xeb\x58\x9d\xff\x0f\x00\x00\xff\xff\xca\x74\x96\x58\xfd\x6b\x00\x00")

func indexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_indexHtml,
		"index.html",
	)
}

func indexHtml() (*asset, error) {
	bytes, err := indexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "index.html", size: 27645, mode: os.FileMode(384), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if (err != nil) {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"index.html": indexHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"index.html": &bintree{indexHtml, map[string]*bintree{
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
        data, err := Asset(name)
        if err != nil {
                return err
        }
        info, err := AssetInfo(name)
        if err != nil {
                return err
        }
        err = os.MkdirAll(_filePath(dir, path.Dir(name)), os.FileMode(0755))
        if err != nil {
                return err
        }
        err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
        if err != nil {
                return err
        }
        err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
        if err != nil {
                return err
        }
        return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
        children, err := AssetDir(name)
        // File
        if err != nil {
                return RestoreAsset(dir, name)
        }
        // Dir
        for _, child := range children {
                err = RestoreAssets(dir, path.Join(name, child))
                if err != nil {
                        return err
                }
        }
        return nil
}

func _filePath(dir, name string) string {
        cannonicalName := strings.Replace(name, "\\", "/", -1)
        return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

