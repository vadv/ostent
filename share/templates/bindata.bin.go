// +build bin

package templates

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
	"os"
	"time"
	"io/ioutil"
	"path"
	"path/filepath"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindata_file_info struct {
	name string
	size int64
	mode os.FileMode
	modTime time.Time
}

func (fi bindata_file_info) Name() string {
	return fi.name
}
func (fi bindata_file_info) Size() int64 {
	return fi.size
}
func (fi bindata_file_info) Mode() os.FileMode {
	return fi.mode
}
func (fi bindata_file_info) ModTime() time.Time {
	return fi.modTime
}
func (fi bindata_file_info) IsDir() bool {
	return false
}
func (fi bindata_file_info) Sys() interface{} {
	return nil
}

var _defines_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x5a\x5f\x6f\xdb\x36\x10\x7f\xef\xa7\x20\x84\x74\x58\x81\x46\xc1\x86\xee\xa5\x73\x04\xb8\xb1\xd3\x0a\x8d\x93\xc0\x7f\x02\xec\xa9\x50\x2c\x3a\xe6\x22\x8b\x1a\x49\xb9\xf3\x02\x7f\xf7\xf1\x28\x51\x7f\x2c\xd1\x96\x64\x67\xd8\x43\xf3\x50\x8b\xe4\x4f\xc7\xe3\xdd\xfd\x8e\x47\xaa\x2f\x2f\x3e\x5e\x90\x10\x23\x2b\xf9\xe5\x1f\x3f\x26\x0f\xdf\xe6\x51\xcc\xe8\x77\x6e\x6d\xb7\x2f\x2f\xdf\x89\x58\x22\xfb\xee\x61\x38\x1e\xbb\x83\x21\xf4\xd8\xf0\x0f\x0e\x38\x86\xdf\xb3\x2b\xf4\xf1\x12\x51\x86\xec\xab\x9b\xfe\x64\x72\xdb\x1f\x0d\x91\x35\x0f\x3c\x9e\xbc\xcd\xbc\xf0\x09\xa3\x33\xf2\x1e\x9d\xcd\x29\xc3\x80\xb5\x07\x9e\xf0\xec\xab\xfb\x99\x7d\x43\xb8\xd8\x6e\x7b\x82\xa1\x67\xbc\xb9\x94\xb2\x00\x62\xdf\x6e\xb7\x4e\x4f\xf8\x48\x09\xb9\xb4\x04\xfe\x5b\x9c\x33\xf2\xb4\x14\x28\xa4\xdf\x99\x17\x59\x4e\x01\xd9\xbb\x10\x7e\x3d\xda\x72\x7a\x3c\xf2\x42\x04\x2a\x6e\xb7\x99\xf4\x19\xc7\xec\x0a\xb0\x72\x96\x62\x1f\x88\x02\xbc\xd3\x5a\xe2\x64\xc3\x53\x81\xc8\x29\xf4\x75\x17\xe8\xfa\x01\xde\x55\x11\xfa\x76\x24\x5e\x08\x26\x87\x71\xe8\x2b\x77\x14\x7e\xde\xec\x75\xac\xf0\x1e\x03\x6c\x81\xd9\xe1\x21\x53\x0a\x1a\xbf\x20\x2e\x18\x89\xf0\x79\x82\x91\x4a\x2f\xb1\x07\xba\x33\x78\x84\x19\x97\xf0\xb0\xc7\x33\x60\xc9\x64\x4d\x29\x26\x0e\x89\x5c\xe6\xdb\x5c\xf1\x43\x12\xa4\xe5\x8e\x13\x00\x96\x3a\x28\x01\x6c\x07\x4f\xc9\xf2\x1e\xa9\xbf\x91\xa6\x14\x78\x15\x05\x9e\xd8\xc3\x07\x64\xab\x88\x53\x78\xf9\x0b\x56\x72\x0e\x1b\xdd\x5f\x3c\x6e\x04\xe6\xdf\x4e\x4b\x29\x9f\xf0\xe7\x9c\x4e\x83\x6b\x35\x47\x95\x52\x00\xb3\x07\x84\xdd\x7a\x2b\xfc\x15\x6f\xca\xdc\x2a\x10\x2a\xc5\xf1\x67\x00\x7e\x99\x8e\x6e\xaa\xdc\xaa\xa2\x99\x19\x5c\x8c\x72\xfd\x42\x7f\xed\x91\xa0\x19\x54\x06\x92\x34\xea\x4f\xe1\x23\x8f\x7e\xef\xf1\x38\xaa\x30\x45\xa3\xee\x31\x9b\xe3\x50\x14\xf8\xb2\x33\xb2\xdd\xe6\xae\x57\x82\x1a\xcc\x3e\xa5\xc2\xcb\x14\xed\xc2\x33\xed\x72\x4d\xb6\x03\x4e\x6d\xc7\xc5\x34\x80\xce\x6e\x72\xf7\xdf\x90\xf0\x19\x32\x4e\xce\x0c\x40\x63\x66\x39\x28\xff\xeb\x79\x68\xc9\xf0\x02\xac\x77\x23\x03\xe6\x7a\x62\x7f\x91\x4d\x99\xb6\xe4\x5f\x6e\xd8\x74\x48\xa7\x34\x84\x9c\x01\x5e\x93\x79\xca\xa9\x1a\xa0\xc7\xb0\x28\xa0\x33\x63\x7b\x15\xb6\x1e\xd6\x69\x74\x6f\xd4\x49\x0e\x15\x66\x19\xd1\x38\x14\xd8\xdf\x8d\x0a\x0d\x6c\xab\x13\x2a\x25\xe5\xb2\x4e\xfd\x87\xbe\x7b\xa3\xd5\x2a\x4f\x95\x0c\xe9\xd8\x53\xe1\x9d\x9a\xa9\x1e\x58\x50\xeb\x38\x9d\x66\x93\xe1\x20\xb3\x54\x79\x2a\x35\x94\x6d\x48\xc0\x23\xad\x52\x2d\xb0\x68\xa9\xe3\x74\x9a\xde\x4d\xfb\x06\x3b\x25\x43\x7a\xe5\x8a\x5d\xf5\x76\x4a\x81\xfb\xec\x94\x92\xaf\x6d\x0a\x2f\x25\xe1\xae\x79\x9c\x84\xd4\x7f\xf5\x44\x9e\x4c\xf2\xff\xce\xe4\xee\x82\x61\xdc\x10\x1a\x37\x4a\xe5\x00\x33\xe4\xf2\xc2\x50\x97\x64\xee\x2a\x7b\x1e\x97\xcd\x53\xc7\x77\xae\x9d\x76\x33\x60\x9a\x52\x0d\xf9\x51\x27\xb7\xc3\x14\x4c\x52\xce\x61\x9c\x4a\x03\x87\x61\x09\x33\xbb\x54\x48\x65\x6e\x74\xe3\x17\x69\x59\x27\xe9\xb3\xc5\x22\x67\x8f\x6b\x2a\x83\xc8\xc2\x2e\xf1\xc6\xc9\xfb\x1a\x45\xbd\xc4\x0e\x70\x20\x3c\x37\x6c\x0c\xbd\x8b\x45\x13\x6c\x33\x89\x05\x61\x5d\x22\x98\xec\xd4\x23\xed\x8b\x7f\x57\x46\x24\x5b\x78\xd5\xa0\xad\x96\xe0\x48\x10\x11\xe0\x4b\xeb\x93\x3b\x9d\xa0\x48\x86\x18\xc7\x73\x1a\xfa\xb2\x34\x0f\x6b\x0a\xf3\x1e\x71\x1e\x7b\x17\xc4\x89\x78\xe3\x1a\xdf\x38\x81\xb4\xd2\x69\x67\x10\x40\x08\xf4\xe9\x8f\xe9\x70\x82\x56\xd4\x8f\x03\x8a\x3e\x7c\x36\x2f\xe4\x13\x4c\xf3\xf6\xc3\xe7\x53\xcd\x63\x5c\x4f\xed\x44\x2d\x29\x4b\x8e\xdf\x11\xc9\x02\x33\x46\xd9\x91\x94\x4d\x64\xfc\xe0\xac\xc9\xb8\xff\x29\x69\xcb\x7c\xd5\xbb\x76\x25\x06\x3b\x70\x69\x87\xa8\xa7\x14\x5d\xa2\xa6\x51\x70\x17\x62\x96\xc9\xd8\x58\x74\x6b\x2a\x16\x79\xd4\x95\x8b\x91\x37\x7f\xc6\xe2\x48\x32\xa6\x42\x7e\xb0\xd1\x68\xde\x1f\x74\x6c\xb6\x9b\xbd\x1e\x29\x2b\xf2\x5f\x95\x9a\x25\x5a\x75\xe3\xe6\x0a\xaf\xda\x92\xf2\x3d\x3a\x93\x6f\xe5\xcc\x1c\x0d\x47\x55\x4e\x4a\x84\xfd\x95\xc0\xe4\x9a\x91\x79\xcf\x01\x46\x00\xf0\xba\xc9\x21\x0e\x80\x95\xdb\xb8\xbc\x3f\x3d\x98\xe9\x14\xd0\xe0\x50\x06\x2f\x1e\x7d\xc1\x26\x85\xbc\xc6\x45\xb6\xe5\x80\x4d\xf6\x8d\xd7\x9d\xa4\x4e\x73\x84\xd2\x41\xd2\x2d\xc4\x22\xde\x32\xc2\x22\x46\xe7\x79\x78\xdd\x4f\xd4\x44\xd5\x10\x03\x98\x7d\xef\x0e\x4c\x1f\x65\x2c\x07\x95\x50\xfb\x9c\x9f\x21\x67\x45\x64\xf1\x3a\x30\x47\x70\xcc\x0e\x6f\x2b\xf9\xd4\x8c\x50\x46\xc4\xa6\x21\xfc\x56\x1e\xbe\x1b\x42\x27\xe4\x9f\xa6\xd0\x31\xe6\xc4\x57\x97\x14\xb5\x70\xa0\x09\x9c\xee\x35\x7c\x4a\x56\x35\x92\xf5\xd5\x4c\xc9\x1a\xbb\x9b\x6c\x17\xc6\x44\xbc\xfb\x65\xf4\xaf\x27\xb9\x8c\x2e\x5d\x35\x94\x6f\x7e\xef\x27\x32\x78\x6a\x2f\x34\x93\x91\xec\x86\x52\x36\xb2\xeb\xcc\x3a\xdc\x11\xd7\x99\xbb\x1a\xcd\x8c\x1a\xcd\x8a\x1a\xcd\xcc\x1a\xcd\xda\x6b\x54\xba\x1c\xaf\x68\x34\x19\x8e\xeb\x2e\x58\xd3\x11\x7d\x6f\x06\x8d\xda\x3b\x5f\x8d\xeb\x7e\x0d\x5d\xf1\xda\xd8\x35\x79\x4d\x8e\xe4\x5e\xcb\xf5\xa9\xc5\x9d\xd0\x6b\xb7\xee\xd5\xb0\xde\x46\x6a\x44\x2f\xfb\xd6\x35\x6a\x94\xe0\x4e\x67\xa3\x07\x77\x3c\xad\xd7\x48\x8d\xe8\x49\xa0\x61\xf0\x5a\x82\x3b\x9d\x46\xe3\xe1\xc4\xe0\x35\x18\xc9\x1c\x21\x1b\xa6\xc8\x56\xb8\x2e\x5e\xd3\x49\x70\x47\xa3\xa9\x3b\x32\x78\x4d\x8d\x64\x5f\x0e\x64\xc3\x60\xa3\x04\xd7\xca\x46\x7b\xb9\x06\x39\xd1\x10\x47\xfd\x82\x46\x57\x77\xa3\x51\xff\x76\x50\xfd\x0e\xa5\x71\xaf\xf0\x29\x23\xdd\xea\xbb\xd5\x09\x82\xd2\x40\x90\x48\xd7\x4e\x89\x42\xc5\xaa\xb9\x08\x40\xbe\xcc\xe7\xe7\x52\x8d\x39\x5e\x49\xc7\x5d\x5a\x5e\x2c\x28\x0a\xf0\x42\xa4\x43\xf2\xf8\x20\xd4\x80\xac\x31\xae\xe3\x40\x96\x74\xb0\xbf\xd9\x93\x25\x65\x22\xff\xef\x0a\x06\xf1\x3e\x15\x1c\xa9\x22\xbd\xd3\x3c\xb6\x6d\xbf\x79\x93\x7f\x0d\x80\x9f\xc3\xcb\x8f\x39\x8e\x92\x8a\xb5\xc1\x46\x58\x74\x2a\xcc\x9c\xfa\x51\x2d\xf1\xc1\x0b\x62\x9c\x7f\x8e\x38\x3c\xf3\xfa\x49\x9d\xf1\xad\xbc\xba\xb2\x74\x57\xb2\xff\xd3\x00\x24\x5d\x5a\xbf\x29\xf9\x6a\x27\x7d\xf0\x9e\x64\xb5\x26\x86\x80\xaa\xd9\xfb\xf7\xce\x96\x95\x83\x69\xbd\xb7\xf2\xe6\xcb\x7c\x8f\x4e\x25\x8f\x64\x27\xbc\x57\x73\xb4\x90\x23\xf6\x6c\xa6\x0b\x3f\x27\xaf\xcf\xb2\x91\x72\x7d\xb6\x8b\x80\x9a\xc5\x3c\x7a\xcf\xe8\x5a\x16\x4b\xcc\x8c\x90\x05\xa9\x38\xfc\xf9\x4a\x41\xd3\xc5\x2c\x48\x20\xc9\xe1\x89\xe5\xfe\x52\x69\xaf\xd5\xb8\xac\x66\xe6\xcb\x26\x65\x34\x59\x20\xfc\x17\xb2\x04\x8b\x25\x4f\x7e\xfe\x93\xd3\x10\x55\x9d\xe6\xbf\x03\xa8\x99\xca\x3a\x02\x50\x49\xf4\x3e\x7c\x46\xfd\xb6\xf5\xdf\xfa\x69\xe7\xc0\x44\x7c\x88\xc0\xa4\xb3\xcd\xe9\x89\x64\xe7\x1f\x27\x94\x3e\xce\x1a\x51\xea\xd2\xac\x83\x83\x07\xb3\x96\x4f\x18\x9e\x0b\xca\x36\x9d\x0e\x47\x99\x67\x5a\x66\x3d\x99\xc0\x19\xe6\xe0\xd0\x9e\x4f\xd6\x7a\x99\x24\x8c\x62\x71\x2e\x6d\x19\x47\xa8\xf0\x7c\xce\x57\x28\x7d\x21\xe9\xb0\xca\xb9\xab\x08\xf5\x7c\x9f\x86\x96\x33\x4e\xe0\x3a\x0d\x29\x84\x86\x2f\x28\x5b\xa9\xcc\xc5\x68\x90\xc9\x55\x08\x0b\x89\x4d\x84\x93\x73\x81\x85\x54\xde\x5b\xd2\x40\xda\x4e\xa5\x99\x01\x5e\x78\x71\x20\xd2\x20\x93\xcb\xd1\xd1\x95\xf4\xbf\xd3\x6d\x79\xf4\x26\x14\x22\xcc\x42\x6b\xc8\x46\xea\xe5\xa4\x33\x0b\x08\xb9\x82\x0b\xb9\xf0\xcc\x44\xff\x06\x00\x00\xff\xff\xd9\x02\x4a\xb6\xf4\x27\x00\x00")

func defines_html_bytes() ([]byte, error) {
	return bindata_read(
		_defines_html,
		"defines.html",
	)
}

func defines_html() (*asset, error) {
	bytes, err := defines_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "defines.html", size: 10228, mode: os.FileMode(384), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _index_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x5c\x7b\x6f\xdb\x46\x12\xff\x3f\x9f\x62\x8f\x49\x0f\x57\xa0\xa2\x90\x5c\x0f\x57\xa4\xb6\x00\xc7\x92\x13\xa1\x7e\x08\x96\xe4\xbb\xfe\x55\x50\xe4\x4a\xda\x98\xaf\x92\x4b\x39\x6e\xa0\xef\x7e\x33\xbb\x5c\xbe\xc4\xa5\x28\x5a\xee\x25\x45\x0e\x38\x8b\xdc\x1d\xce\xce\xce\xf3\x37\x4b\xa6\x9f\x3f\x3b\x74\xc9\x7c\x4a\x0c\xf9\x1b\xbf\x7d\x2b\x2f\x7e\xb3\xc3\x24\x0a\x1e\x62\x63\xbb\xfd\xfc\xf9\x81\xf1\x35\x31\x6f\xee\x46\xb7\xb7\xe3\xe1\x08\x47\x4c\xfc\x43\xdd\x98\xe2\xef\xab\x73\xf2\xf6\x94\x04\x11\x31\xcf\x2f\xcf\xa6\xd3\xeb\xb3\xab\x11\x31\x6c\xd7\x8a\xe5\xd3\x91\xe5\xaf\x28\x79\xc5\x7e\x20\xaf\xec\x20\xa2\x48\x6b\x0e\x2d\x6e\x99\xe7\x93\xb9\x79\xc9\x62\xbe\xdd\x9e\xf0\x88\xdc\xd3\xc7\x53\xe0\x85\x24\xe6\xf5\x76\x3b\x38\xe1\x0e\x11\x4c\x4e\x0d\x4e\x3f\xf1\x5e\xc4\x56\x6b\x4e\xfc\xe0\x21\xb2\x42\x63\x50\xa0\x3c\xe9\x73\xa7\x9e\xda\x18\x9c\xc4\xa1\xe5\x13\x14\x71\xbb\xcd\xb8\xcf\x63\x1a\x9d\x23\x2d\xac\x52\x1c\x43\x56\x48\x3f\x38\x98\xe3\xf4\x31\x4e\x19\x92\x41\x61\xac\x3b\xc3\xb1\xe3\xd2\xaa\x88\x38\x56\xe1\xd8\xe7\x11\x4c\x53\xdf\x11\xe6\x28\xfc\xbc\x68\x34\x2c\xb7\x16\x2e\x35\x50\xed\x78\x91\x09\x85\x37\xaf\x49\xcc\x23\x16\xd2\x9e\xa4\x01\xa1\xd7\xd4\x42\xd9\x23\xbc\xc4\x15\xd7\x78\xd1\x60\x19\xd4\xa4\xdc\x53\x4a\x93\xf8\x0c\xb6\xf9\x5d\x2e\xf8\x3e\x0e\xa0\xb9\xa7\x31\x40\x4d\xed\xe5\x80\xba\xc3\x2b\xb9\xbd\x45\xe0\x3c\x82\x2a\x39\xf5\x42\xd7\xe2\x0d\xf1\x40\x4c\xe1\x71\x82\x1e\x7e\x51\x4b\x83\xfd\x4a\x77\x96\x8b\x47\x4e\xe3\xdf\x8e\x1b\x52\x0e\x8b\xef\xf3\x70\x1a\x5e\x88\x35\x76\x43\x0a\xc9\xcc\x21\x8b\xae\x2d\x8f\xfe\x42\x1f\xcb\xb1\x55\x08\xa8\x94\x2e\xbe\x47\xc2\x0f\xb3\xab\xcb\xdd\xd8\xda\xa5\x8e\xf4\xc4\x45\x2f\x57\x0f\x9c\x6d\x2c\xe6\xb6\x23\x05\x47\x02\xa5\xfe\xdd\x5f\xc4\xe1\xcf\x27\x71\x12\xee\x44\x8a\xa2\x9a\xd0\xc8\xa6\x3e\x2f\xc4\x4b\x65\x66\xbb\xcd\x4d\x2f\x18\xb5\x58\x7d\x16\x70\x2b\x13\xb4\x4b\x9c\x29\x93\xab\x60\xdb\x63\xd4\xc3\x62\x31\x75\xa0\x57\x97\xb9\xf9\x2f\x99\x7f\x8f\x19\x27\x8f\x0c\xa4\xa6\x91\x31\x20\xf9\xff\x4e\x2c\xb2\x8e\xe8\x12\xb5\x77\x09\x0e\x73\x31\x35\x3f\xc0\x2d\xa4\x2d\xf8\x5f\xae\xd8\x74\x4a\xa5\x34\x42\x06\x43\xba\x61\x76\x1a\x53\x35\x84\x56\x44\x79\x81\x3a\x53\xb6\xb5\x13\xad\xfb\x65\xba\x9a\x68\x65\x82\xa9\xc2\x2a\x57\x41\xe2\x73\xea\x54\xbd\x42\x11\x1e\x2a\x13\x29\x25\xe5\xb2\x4c\x67\x77\x67\xe3\x4b\x25\x56\x79\x29\x39\xa5\x7c\x4f\xb8\x77\xaa\xa6\x7a\xc2\x82\x58\x4f\x93\x69\x3e\x1d\x0d\x33\x4d\x95\x97\x12\x53\x59\x41\xc2\x38\x52\x22\xd5\x12\x16\x35\xf5\x34\x99\x66\x37\xb3\x33\x8d\x9e\xe4\x94\xda\xb9\x88\xae\x7a\x3d\xa5\x84\x4d\x7a\x4a\x83\xef\xd0\x14\x5e\x4a\xc2\x5d\xf3\x38\xf3\x03\xe7\xd9\x13\xb9\x5c\xe4\xcb\xce\xe4\xe3\x65\x44\x69\x4b\xd2\xa4\x55\x2a\x47\x32\x4d\x2e\x2f\x4c\x75\x49\xe6\x63\xa1\xcf\xa7\x65\xf3\xd4\xf0\x9d\xb1\x53\x35\x03\xa6\x29\x55\x93\x1f\x55\x72\xdb\x1f\x82\x32\xe5\xec\xa7\x13\x69\x60\x3f\x99\x8c\xcc\x2e\x08\xa9\x1c\x1b\xdd\xe2\x8b\x1d\x88\x93\x54\x6f\xb1\xcc\xa3\x67\xac\x83\x41\x6c\x69\x96\xe2\x66\x90\x8f\xb5\xf2\x7a\xa0\x1d\x52\x97\x5b\x63\xbf\x35\xe9\x4d\xc2\xdb\xd0\xb6\xe3\x58\x60\xd6\xc5\x83\x59\x05\x8f\x1c\x0e\xfe\xc7\xe0\x91\xd1\xd2\xda\x75\xda\x5d\x08\x4e\x38\xe3\x2e\x3d\x35\xde\x8d\x67\x53\x12\x82\x8b\xc5\xd4\x0e\x7c\x07\xa0\xb9\x5f\x03\xcc\x4f\xd8\x60\x71\xd2\x67\x83\x30\x6e\x8d\xf1\xb5\x0b\x80\x96\x8e\xbb\x02\xc7\x80\x20\xef\x7e\x9d\x8d\xa6\xc4\x0b\x9c\xc4\x0d\xc8\x8f\xef\xf5\x1b\x79\x87\xcb\x7c\xf7\xe3\xfb\x63\xad\xa3\xdd\x4f\xed\x42\x07\x86\x2c\x7b\x7a\x45\x64\x4b\x1a\x45\x41\xf4\xc4\x90\x95\x3c\xbe\xc5\xac\x4e\xb9\x7f\x6a\xd0\x96\xe3\x55\x55\xed\x1d\x1f\xec\x10\x4b\x95\x40\x3d\x26\xeb\x52\x68\x6a\x19\x77\x09\xcc\x72\x30\xb6\x66\x7d\x70\x28\x16\xe3\xa8\x6b\x2c\x86\x96\x7d\x4f\xf9\x13\x83\x31\x65\xf2\x2d\x1a\xb5\xea\xfd\x16\x8e\xed\xaa\xd9\xf3\x05\xe5\x0e\xff\x67\x0d\xcd\x52\x58\x75\x8b\x4d\x8f\x7a\x87\x06\xe5\x0f\xe4\x15\x3c\x95\x47\xe6\xd5\xe8\x6a\x37\x26\x81\xc2\xfc\x85\xe1\xe2\x2a\x22\xf3\x91\x3d\x11\x81\x84\x17\x6d\x9a\x38\x24\xdc\x39\x8d\xcb\xc7\xd3\xc6\x4c\xa5\x80\x16\x4d\x19\x3e\xf8\xe4\x03\x36\x60\xf2\x1c\x07\xd9\xc6\x00\x75\xd2\x34\x5f\xd7\x49\x1d\xa7\x85\x52\x4e\xd2\xcd\xc5\xc2\xf8\x40\x0f\x0b\xa3\xc0\xce\xdd\x6b\x32\x15\x0b\xed\xba\x18\x92\x99\x93\xf1\x50\xf7\x52\xc6\x18\x90\x12\x55\x93\xf1\x33\xca\x79\x91\xb2\x78\x1c\x98\x53\xc4\x34\xda\x5f\x56\xf2\xa5\x23\x16\x44\x8c\x3f\xb6\x24\xbf\x86\xe6\xbb\x25\xe9\x94\xfd\xd1\x96\xf4\x96\xc6\xcc\x11\x87\x14\xb5\xe4\x18\x26\xd8\xdd\x2b\xf2\x19\xf3\x6a\x38\xab\xa3\x99\x92\x36\xaa\x45\xb6\x4b\xc4\x84\x71\xf7\xc3\xe8\x37\x47\x39\x8c\x2e\x1d\x35\x94\x4f\x7e\x27\x53\x70\x9e\xda\x03\x4d\x39\x93\x9d\x50\xc2\x4d\x76\x9c\x59\x47\xf7\x84\xe3\xcc\xaa\x44\x73\xad\x44\xf3\xa2\x44\x73\xbd\x44\xf3\xc3\x25\x2a\x1d\x8e\xef\x48\x34\x1d\xdd\xd6\x1d\xb0\xa6\x33\xea\xdc\x0c\x6f\x6a\xcf\x7c\x15\x5d\xf7\x63\xe8\x1d\xab\xdd\x8e\x75\x56\x83\x99\xdc\x6a\xb9\x3c\xb5\x74\x47\xb4\xda\xf5\xf8\x7c\x54\xaf\x23\x31\xa3\xb6\x7d\x3d\xd6\x4a\x24\xe9\x8e\xa7\xa3\xbb\xf1\xed\xac\x5e\x22\x31\xa3\x16\xc1\x1b\x8d\xd5\x24\xdd\xf1\x24\xba\x1d\x4d\x35\x56\xc3\x99\xcc\x10\x70\xa3\xf3\x6c\x41\xd7\xc5\x6a\x2a\x09\x56\x24\x9a\x8d\xaf\x34\x56\x13\x33\xd9\x9b\x03\xb8\xd1\xe8\x48\xd2\x1d\xa4\xa3\xc6\x58\xc3\x9c\xa8\xf1\xa3\xb3\x82\x44\xe7\x37\x57\x57\x67\xd7\xc3\xdd\xf7\x50\x8a\xee\x19\x5e\x65\xa4\xa5\xbe\x1b\x4e\xe0\x41\xe0\x72\x16\x2a\xec\x24\x05\x2a\xa2\xe6\x22\x01\x71\x20\x9f\xf7\x40\x0c\x9b\x7a\x60\xb8\x53\xc3\x4a\x78\x40\x5c\xba\xe4\xe9\x14\xb4\x0f\x5c\x4c\x00\xc6\xb8\x48\x5c\x80\x74\x58\xdf\xcc\xe9\x3a\x88\x78\xfe\xb9\x82\x86\xbd\x13\xf0\x98\x08\x90\xde\x69\x1d\xd3\x34\x5f\xbc\xc8\xdf\x06\xe0\xcf\xfe\xed\x27\x31\x0d\x25\x62\x6d\x51\x08\x8b\x46\xc5\x95\x53\x3b\x8a\x2d\xde\x59\x6e\x42\xf3\xd7\x11\xfb\x57\xde\xac\x44\x8f\x6f\xe4\xe8\xca\x50\x43\xb2\xfe\x07\x2e\x72\x3a\x35\xfe\x25\xf8\x8b\x4a\x7a\x67\xad\x00\xad\xf1\x11\x52\xd5\xd4\xfe\xc6\xd5\x32\x38\x98\xe2\x3d\xcf\xb2\xd7\x79\x8d\x4e\x39\x5f\xc1\x20\x3e\x57\xd3\x5a\xc0\x8c\x39\x9f\x2b\xe0\x37\xc8\xf1\x59\x36\x53\xc6\x67\x55\x0a\xc4\x2c\xfa\xd9\x49\x14\x6c\x00\x2c\x45\x7a\x0a\x00\xa4\x7c\xff\xeb\x2b\x41\x9a\x6e\x66\xc9\x5c\x08\x0e\x8b\xaf\x9b\xa1\x52\xa3\xd6\x62\x40\x33\xf6\xba\x0d\x8c\x66\x4b\x42\x7f\x27\x06\x8f\x12\x88\x93\x7f\x7c\x8c\x03\x9f\xec\x1a\xcd\xf9\x1e\x49\xf5\xa1\xac\x3c\x80\x94\x58\x37\xd1\x67\xa1\x7f\x28\xfe\xdb\xac\x2a\x0d\x13\x73\xd0\x03\xe5\xe0\x21\xdd\x13\xcb\xfa\x9f\x81\x0f\x36\xce\x6e\xc2\xd4\xa4\xd9\x40\x8c\x16\xcc\xee\x1c\x16\x51\x9b\x07\xd1\x63\xa7\xe6\x28\xb3\xcc\x81\x59\x0f\x12\x78\x44\x63\x34\xe8\x89\xc3\x36\x6a\x9b\xcc\x0f\x13\xde\x03\x5d\x26\x21\x29\x5c\xf7\x62\x8f\xa4\x0f\xc8\x01\xa3\x9c\xbb\x8a\xa4\x96\xe3\x04\xbe\x31\xb8\x95\xe4\x2a\x0d\x09\x0a\x45\xbe\x0c\x22\x4f\x64\xae\x28\x70\x33\xbe\x82\xc2\x20\xfc\x31\xa4\xb2\x2f\x30\x88\xc8\x7b\xeb\xc0\x05\xdd\x89\x34\x33\xa4\x4b\x2b\x71\x79\xea\x64\xb0\x1d\xe5\x5d\x72\xfc\x7b\x75\x0f\xad\x37\x0b\xd0\xc3\x0c\xb2\xc1\x6c\x24\x1e\x96\x83\x99\x43\xc0\x0e\xfa\xb0\xf1\x4c\x45\x27\x7f\x1b\xde\x9c\xcf\x7e\x9d\x8c\xc8\x9a\x7b\xee\xe0\x24\xfd\x2b\xac\xe0\x51\x6e\x11\x7b\x6d\x45\x31\x85\x4c\x9b\xf0\x65\xef\x27\x23\x1d\x5d\x73\x1e\xf6\xe8\xef\x09\xdb\x9c\x1a\xff\xed\xcd\xcf\x7a\xe7\x81\x07\x91\xc6\xa4\xef\xa8\xe4\x3c\x1e\x9d\x52\x67\x45\xd5\x43\xe8\x1d\xe0\x62\x8c\x3e\x84\x50\x0e\x0a\x74\x0f\xcc\xe1\xeb\x53\x47\xbc\x03\xed\x89\x9b\x1f\xc0\x0c\x8c\x33\xcb\xed\xc5\xb6\xe5\xd2\xd3\xd7\xe8\x75\x78\xd8\x93\xa5\xc2\x0f\x41\xcc\x7d\x91\x52\x08\x5c\x01\x1b\x30\xbe\x20\x38\x71\xa1\xdd\x00\xf5\xba\x60\x1f\x58\x41\xa9\x96\x79\xd6\x8a\xf6\x43\x7f\x65\xc8\xb2\x6e\xf4\x97\xd6\x06\x09\x4c\x1c\x2b\x3e\x15\xf3\x47\x17\x2c\x43\x69\xc9\x2c\x7d\x1b\x6a\x80\x7a\x14\xae\xfb\xcc\x77\xe8\x27\x13\x47\xc1\x29\x6c\x88\x0f\x5e\xa4\xfe\x68\x6d\x2c\x39\x6a\x54\x55\x48\xe2\xc8\x06\x1e\x1f\xe3\x7e\x84\x1a\x8c\x28\x5c\xbd\x31\x5f\x9b\xaf\xff\xad\x06\x4c\x8f\xf9\xe6\xc7\x38\xad\x75\x9e\xc5\x7c\x49\x2f\xec\x6f\xce\xce\xde\xbf\x1f\x0d\x17\xcc\xdf\x6e\x81\x2e\x95\x43\x3e\xa1\x52\x06\xac\xd0\xf7\x98\x7b\x9f\x4e\x8a\x09\x65\x7d\x29\x15\x5c\x48\x23\xcb\xc0\xc1\x58\xc0\xf8\xb7\x5d\x86\xa5\x30\x75\x92\x13\xdf\xca\x42\x04\x2e\x17\x56\x44\xe4\x4f\xcf\x91\xae\xa7\x6e\x97\xec\x13\x75\x7a\x3c\x08\x0d\x02\xbe\x4d\x05\x35\x5b\x81\x3f\x60\x48\x14\x03\x0d\x4d\x0e\xdb\xa1\xf0\x88\x9b\x30\xa7\x3c\x99\x32\x53\x60\xac\x66\x6a\x01\x89\xd4\x11\x60\x11\x85\x5d\xa7\x2e\x90\x99\x65\x17\x37\x2c\x02\xce\x03\x2f\x1d\xe7\xc1\x6a\x25\x4e\x3a\x83\x30\xd8\xc0\x0a\xe9\x28\x80\xe2\x15\x46\xda\x1a\x07\xc9\x32\xb0\x93\xb8\x80\x32\x84\xb4\xa7\xc6\x4b\x87\x61\x12\x5c\xf4\xca\x0f\x67\x2e\x1c\x25\xbe\xcf\xfc\x15\x51\xee\x39\x1c\x4f\x67\xb7\xe3\x77\x29\x38\xa8\x78\xac\x04\x7c\x42\xc3\x22\x9d\xe0\x66\xaa\xfc\x73\x70\x28\xe8\x94\x81\x52\x45\x00\x38\x70\xad\x30\xce\x13\xb5\x1a\x20\x55\x82\xfc\xd1\x24\xe4\xcc\xa3\xbd\x10\x10\xa8\xcf\x77\x1e\x34\x06\x72\xbe\x78\x6e\x9a\x3f\x95\xef\x62\x2e\xee\x0b\x9f\x9e\x0a\xf1\x12\xb7\x60\x29\x25\x03\xfc\x88\xc0\x12\x7c\x58\x68\x54\x8c\x29\x92\x5d\xc6\x77\x3c\x41\x9e\x2e\xcb\x1e\x70\xad\xe6\x07\x2e\xcf\xd4\x03\xfd\xc4\xd5\x4b\xa0\x2e\xd5\x37\x4a\xc0\xbd\x8e\x6b\xe1\x79\x17\x2c\x01\x69\xd9\xc5\xc2\x51\xd9\x49\xd6\xa6\x18\x2f\xd1\xd9\x07\xf8\x57\x1a\x53\x0a\x5e\x98\x0f\x21\x2f\xbc\xc4\xb3\xf2\xda\xd9\x0d\xa4\x9c\x97\x1b\x09\x0c\x72\x12\xb1\x11\xa5\x83\x54\x1a\xcb\xe6\x6c\x43\xf3\x06\xc9\xc0\xd4\x1b\xbf\xed\xf7\x1f\x1e\x1e\x4c\xf0\xa8\x08\xfe\x6f\xda\x81\xd7\x97\x59\x10\x52\x88\x4b\xad\x98\xc6\x7d\xac\x9b\x31\xcf\xce\xc8\xc1\xa7\x62\x08\xc7\xcc\x41\x01\xc6\x4c\xc7\x37\xd7\xe8\xa0\x37\xd3\xd9\xe8\x7a\x56\x15\x43\xd8\x35\xfd\x0b\xfb\xcf\xfd\x48\x84\x79\x7d\x3c\x93\x10\xca\x20\x84\x01\xa6\x82\x98\x6e\x40\x9e\x47\xa8\xb5\xa5\x48\x06\xbc\x52\x1e\x58\xb8\x81\x7d\x8f\x68\xb7\xe7\x39\xbd\x37\xea\x22\x58\x2e\x21\x65\xf6\x5e\x97\x69\xc1\xe3\xa8\x8b\x63\xae\xb5\xa0\x6e\xd5\x85\x7b\x72\x54\x10\x89\x2c\x82\x01\xb9\xe0\x7e\x4f\x2c\x61\x40\x68\x43\x20\x3b\x89\xe7\x3d\x7a\xd4\x03\xc9\x97\x6c\x65\xaf\xa9\x7d\xbf\x08\x3e\x89\xc9\x5e\x8c\xe9\xff\x65\x36\x29\x94\xae\xa4\x04\x36\x32\x31\x49\x6e\x19\xde\x5b\x5a\x6e\x5c\x01\x7c\xe7\x22\x89\x9a\x1f\x00\xfc\x48\x46\x57\xa3\x2b\xa8\xca\x44\x9a\x52\xa5\x62\xe5\x0a\xb0\x9c\x31\xb8\xa2\x9e\x40\x42\x96\x82\x0c\x22\x25\x68\x44\xad\x6e\x3b\x9f\x91\x05\x28\xbf\xb7\x22\x66\xf5\xd6\xcc\x71\x28\x54\x10\x89\x4c\xe5\x1d\x5a\x1a\x95\x55\x41\x28\x4f\x63\x59\x4a\x54\xb9\x16\x15\xf3\x06\x88\xac\xd1\x58\x26\x8e\x5c\x21\x2f\x62\x88\xa4\xb2\xde\x3d\x88\xd8\x1f\xe8\x86\x6e\x4f\x0c\x2f\x00\x65\xa3\x95\x44\xe6\x17\x43\x65\x1f\x12\x28\x4c\x62\x36\xf4\x56\x5a\x29\x42\x68\x68\x09\x04\xb3\x2b\x80\x81\x95\x0a\xb2\x48\x80\xb9\x1f\x57\x1d\x11\x9e\x10\x4f\xa9\xea\x58\x76\xcc\x8a\x8f\x19\x4a\xf7\x15\x0d\x0f\x3e\x88\xcd\x66\x06\x6a\x5a\x41\x01\xc2\x3d\x5e\x38\xfd\xcf\xd9\x44\xef\x80\xa0\x5c\x1a\x3f\x60\xff\xa4\x17\x88\x12\xa4\xc0\xf6\x3a\x95\xaa\x98\x1e\x9a\x95\xab\x1a\xa7\xa2\x50\x29\x4a\x06\x2b\x6b\xda\x1b\x05\xd3\x0b\x8d\x8d\x5a\x12\x97\xd8\x59\xbf\xe4\x77\x07\x7a\xdc\x1e\x5f\xcb\x2a\x21\x70\x56\x1d\xd0\x9e\xd7\x36\x69\x0f\x65\x56\xab\xe4\xee\x5f\x5d\x1e\xfc\xe7\xf3\xe4\x3d\xb6\xd4\xa7\x3d\x35\x77\xb4\xac\x37\xbe\xd0\xfb\x1c\x5b\xe6\x85\x3c\x7d\x70\x66\x2d\xc6\x17\xe6\x0c\xab\x55\x8a\x90\x2a\x99\x70\x57\xf8\xaf\x22\x11\x66\x7a\xed\x92\x07\x85\x0e\xbb\xa4\xc1\xff\x5b\xce\x03\x19\x99\x68\xa8\x8e\x93\xdc\x9a\x9d\x6d\xf4\x09\x9c\xde\xc1\x68\x93\xce\x06\x20\x5a\x1c\x24\xd6\xb9\x9b\x46\xa0\x8a\x17\x4a\x8e\x88\x09\xc7\x17\xd0\x1e\x1f\x39\xe1\x21\xcf\x6e\xf9\x6e\x07\xde\x62\x2a\x8a\x4b\x78\x96\x2d\x7b\xea\x4c\x44\x1a\xce\x5a\xa0\xff\x65\x00\xfb\x62\x76\xf6\x6e\x6a\xb2\x8b\xc9\xd9\xf9\x2f\xa3\xd9\xd4\x9c\x33\x7c\x35\x59\x40\x96\x2f\xb3\x6f\x1b\x8c\xc1\x44\x5e\x14\xe1\xeb\xa1\xeb\x8c\x6e\x6f\x6f\x6e\xeb\x97\x91\x5f\x37\x19\x03\x71\x26\xd6\xbc\x48\x9a\x40\xf6\xac\x25\xbe\x94\xac\x5d\x4a\x7c\xd3\x68\x0c\xde\xe1\x4f\x03\xc4\xad\x84\xac\xd2\x43\x41\x1c\x58\xba\x7a\xfe\xa2\x55\xeb\xf7\x75\xce\x2a\x13\x9c\x98\x06\x57\xd5\x04\x75\xba\x4d\x89\xd9\xb5\xa6\x4b\xb3\xe4\xa1\x86\xce\x4a\x59\xb6\xc1\x36\x05\xad\xfa\xa5\xd3\x6e\x5d\xcb\xf5\x96\x1a\xf6\x00\xb5\x15\xbc\xe4\xb9\xb4\x96\x2e\xd1\x4e\x69\x55\xaf\x2d\xe8\x4c\x6e\xae\x9d\xca\x4a\x9f\x6a\x36\x69\x4c\xfa\xe7\x01\x0a\xcb\x5d\xfd\xb9\xf4\x25\x57\x68\xa7\xae\x4a\xe0\x15\xb4\x25\x36\xd6\x4e\x59\xc5\x6f\xd1\x9f\x82\x9a\xde\x3c\x0f\x6a\xb2\xc3\x44\x0f\x9b\xb2\xc9\xa3\xe1\xa6\xf3\xc9\x5c\x0f\x9c\x60\x39\x63\x00\x14\x75\x00\xa9\x46\xce\xaf\x02\x21\xe5\x2a\xec\x02\x91\xa4\xba\xfe\xba\xad\xa2\xb0\xf8\x9f\x8c\xa6\x52\x17\xd4\xc1\xa9\x26\x91\xb4\x78\x0a\x78\x1e\x1f\x50\x09\xa6\x47\xee\x20\x71\x77\x87\x39\xe2\x1e\x17\xcc\x92\x22\x70\x6e\x93\x10\xb3\x7f\x94\xff\x05\x76\x90\x4e\x43\x07\xe9\x1c\xbb\x83\x1c\x36\x74\x90\x4e\x6d\x07\x39\x6c\xec\x20\x77\x85\xff\x2a\xf2\xa3\xf3\x94\x0e\x72\xf8\xad\x83\x6c\x97\xf3\x86\x8d\x1d\xa4\xd3\xa1\x83\x1c\x3e\x43\x07\x39\x7c\xce\x0e\xd2\x69\xee\xec\x86\x12\xf4\x39\x17\xe3\xeb\x9b\x61\x6d\xbb\xa5\xfe\xd5\x27\x7e\xe1\x8f\xbf\x75\x9d\x9d\xd3\xaa\xb3\xcb\xd6\xd2\x75\x76\x4e\xa7\xce\x2e\x13\xb0\x20\x8d\x06\x70\xd7\xed\x56\x87\xb8\x87\xdd\x10\x77\x75\x89\x46\xc8\xad\xd5\x7e\xfe\x0a\x31\xdd\x5c\x9b\x1a\x53\xf9\x27\xcc\xfa\x0e\xc5\xa9\x74\x28\x2d\x14\xb6\xbf\x43\x79\xaa\xbe\x5a\x74\x28\x3a\x07\x2a\x68\xab\x75\x87\xe2\x1c\xdc\xa1\x68\x62\xbd\xf1\xf5\x77\xf3\x9b\xb1\x9f\x2a\x6f\xc6\x9e\xa9\xd7\x09\x63\x7d\x7d\x57\x73\x47\xab\xef\x93\xa9\xbe\xbe\xe3\xfb\xd3\x49\x14\xd8\x34\x8e\xd3\xf0\xae\x14\xf3\x5d\x49\xbf\x8a\x62\x9e\x29\xb1\x4b\x31\x17\x0a\x6b\x55\xcc\xe5\xfb\x6b\x5d\x9b\x53\xfe\xcf\x76\x74\x2e\x46\x93\xe9\xc1\xc5\xe8\x4b\xeb\xae\xd0\xcd\x3a\x00\x0d\x17\xdc\x92\xe8\xd0\x86\xd6\x90\x93\xa9\x1f\xf0\x21\xb5\x23\x6a\x09\x94\xd1\x04\x38\xc2\x18\xd7\xd0\x0a\xd7\xab\x97\xcb\xc3\xff\xa6\x5a\x37\xb9\x72\x24\xd4\x2c\x16\x2e\xd1\x16\x0b\x4d\xa6\xa1\x9b\xc4\x33\x70\x36\x2d\x12\xda\xd7\x8d\x85\xf1\x81\x91\xd2\x1c\x23\x59\xfa\x0f\x5b\x65\x7e\xf5\x8f\x64\xfe\xd2\x39\x7f\xb3\xd2\xe7\x7c\x35\x77\xb4\x9c\x7f\xf7\x5e\x9f\xf3\xf1\xab\x98\xf4\x6b\x59\xb2\x72\x83\x05\x7e\xfe\xc7\x2d\x9e\xd4\xe6\xff\x5d\xa9\xbf\x8a\xfc\x9f\x29\xb4\x4b\xfe\x17\xca\xfb\x72\xf2\xff\xdd\xfb\xaf\x3e\xff\x6f\xf6\x35\x9a\x1d\xd3\xd6\xe6\x50\x03\x37\x9b\x36\x4b\x5b\x9b\x55\x9b\xb4\x95\x7d\xc6\x7d\x60\xda\x6a\xfc\x8e\x75\xf0\x62\x63\x45\x04\xe5\x26\xa7\xea\x33\xb2\xed\xf6\xe7\x17\x85\x4f\x4a\xd3\xaf\xb0\xc5\x47\xc4\xff\x0b\x00\x00\xff\xff\xc4\x71\xdf\x5f\x4e\x54\x00\x00")

func index_html_bytes() ([]byte, error) {
	return bindata_read(
		_index_html,
		"index.html",
	)
}

func index_html() (*asset, error) {
	bytes, err := index_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "index.html", size: 21582, mode: os.FileMode(384), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if (err != nil) {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"defines.html": defines_html,
	"index.html": index_html,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type _bintree_t struct {
	Func func() (*asset, error)
	Children map[string]*_bintree_t
}
var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"defines.html": &_bintree_t{defines_html, map[string]*_bintree_t{
	}},
	"index.html": &_bintree_t{index_html, map[string]*_bintree_t{
	}},
}}

// Restore an asset under the given directory
func RestoreAsset(dir, name string) error {
        data, err := Asset(name)
        if err != nil {
                return err
        }
        info, err := AssetInfo(name)
        if err != nil {
                return err
        }
        err = os.MkdirAll(_filePath(dir, path.Dir(name)), os.FileMode(0755))
        if err != nil {
                return err
        }
        err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
        if err != nil {
                return err
        }
        err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
        if err != nil {
                return err
        }
        return nil
}

// Restore assets under the given directory recursively
func RestoreAssets(dir, name string) error {
        children, err := AssetDir(name)
        if err != nil { // File
                return RestoreAsset(dir, name)
        } else { // Dir
                for _, child := range children {
                        err = RestoreAssets(dir, path.Join(name, child))
                        if err != nil {
                                return err
                        }
                }
        }
        return nil
}

func _filePath(dir, name string) string {
        cannonicalName := strings.Replace(name, "\\", "/", -1)
        return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

