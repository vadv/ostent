// Code generated by go-bindata.
// sources:
// index.html
// DO NOT EDIT!

// +build bin

package templates

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
	"os"
	"time"
	"io/ioutil"
	"path"
	"path/filepath"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name string
	size int64
	mode os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _indexHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x5c\x7b\x73\xdb\xb6\xb2\xff\x3f\x9f\x02\x97\x6d\xef\x34\x9d\x8a\xba\xc9\x6d\xcf\xc9\xa4\xb6\x67\x1c\x4b\x49\x35\x8d\x6d\x1d\x5b\xce\x39\xfd\xab\x43\x89\x90\x84\x98\x22\x59\x02\x94\xe3\x6a\xf4\xdd\xcf\x2e\x00\xbe\x1f\x26\x25\xca\x4e\x67\x9c\x99\x58\x7c\x00\xfb\x00\x16\xbf\x5d\x00\x4b\x1c\xfd\xcf\xe0\xf2\x6c\xf2\xfb\x78\x48\x96\x62\xe5\xbc\x38\x39\x92\x3f\x84\xc0\x05\xb5\x6c\xb8\xc0\xcb\x15\x15\x16\x99\x2d\xad\x80\x53\x71\x6c\x84\x62\xde\x7b\x63\xa4\x5f\x2d\x85\xf0\x7b\xf4\xcf\x90\xad\x8f\x8d\xff\xf4\x6e\x4e\x7b\x67\xde\xca\xb7\x04\x9b\x3a\xd4\x20\x33\xcf\x15\xd4\x85\x7a\xa3\xe1\x31\xb5\x17\x34\x53\xd3\xb5\x56\xf4\xd8\x58\x33\x7a\xe7\x7b\x81\x48\x15\xbe\x63\xb6\x58\x1e\xdb\x74\xcd\x66\xb4\x27\x6f\x7e\x24\xcc\x65\x82\x59\x4e\x8f\xcf\x2c\x87\x1e\xbf\x8a\x08\x09\x26\x1c\x2a\xaf\xe1\x6e\xb3\x31\x07\x96\xb0\xcc\x5f\x3d\x2e\x90\xf8\x76\x4b\xe0\x0a\x48\x1e\xf5\x93\x72\x27\x47\x0e\x73\x6f\x49\x40\x9d\x63\x83\x01\x4b\x83\x88\x7b\x1f\xe4\x60\x2b\x6b\x41\xfb\xbe\xbb\x30\xc8\x32\xa0\xf3\x63\xa3\x3f\xb7\xd6\x58\xc0\xc4\x67\x85\xaa\x5c\xdc\x3b\x94\x2f\x29\x15\x11\x01\x41\xbf\x88\xfe\x8c\xf3\xb8\x3e\x5c\xf7\x99\x6b\xd3\x2f\x26\x3e\xd5\x14\xf8\x2c\x60\xbe\x48\x57\xf9\x6c\xad\x2d\xf5\xd4\xc8\xb7\x33\xe1\xc1\x0c\x08\x7d\xe6\xfd\x00\x5b\x38\xa0\x70\xf5\xda\x7c\x65\xbe\x7a\x13\x3d\x30\x57\xcc\x35\x3f\x03\x4f\x1b\x14\xef\xad\x2c\xe6\xaa\xf2\x9b\x0d\x9b\x13\x73\x72\xfa\xe1\xc3\x70\x30\x65\xee\x76\x0b\xe5\xb4\x30\xaa\xc6\x66\x43\x1d\x0e\x2d\x04\x1c\xfa\x2b\xe6\xdc\xea\x97\xf2\x85\x6b\x6f\xb7\x46\xd4\xa8\x47\x7d\x25\x9c\x96\xbf\xaf\x4d\xe3\xe4\x68\xea\xd9\xf7\xfa\xa1\x6b\xad\xc9\xcc\xb1\x38\x3f\x36\xe0\x72\x6a\x05\x44\xfd\xf4\x6c\x3a\xb7\x42\x47\x44\xb7\x73\xf6\x85\xda\x3d\xe1\xf9\x06\x09\x3c\xe8\x46\x2c\xcd\x16\x60\x2c\xd0\x0d\x31\x3f\x9b\xc5\xc4\xd0\x22\x40\x25\x0a\x35\x9d\x90\xd9\x51\x99\x5c\x29\x3b\xf0\x7c\xdb\xbb\x73\x23\x2e\x28\x21\x0d\x92\xc2\x52\xd8\x50\x08\xcf\xcd\x0a\x09\x82\x2c\x16\x0e\x05\xbb\x73\x1c\xcb\xe7\xd4\x8e\x7a\x52\x15\xd6\x6d\xaa\x0a\xa1\x2c\xaa\x54\xf4\xd8\x0a\x16\xd8\x51\xdf\x68\x5a\xf1\xeb\x14\x5b\xd9\xdf\xbe\x15\xb3\xe5\x41\xcf\x73\x9d\xfb\x6c\x11\x28\x34\x51\x72\x24\x8d\x01\x6d\x0e\xd5\x6a\x28\xa1\x5d\xf6\x80\x6d\x81\xd4\x57\x53\xb3\xaf\x1a\x31\xd3\x09\x16\x61\x76\xd2\x5d\xd3\xc0\x72\xa1\xc9\x73\x9d\x18\x75\x8a\x6e\x56\x5d\x28\xd3\x13\x51\x51\x83\x58\x01\xb3\x7a\xf4\x0b\x70\xb7\x29\x50\x16\x41\x48\xe3\xd1\x97\xef\x08\x34\x18\x64\xbf\xd4\xe0\x50\x50\xa3\x88\x1e\x47\x7d\xa8\x94\xd7\xcb\xca\xa8\x14\x3a\x05\x05\x56\xd4\x0d\x23\xfb\x56\xd7\x52\x4c\xc7\x9a\x52\xc7\xa1\xf6\xf4\x3e\xdf\x04\x39\x0e\x0e\x2b\x90\xd4\x16\xad\x89\xfa\x01\xe5\x00\x6a\x99\x61\x13\x57\x0f\x42\xd7\x65\xee\xe2\xa8\xef\xb0\x22\xdd\x06\xf5\xa1\x93\x0a\x3d\x02\x28\x95\x2f\x97\x6a\xaf\xc1\xe8\x7a\x72\x35\x7a\x87\xcd\x65\x15\x4d\xa3\x20\x46\x3f\x74\x32\x2d\x98\x69\xe3\xa4\x9b\xf2\xc3\x2a\x81\x04\xf5\x80\xd4\x8c\xbb\x74\xb7\x20\x34\xe9\xa2\xf0\x53\xd2\xd6\xc8\x8c\xf9\x46\x1e\x1a\x4a\x74\x8e\x35\x1e\x8d\x51\xd9\xb2\x06\xce\x35\x5d\xb1\x75\x23\xf5\xa2\x12\x8e\x55\xc6\x99\xe4\x46\x43\xab\x01\x50\xec\xa9\x98\x2b\x70\x2b\xbc\x4d\xe9\xf5\xf1\xb4\xcc\xe6\x4b\xba\xa9\xd8\xcc\xbb\x58\x7f\x99\x34\x7b\x9a\xbf\x24\x11\xfa\x82\xad\x68\xa1\x83\x62\xf2\x0d\xc9\x68\xb8\x52\xd4\x4a\x70\xaa\x74\x54\x64\xda\xf3\x46\x56\x2d\x1b\x18\xba\x4d\x4b\x25\xcc\x0e\x90\xf2\x92\xc5\x61\x54\x65\xf1\xd1\x65\xc0\x16\x4b\x51\x0d\x35\x75\x66\x9f\xa2\xed\x30\x2e\x7a\xcc\x85\x30\x88\x56\x8e\xaa\x88\x74\x45\x9b\x2a\x78\xfe\x06\x83\x80\xf2\xd6\xc3\x57\xed\x5a\xec\x21\x5e\x3e\xaf\x62\xe5\xf3\x6e\x39\xad\x17\x55\x9c\xd6\xd6\x02\xc0\x5e\x1c\xc2\x14\x8a\x23\x86\x58\x33\xc1\xd6\x45\x17\x97\xf3\xc0\x6b\x1a\x70\xb4\xfe\x0a\x1f\xbc\x8b\xdb\xc5\xd9\x00\x7f\xdb\xef\xdf\xdd\xdd\x99\xe0\x47\x03\xf8\x6f\xce\xbc\x55\x5f\xc5\xe1\x10\xb5\x3a\xd4\xe2\x94\xf7\x1d\x4b\x50\x5e\xe6\x55\x2e\xaf\x27\xc3\x8b\x49\x99\x2b\xd9\x0f\x6c\x22\x5d\x0f\x82\x38\x9a\x78\x17\x90\xd3\x4d\x33\x4a\x6a\x11\x0c\x7d\x1a\x5e\x5d\x8f\x2e\x2f\x1e\x07\x87\x72\xee\x3c\x75\x0b\x37\x80\x15\x7a\xc6\x10\x79\x24\x39\x17\x28\x8f\xf6\x89\x6f\xd9\x36\x84\x32\x38\x5f\xe0\x74\x0d\x7a\xdf\xf3\x65\xe9\x34\x21\xf0\xee\xf2\x53\x03\xa4\xbd\xa2\x2b\x08\xd3\xd5\x3c\x54\x15\x9c\x3a\xde\xec\x16\xe3\xfd\xde\xca\xee\xbd\x8e\x2e\xbc\xf9\x1c\xe6\x5c\xbd\x57\x99\x10\x62\xb3\x11\x74\xe5\x63\xfb\x12\x03\x66\x31\x20\x16\x7f\xfb\x56\x5d\xfc\x01\x86\x4f\x1d\xa0\x6e\x10\x33\xef\x30\x13\xee\x6c\x5e\xc7\xfc\xff\xdb\x31\x63\xf3\x5a\x5e\x33\x3f\xac\xd5\xb4\x1d\x33\xa0\x56\xcb\xcd\xee\x52\x33\xbb\x5c\xb3\xac\xdd\x44\x37\x4d\x26\x87\x4d\x2c\xc3\xe7\x75\x1a\xbc\xc9\x19\x46\xcb\xe6\x03\x6f\xf3\xf8\x1a\xad\x17\x07\xd4\xa8\xca\x20\xaa\x54\xaa\x5d\xe3\x88\x2a\xac\xad\x80\x20\x3c\x91\x63\xa2\x81\x6a\xbb\xfd\x25\xbf\xd8\xa0\xd7\x18\x70\xd9\x41\xae\x50\x6d\x36\xfd\x1f\x5e\xfc\xd0\xdf\x6e\x37\x1b\x25\x60\x4a\x62\x0b\xd1\x1b\x17\x68\x0c\x90\x54\x03\x29\x50\xfe\x15\x7e\x71\x21\xc8\x3d\x73\xd8\xec\xf6\x78\x23\x96\x8c\x9b\x4b\x70\x5d\x0e\x95\x4f\xb6\x2f\x14\x54\x4e\x40\x4e\x05\x91\x27\x7a\x09\xa4\x8e\x99\x6e\x9e\x99\x03\x53\x07\xa8\xc5\x5c\x3f\x14\xa8\xc7\x68\x70\x2a\x44\x00\xfc\xe0\x46\xf6\xc4\x76\x9b\xcc\x59\x7a\xb3\x25\x9d\xdd\x4e\xbd\x2f\xd1\x42\x43\x72\x2f\xfd\xd6\x92\xd9\x36\x75\x63\x87\x2a\xef\x50\x9a\xcf\xfc\xcb\x99\xe3\xc1\x9c\xc7\x90\x7c\x90\xa1\x74\x71\xc8\xf0\xbd\x17\x68\x8e\x69\x86\x28\x16\xbe\x3d\xff\xf7\x35\xae\x53\xa9\x12\x39\x45\x25\x89\x56\xca\xfa\x21\x58\x1f\x37\xb0\xcc\x1d\x13\x4b\x82\x77\x60\x4e\x68\x1a\x40\x17\xff\xa8\x35\xa5\xcd\x06\x42\x9d\x05\x25\xdf\xb2\x1f\xc9\xb7\x33\x2f\xa0\xe4\xed\x31\x51\xbe\xe8\x6c\x7c\x63\x7e\x84\x20\x12\x04\x10\xc1\x66\x73\x4b\xef\x89\x44\x2f\x20\x35\xbd\xef\x5d\x18\xaa\xbc\x79\xa1\xa4\x3d\x12\x76\x64\xcf\x68\x46\x2a\x88\x25\xae\x77\x17\x58\x3a\x7a\x04\xf1\xe3\x1a\x47\x7d\x61\x57\xd6\x8a\xd7\xdf\x70\x45\x23\x69\xaa\xa8\xfa\x0d\xa7\xc1\x99\x7a\x96\xac\x26\x26\xaf\x90\x78\xbc\xc8\x71\xb2\x0f\xa3\xeb\x7b\xae\xf9\x90\x3c\x23\x78\xd5\x1d\x9f\x91\xb4\xef\x52\x85\xf0\x55\x05\xa3\xbe\x08\x52\x16\x91\xfd\x69\x62\x1f\x0a\x83\xb0\x73\xf1\x22\x16\x1a\x6f\x5e\x11\x88\x63\x98\x4f\x35\x4e\x29\xbd\x52\xeb\xcc\xc0\x39\x82\x12\xb1\x4c\x83\x4c\x7c\x87\x2f\x1e\x30\x07\x59\x0c\x3b\x2c\xb3\x72\x15\xba\x2c\x13\x23\x9d\x7c\x97\x5b\xb2\xda\x85\x0b\xf4\xd6\xe1\x99\x60\x57\xed\xc3\xa5\xaf\x5b\x55\x3e\x8d\x16\x6e\x45\xb2\x72\x5b\x07\xfd\xd1\x70\x57\xc8\x2f\x12\x28\x96\x1d\xd8\x06\x38\xec\xf9\xf4\x1e\xe2\xd4\x3f\x5a\xa2\x87\xcd\xf8\x6d\x82\x1c\x83\xf7\x92\x48\x01\x3d\x34\x71\x8d\x20\x36\x0b\xe4\xe2\x9e\xaa\x6d\x0e\x58\x70\x21\x97\xf2\x72\xc3\x28\x07\x21\x35\x8d\x20\x91\xf4\x7b\xfc\x21\xaf\x5e\x23\xb7\x9e\x62\x67\xd3\x75\x86\x11\x5d\x23\xa3\x97\xa5\x28\xb4\x13\xb7\x7f\xa4\x99\x95\x6a\x55\xce\xac\x80\x10\x30\xec\x65\xad\xd3\xb5\xc5\x9c\x76\x55\x60\x24\x41\x0f\xff\xaf\x3b\xe5\xfe\x2f\x47\x3c\xf4\x13\x24\xa9\xd6\x21\xe4\xd4\xa7\xc1\x0c\xc2\x75\xd0\x24\xb9\x21\x31\xc5\xb1\x7a\x20\xa5\x8f\x68\x36\x82\xba\x48\xaa\x89\x27\xac\xb4\x22\x7b\x81\x56\x64\x9b\x9d\x20\x57\x69\xbb\x88\x65\x1c\x98\x90\xe8\x4a\xdb\xf4\x47\xb8\xe4\xe6\xd8\x0a\xac\x15\x37\x87\x17\x37\xe7\xa6\x3d\x27\xc6\xfb\x6b\x83\x18\x72\x9c\x74\x41\xed\x7c\xdc\x25\xb5\xd3\x4f\xa7\xa3\x8f\x9d\x51\xbb\xb9\x1e\x0e\x3a\x23\x36\xb9\x9c\x9c\xa2\x68\x7b\x81\x5e\x06\xaa\xba\x40\x3e\xe6\x7a\xf6\xfe\xd0\xa7\xa8\x94\x60\x9f\x7a\xf1\x78\xe0\xa7\xf9\x3d\x12\xfa\x55\x70\xdb\x09\xfe\x46\xf3\x80\xd2\x96\x55\xc2\xce\xf1\x0f\x49\xee\x0d\x80\x23\xd9\x2c\xdd\x21\xa0\xb6\xd1\xae\x82\xb7\xa8\x66\x7e\x1f\xf6\x64\x20\x77\xf4\x2b\xc2\xa0\x42\xe9\x73\x2f\x74\x05\xb5\x6b\x8b\x93\x7c\x1b\xc9\x62\xd2\xd3\xed\x50\x0f\xdd\xdd\x0e\xd5\xa4\x3f\xea\x2c\xec\xca\x42\xc6\xfe\x10\xc4\x76\x0b\xbe\xd8\x3c\xc1\x9f\x51\x45\xe8\xc5\x32\xa1\x97\x1e\xa2\x6c\x6e\x66\x50\xa7\x3d\xcc\xb0\x28\xec\xc9\x52\x6c\x3e\xde\xa1\xc2\x80\x3a\xc2\x1a\xb9\xad\xab\x5c\x86\xa2\x4d\x9d\x76\x1c\xb2\xc4\xf7\x1a\xb4\xac\xcb\xb0\x25\x33\xe1\x1a\xc1\xa0\x0b\xe6\x56\xe5\x38\x2d\x4e\x57\x88\x4c\xae\x39\x36\xde\x8d\x26\xd7\x04\xe0\x8e\x70\x3a\xf3\xd2\xfb\xda\x40\xb3\x7e\x12\x73\x94\x5b\x55\x9e\x1e\xf5\xd3\x4f\x4e\x70\x9b\x66\xc7\xb9\xd4\xc3\xc2\x41\xaf\x3c\xb9\x74\x02\x21\x84\xbc\xfb\x7d\x32\xbc\x26\x2b\xcf\x0e\x1d\x8f\xfc\xf4\x61\x8f\x06\x7c\x97\x13\xf1\xbb\x9f\x3e\x1c\x5c\xc6\xd6\xed\xd8\x56\xc8\x7d\x50\x95\x75\x1b\xd7\xb1\x39\x0d\x02\x2f\xd8\x13\x55\x15\x8d\x12\x58\x55\x2f\x0e\x80\xab\x9a\xf0\x33\xb0\x3e\xdc\xb3\x5f\x13\xb2\x56\x80\x6a\x14\x98\xd6\x0d\xba\x0e\xc0\xa9\x0a\x35\x1f\x89\x7d\x39\x1e\x36\x61\xde\x05\xea\x55\x20\x5d\x17\xec\xf7\xc3\xb3\x34\x00\x75\x01\x68\xbe\x35\xbb\xa5\x62\x4f\x44\xd3\x44\x4a\x20\x4d\xbf\x39\x00\xa6\x45\x94\x9f\x41\xad\x41\xef\x3e\xa3\xda\x57\x82\x6a\x2a\x9a\x7a\x5a\x6c\xab\x96\xe1\xab\x40\xb8\x0c\x22\xed\x0f\x71\x2b\xba\xda\x61\xfb\x12\x6a\x25\x00\x77\x3e\x3c\x2f\x40\x1b\x66\x99\x28\x50\xbb\x65\x98\xaa\x8c\x35\xcc\xdf\x18\x0a\x95\x43\xb5\xd4\x9b\x86\x28\x80\x15\xde\xb7\x59\xb6\xc2\x0a\x9d\x2e\xda\x6b\x82\xfb\x2c\x59\x21\x89\x4e\x97\xec\x81\xe0\x13\xec\x33\xa6\x46\x07\x76\x49\x9b\xf2\x35\xeb\x4a\x8f\xb0\xa0\x14\xd9\xfd\xfe\x23\x28\x4e\x06\x01\x42\xa9\x94\x14\xf9\xf8\x95\x6a\x69\x95\x97\x90\x7e\x21\x73\xe9\x98\xbb\x20\x53\xe1\xf6\x64\x56\x4a\xb4\x73\x6d\x11\xfc\x4a\xe5\xdd\x58\x6e\x53\x63\x8a\x42\xd9\xf2\xfe\xbb\xcb\xcb\x8f\x26\xa0\xf4\x9c\x2d\x80\x33\x31\x90\x8a\x5a\x8c\x53\xc4\xa2\x54\xc7\xe2\x1b\x43\xe6\x44\xa8\xec\x45\x4c\x02\x69\xc6\x21\xd9\x2e\x3f\x1b\xdf\x44\x09\x73\x27\x51\xb6\x04\x5e\x66\x53\x77\x74\xfa\x95\xaa\x6f\xec\xa2\x11\x88\x1e\x27\x88\xa8\x9c\x0f\x23\x11\xe2\x68\xee\x05\xab\x74\x6a\xc7\xd2\x0b\xd8\x5f\x98\x27\xe4\xf4\xe4\xab\xa9\x17\x48\x8d\x3d\x21\xbc\x95\x7c\x84\x42\xe0\xef\xe9\x0c\xf3\x0c\xab\xa4\xf8\x57\x48\x83\xfb\x98\x8f\x9c\x9d\xcb\x1c\x96\x68\xbd\x53\x0a\xd2\xe3\xe1\x74\xc5\xe2\x2f\x9c\xf4\x5d\xaa\x4e\xca\x0a\x90\x65\x6f\x11\x78\xa1\xdf\xc3\xc4\x3d\x6a\x67\xe7\xfe\xa9\x92\xd8\x51\xb2\x20\x89\xaf\x7a\x7c\x15\x25\x5b\xca\xfb\x7c\xa2\x72\x73\x53\x01\xc1\xa9\x6c\xd6\xd8\x2e\x94\x69\x48\x5e\xfa\x73\xa4\x56\x96\xa1\x09\xa6\x9a\x4a\x0b\xf5\xab\x6c\xa2\x7c\x4e\x65\x2c\x6b\x5e\x54\xcc\x7c\x19\xca\x9c\x59\x1c\x76\x70\x27\x25\xb3\x19\xc7\x5b\x7b\x4f\x21\x55\x32\x6e\xa9\x98\x51\x16\x68\xc2\x1f\x31\x07\xee\x8a\xf9\xa0\x85\x2c\xff\xd2\xaf\x33\x1a\xf5\x77\x1d\x20\x81\x32\x01\xe5\x4b\xa3\x4c\x9b\xf1\xf0\x6a\x74\x39\x30\x75\x11\xa9\x50\x21\xeb\x0c\x39\xbf\x28\x08\x18\x5f\xe6\x47\x68\x6b\xcb\xa9\x1e\x8d\x0f\xa4\x4b\xe8\x0c\xbc\x4c\xa6\x5c\x4a\x2c\x79\xd1\x16\x6e\xed\xf9\x13\xa1\x2d\x6e\xa9\x1e\x14\x6c\xed\x79\xba\x61\xab\x77\x76\x85\x39\xc1\x70\x35\x31\xd7\x07\xd0\xd8\x9e\xef\x06\xc6\xa8\xf0\x5e\x58\xfc\x0c\xbc\xd8\x84\x5d\xe2\x6e\xca\x44\x62\x91\x5a\xc2\x6e\x02\xb9\x83\xf7\xdd\x23\x6e\x99\x80\x91\x2d\x27\x60\x3b\x78\xff\x37\xc0\x5a\x54\xa5\x1e\x6a\x0b\x9f\x18\x61\x88\xcd\xd3\x56\xe9\x30\xd9\x09\x62\xe8\x86\x2b\x6c\x3d\x5e\x93\xb0\x21\x88\x31\xba\xb8\x1c\x0c\x31\xd9\x45\xdb\x4c\xa6\x2d\xcb\xd5\xb2\x5a\x25\x85\x24\x3c\x72\x1f\xec\xb5\x16\x75\xf0\x5e\x6e\x7c\x1c\x56\xd6\x88\x49\x41\xd8\xe4\x23\x8b\xae\x1d\x1e\x8e\xd8\x1a\xc4\x4b\x30\x55\x6d\x4a\x2b\x4c\xbd\xa0\xb5\xc4\x4b\x3a\xb8\x92\x05\x32\x91\x4b\x0c\x69\x2e\xc9\xd4\xad\x91\x8d\xe7\x12\x18\x94\xff\xcd\xaf\x4a\xa4\x53\xd5\x13\xad\xe4\xa6\x50\x4b\xa5\x12\x53\x68\xaa\x95\xda\xcd\x6e\xab\x54\x7a\x83\xf7\x61\x9d\x3a\x0b\x38\xd8\x53\x05\x1c\xec\xd0\x01\x07\x6b\x14\x70\xb0\xd6\x01\x07\xdb\x31\xe0\x60\xcf\x01\xc7\xbe\x01\x07\xeb\x38\xe0\x60\x5d\x06\x1c\xa3\x03\x04\x1c\x65\x02\x16\x03\x8e\xd1\xdf\x21\xe0\x60\x8f\x1a\x70\x30\x84\xee\xf1\xe9\xd9\x6f\xc3\xc9\xe1\xbc\x78\x86\xc9\x1e\x21\x87\xa4\x33\xbc\xba\xba\xbc\x3a\xb0\xac\x9a\xc7\xbe\xa2\x8e\x0e\x1c\x1d\x65\x98\x3c\x62\x74\xc4\x9a\x45\x47\xf1\x56\x45\xf3\x48\x22\x67\x8e\xcd\x22\x89\x64\x17\xb5\x5d\x2c\x91\xdf\xfe\x6b\x1e\x21\x45\xdb\xcc\x2d\x15\x8b\x4d\xb7\xa9\x5e\x3a\x2f\xa5\xad\x5a\x99\x54\x8d\x36\x5a\xb5\x8c\xfb\x72\x46\xde\x54\xab\x5d\xe2\x3e\xf6\x54\x71\x1f\x7e\xcf\xfc\x34\x81\x1f\x6e\xb1\x1d\x36\xf2\x03\x0e\xc9\xb0\x3d\xa7\x2b\x2f\xb8\x6f\x18\xdb\x41\xcd\xdd\x82\x3b\xa9\xd4\xf3\xd2\x7e\xd7\x01\x9f\x6c\xd6\x2e\x23\xbe\xb4\x69\xc4\x42\x3d\x10\xf2\x35\x94\x95\xdf\x59\x7e\xb7\xc2\x22\x45\x59\x87\xcd\x07\x3a\xaa\xdc\x59\x41\x4a\x90\xda\x57\x1f\x25\x4a\xf1\x1f\x73\x0b\x40\x5a\xd8\x6e\x5b\x00\xf1\xc6\x74\xb7\x5b\x00\x3e\x7f\x22\x60\xf6\xf9\x81\x71\xd9\x4f\x7d\x9d\x3c\x0e\xbc\x19\xe5\x9c\xf2\x86\xc8\xec\xf3\xdd\x80\x19\x95\x6a\x87\xcb\xea\xbc\xa3\x2a\x4c\x4e\x7f\x13\xf2\x35\xc2\x73\x37\xc3\xd0\xe7\xe5\xe7\x81\x7c\x7d\x1e\x02\xfb\xb7\x4b\xcc\x4d\xd9\x68\x1a\x3e\xdb\x2c\x09\x8c\xaf\x25\x2c\xc0\xaf\xeb\x89\x01\x9d\x05\xd4\x92\xe0\x9d\x59\x1b\xa8\x12\xd5\x81\x41\x51\x27\xe8\xc7\xd1\xf9\x68\x62\xfa\xdc\x2d\x8a\xd9\xdb\x4d\xc2\x64\x05\xa3\x91\x80\x10\x4d\xd5\xb6\x64\x8d\x80\xd1\xca\x45\xc2\xde\x77\x42\x9e\x9c\xc4\x91\x95\xfd\x21\xcf\x74\x48\xaf\x80\x56\xb5\x9b\x53\xf0\xf9\x21\x7c\xc2\x7a\xf1\x44\x3e\x61\xbd\x38\xb0\x4f\x58\x2f\x92\x76\xfd\xa4\x0e\x4d\x23\x0b\xc7\x9b\xe2\xd9\xbf\xc2\x12\x61\x53\xff\xb0\x5e\xec\xe6\x1f\x50\xc1\x67\xff\xd0\xd6\x3f\x60\xaf\xfd\x3d\xfc\x03\xf6\x6f\x97\xfe\x21\x65\xaf\xb1\x48\x55\xfe\xe1\x29\x11\x0c\xf5\xde\x0d\xc1\xd6\x8b\xae\x11\x8c\xb7\x4c\xc4\xf5\x21\x36\x4c\xb2\x70\x23\x6f\x91\xcf\xc4\xf5\xa3\xaf\x0b\x7c\x86\x79\xb8\x58\xc9\x1c\x8f\x06\x98\x0e\xea\x2e\x6a\x0e\x14\xd2\x50\x08\xad\x19\xd7\x69\x96\x70\x1b\xd7\xb8\xc9\xd5\xd0\xaf\x53\xff\xda\x7c\xd3\xe0\xf3\x90\x03\x86\x94\x69\xa1\xef\xf1\x84\x9b\x86\x1f\x38\x24\x5a\x05\xcc\x0b\x98\xb8\x6f\x59\xed\x82\xcd\x1a\xa6\x1f\xc7\x55\xae\xd9\x5f\x6d\xab\x5c\x51\x0e\x26\xea\xd6\x7c\x4d\x81\xe9\xc7\xd1\xe7\xe1\x27\x51\xb5\x89\x3e\x5e\xb5\xfe\xcc\x81\x56\x1d\xf0\x93\xec\x00\xfc\x96\xa4\xae\x03\xf2\x5f\x98\xec\x95\xcf\x1c\x45\x08\xa5\xe9\xcc\xaf\x1f\xf1\xf0\x11\x0c\x72\x40\xd3\x4e\x4e\xe4\x40\x5a\x37\x5d\xd2\xba\x1e\x5e\x75\x75\x90\x89\xd4\xf3\x6a\xd4\x19\xad\x8b\xd1\xd9\xb0\x33\x62\x9f\x46\x57\x93\xce\x88\x5d\xc9\xfd\x92\x6e\x68\x4d\x46\xe7\x43\x0c\x8c\xd4\x40\xec\xac\xed\x4e\x25\xd5\x7d\xcf\x6d\xd1\x2e\x65\xff\x1c\xf7\x28\xe4\xd1\xd1\x35\xb8\x20\xf5\x40\x3a\x59\x62\xea\x23\xf8\x74\x88\x92\xba\x86\x20\x85\xe8\xa2\xea\x81\xa1\x3d\x4e\xe6\x08\xfd\x54\x79\x08\x83\xa2\x53\x60\x4f\xae\x54\xc5\x78\xa5\xff\x24\x3e\x50\x30\x0e\x32\x65\x04\x85\x07\x44\x42\x20\x14\x33\x52\xc7\x01\xa6\x0e\x5a\x34\x08\xb4\xcf\x8c\x2e\x3d\x07\xa2\x50\x3c\xfd\x70\x9c\xdc\xca\xc0\xc6\xa7\xe0\x06\x6c\x84\x2f\x15\x30\xa4\x1e\x7e\xb2\x9c\x30\x7e\xfa\x42\xb6\x77\xc9\xc1\x83\x6d\x7d\x7d\xea\xcb\x12\xa8\xad\x0f\xab\x33\xe3\x90\x25\x3e\x95\x50\x72\xdf\x6e\xa3\xe3\xcc\x5a\x70\x58\x2f\xe4\x36\x90\x84\xcf\x80\x40\x24\x80\xb1\xbf\x7a\x14\x7b\x05\xcf\x41\xaa\xc7\xc6\xcf\xb1\x03\xd1\x47\xe3\xaa\x09\xc6\x10\x4b\x57\xc2\x79\x03\x09\xe2\x78\x46\x07\x2c\x2b\x6b\xb6\x4c\x02\x16\xcd\xe5\x1c\x1e\x62\xbd\x42\xe0\xa2\xcf\x86\xd6\xd1\x4b\x18\x4a\xbf\x83\x24\xcc\x1b\x19\x59\x94\x45\x15\x4d\xfd\xd9\x3f\x13\xf2\x79\xc2\x2f\xab\x63\x16\xfc\x6c\x07\x8b\x5d\x58\x39\x07\x5b\x5a\x6a\x1c\x78\x6b\x66\xd3\xa0\xae\x64\x33\x69\xdf\x24\xd2\xe2\x64\x8f\xa6\xc5\xd5\x97\xd7\xf8\xbc\x56\xf4\x66\xac\x7e\xfe\xbf\x84\xd7\x9c\x39\xd4\xb7\xc4\xb2\x84\x9d\xee\x3b\x2c\xf1\x07\x16\x79\xd0\xeb\x37\xb0\x16\x0e\x51\xef\x6c\xd9\x24\xfe\x65\x73\x42\xff\x24\xfa\x40\xd0\xef\x3f\x73\xcf\x25\x45\xc3\xb5\x5f\x56\x80\x71\x6e\x80\x90\x0c\xe9\xba\xf2\x31\x96\xee\x1a\xd2\x44\x53\x86\x38\xa4\x51\x33\xf2\xec\x11\xb5\xfb\x7c\xae\xc5\xf2\x1f\x54\x25\xaf\x30\x76\xab\x7c\xe9\x6b\x53\xad\x2c\x20\xcd\xae\xf2\xad\xcd\x02\x3a\x13\x72\xfb\xb0\xa3\xaf\xb3\x62\x6b\xd8\xc3\x75\xe5\x7c\x56\xd1\xd9\xd4\x3b\xaa\xbd\xdd\x54\x7a\x92\xdf\xd2\x45\x19\x88\xc4\x6a\xe6\xad\xed\x1d\x34\x8b\x0c\x5d\x3d\x7f\x19\xdd\x8f\xa5\x9b\x02\x63\x37\xc8\x1a\xbd\x85\xac\xac\x1e\xc6\xb6\x69\xb4\x9b\x90\xa6\xc2\x15\x34\xd5\x65\x66\x3b\x56\x1d\xf9\x04\x3c\x4e\x1d\xb6\x70\xcf\xd4\x73\xc5\xa0\x70\xbc\x70\xfa\x00\x56\x53\x17\x8d\x5d\x8d\x5e\xd0\x2c\x9c\xd4\x6a\x9e\x59\x01\x15\xe9\xd2\x52\xf8\xf4\xb9\xac\x96\xb6\x85\x65\xac\xce\x7f\x03\x00\x00\xff\xff\xf2\xd4\xa2\xf3\xb5\x6b\x00\x00")

func indexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_indexHtml,
		"index.html",
	)
}

func indexHtml() (*asset, error) {
	bytes, err := indexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "index.html", size: 27573, mode: os.FileMode(384), modTime: time.Unix(1400000000, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if (err != nil) {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"index.html": indexHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"index.html": &bintree{indexHtml, map[string]*bintree{
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
        data, err := Asset(name)
        if err != nil {
                return err
        }
        info, err := AssetInfo(name)
        if err != nil {
                return err
        }
        err = os.MkdirAll(_filePath(dir, path.Dir(name)), os.FileMode(0755))
        if err != nil {
                return err
        }
        err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
        if err != nil {
                return err
        }
        err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
        if err != nil {
                return err
        }
        return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
        children, err := AssetDir(name)
        // File
        if err != nil {
                return RestoreAsset(dir, name)
        }
        // Dir
        for _, child := range children {
                err = RestoreAssets(dir, path.Join(name, child))
                if err != nil {
                        return err
                }
        }
        return nil
}

func _filePath(dir, name string) string {
        cannonicalName := strings.Replace(name, "\\", "/", -1)
        return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

