// -*- eval: (rainbow-mode) -*-

@import 'bootstrap-3.3.5.scss';

body { font-size: 12px; }

// https://stackoverflow.com/q/20648451
.headroom {
  position: fixed;
  top: 0; left: 0; right: 0;
  transition: all .2s ease-in-out;
}
.headroom--pinned   { top: 0; }
.headroom--unpinned { top: -100px; }

.padding-topseventysh {
  // 51 for navbar(50+1(border)) (depends on theme) + regular 20 padding-top
  padding-top: 71px;
}

.dropdown:hover > ul.dropdown-menu { display: block; }
.dropdown-menu > li > a.dropdown-text { cursor: default; }

label.clip {
  cursor: pointer;
  margin-bottom: 0px;
  font-weight: normal;
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow: hidden;
}
.collapse-checkbox:checked + label.clip {
  text-decoration: overline;
  word-wrap: break-word;
  word-break: break-all;
  white-space: normal;
  overflow-x: visible;
}

.hidden-submit     { display: none; }
.collapse-hidden   { display: none; }
.collapse-collapse { display: none; }
.collapse-checkbox { display: none; }
.collapse-checkbox:checked ~     .collapse-collapse,
.collapse-checkbox:checked ~ div .collapse-collapse {
  display: block;
}

.nowrap { white-space: nowrap; }

#generic-uptime { white-space: pre; }

.unit { // "code" colors
  color:            #333;
  background-color: #f4f4f4;
}

table thead th { font-weight: normal; }
table .bold    { font-weight: bold;   }

table thead tr .header a {
  color: black;
  &:hover {
    // &:extend(a); &:extend(a:hover);
    color: #428bca;
    text-decoration: none;
  }
  &.state.current {
    white-space: nowrap;
    font-weight: bold;
    // https://stackoverflow.com/q/8376795
    vertical-align: middle; // this DOES NOT make the line 1px higher
  }
}

// .badge-default { &:extend(.badge); background:
.badge-primary { &:extend(.badge); background: #428bca; }
.badge-success { &:extend(.badge); background: #5cb85c; }
.badge-info    { &:extend(.badge); background: #5bc0de; }
.badge-warning { &:extend(.badge); background: #f0ad4e; }
.badge-danger  { &:extend(.badge); background: #d9534f; }

.btn-left { text-align: left; }

.form-inline .input-group > .form-control.width-fourem { width: 4em; } // refresh input

.label[data-usepercent="0"],
.label[data-usepercent="1"],
.label[data-usepercent="2"],
.label[data-usepercent="3"],
.label[data-usepercent="4"],
.label[data-usepercent="5"],
.label[data-usepercent="6"],
.label[data-usepercent="7"],
.label[data-usepercent="8"],
.label[data-usepercent="9"],
.label[data-usepercent^="1"]:not([data-usepercent="100"]) { &:extend(.label-success); }

.label[data-usepercent^="2"]:not([data-usepercent="2"]),
.label[data-usepercent^="3"]:not([data-usepercent="3"]),
.label[data-usepercent^="4"]:not([data-usepercent="4"]),
.label[data-usepercent^="5"]:not([data-usepercent="5"]),
.label[data-usepercent^="6"]:not([data-usepercent="6"]),
.label[data-usepercent^="7"]:not([data-usepercent="7"]) { &:extend(.label-info); }

.label[data-usepercent^="8"]:not([data-usepercent="8"]) { &:extend(.label-warning); }
.label[data-usepercent^="9"]:not([data-usepercent="9"]),
.label[data-usepercent="100"] { &:extend(.label-danger); }

.usepercent-text[data-usepercent="0"],
.usepercent-text[data-usepercent="1"],
.usepercent-text[data-usepercent="2"],
.usepercent-text[data-usepercent="3"],
.usepercent-text[data-usepercent="4"],
.usepercent-text[data-usepercent="5"],
.usepercent-text[data-usepercent="6"],
.usepercent-text[data-usepercent="7"],
.usepercent-text[data-usepercent="8"],
.usepercent-text[data-usepercent="9"],
.usepercent-text[data-usepercent^="1"]:not([data-usepercent="100"]) { &:extend(.text-success); }

.usepercent-text[data-usepercent^="2"]:not([data-usepercent="2"]),
.usepercent-text[data-usepercent^="3"]:not([data-usepercent="3"]),
.usepercent-text[data-usepercent^="4"]:not([data-usepercent="4"]),
.usepercent-text[data-usepercent^="5"]:not([data-usepercent="5"]),
.usepercent-text[data-usepercent^="6"]:not([data-usepercent="6"]),
.usepercent-text[data-usepercent^="7"]:not([data-usepercent="7"]) { &:extend(.text-info); }

.usepercent-text[data-usepercent^="8"]:not([data-usepercent="8"]) { &:extend(.text-warning); }
.usepercent-text[data-usepercent^="9"]:not([data-usepercent="9"]),
.usepercent-text[data-usepercent="100"] { &:extend(.text-danger); }

.usepercent-text-inverse[data-usepercent="0"],
.usepercent-text-inverse[data-usepercent="1"],
.usepercent-text-inverse[data-usepercent="2"],
.usepercent-text-inverse[data-usepercent="3"],
.usepercent-text-inverse[data-usepercent="4"],
.usepercent-text-inverse[data-usepercent="5"],
.usepercent-text-inverse[data-usepercent="6"],
.usepercent-text-inverse[data-usepercent="7"],
.usepercent-text-inverse[data-usepercent="8"],
.usepercent-text-inverse[data-usepercent="9"] { &:extend(.text-danger); }
.usepercent-text-inverse[data-usepercent^="1"]:not([data-usepercent="1"]):not([data-usepercent="100"]) { &:extend(.text-warning); }

.usepercent-text-inverse[data-usepercent^="2"]:not([data-usepercent="2"]),
.usepercent-text-inverse[data-usepercent^="3"]:not([data-usepercent="3"]),
.usepercent-text-inverse[data-usepercent^="4"]:not([data-usepercent="4"]),
.usepercent-text-inverse[data-usepercent^="5"]:not([data-usepercent="5"]),
.usepercent-text-inverse[data-usepercent^="6"]:not([data-usepercent="6"]),
.usepercent-text-inverse[data-usepercent^="7"]:not([data-usepercent="7"]),
.usepercent-text-inverse[data-usepercent^="8"]:not([data-usepercent="8"]) { &:extend(.text-info); }
.usepercent-text-inverse[data-usepercent^="9"]:not([data-usepercent="9"]),
.usepercent-text-inverse[data-usepercent="100"] { &:extend(.text-success); }
