define(function(require) {
	var React = require('react');
	return {
		mem_rows:        function(Data, $mem)  { return ({{template "defines::define_memrows"         .}}); },
		panelmem:        function(Data, rows)  { return ({{template "defines::define_panelmem"        setrows . `rows`}}); },

		ifbytes_rows:    function(Data, $if)   { return ({{template "defines::define_ifbytes_rows"    .}}); },
		iferrors_rows:   function(Data, $if)   { return ({{template "defines::define_iferrors_rows"   .}}); },
		ifpackets_rows:  function(Data, $if)   { return ({{template "defines::define_ifpackets_rows"  .}}); },
		panelif:         function(Data,r1,r2,r3){ return ({{template "defines::define_panelif"         setrows . `r1 r2 r3`}}); },

		cpu_rows:        function(Data, $core) { return ({{template "defines::define_cpurows"         .}}); },
		panelcpu:        function(Data, rows)  { return ({{template "defines::define_panelcpu"        setrows . `rows`}}); },

		dfbytes_rows:    function(Data, $disk) { return ({{template "defines::define_dfbytes_rows"    .}}); },
		dfinodes_rows:   function(Data, $disk) { return ({{template "defines::define_dfinodes_rows"   .}}); },
		paneldf:         function(Data,r1,r2)  { return ({{template "defines::define_paneldf"         setrows . `r1 r2`}}); },

		ps_rows:         function(Data, $proc) { return ({{template "defines::define_psrows"          .}}); },
		panelps:         function(Data, rows)  { return ({{template "defines::define_panelps"         setrows . `rows`}}); },

		vagrant_rows:    function(Data, $mach) { return ({{template "defines::define_vgrows"          .}}); },
		vagrant_error:   function(Data)        { return ({{template "defines::define_vgerror"         .}}); },
		panelvg:         function(Data, rows)  { return ({{template "defines::define_panelvg"         setrows . `rows`}}); }
	};
});
