= content define_usepercent
  | <span {{.ClassAttr}}>{{.Value}}%</span>

= content define_clip
  {{$C := or .CLASSNAME "class"}}
  | <input {{.IDAttr}}  {{$C}}="collapse-checkbox" type="checkbox" aria-hidden="true" hidden>{{if eq $C "className"}}</input>{{end}}
  | <label {{.ForAttr}} {{$C}}="clip" {{.MWStyleAttr}}>{{.Text}}</label>

= content refresh
  / the {{define "name"} name is defines::"refresh"
  div.input-group.input-group-sm.refresh-group
    span.input-group-addon Refresh
    input.form-control.refresh-input type=text placeholder={{.Default}}{{if ne (json .Default) (json .Period)}} value={{.Period}}{{end}}

= content define_refresh
  div.input-group.input-group-sm.refresh-group
    span.input-group-addon Refresh
    | <input {{class}}="form-control refresh-input" type="text" placeholder={{.Default}}{{if ne (json .Default) (json .Period)}} value={{.Period}}{{end}}></input>

= content define_ifbytes_rows
  {{with .OVERRIDE}}{{.}}{{else}}
    {{$F := or .HTMLFOR "for"}}
    {{$C := or .CLASSNAME "class"}}
    {{range $if := .Data.IFbytes.List}}
      | <tr{{key $C "ifbytes-rowby-name" $if.Name}}>
      td {{template "defines::define_clip" (clip $F $C 12 "if-bytes-name"   $if.Name)}}
      td.text-right {{$if.DeltaIn}}
      td.text-right {{$if.DeltaOut}}
      td.text-right {{$if.In}}
      td.text-right {{$if.Out}}
      | </tr>
    {{end}}
  {{end}}

= content define_iferrors_rows
  {{with .OVERRIDE}}{{.}}{{else}}
    {{$F := or .HTMLFOR "for"}}
    {{$C := or .CLASSNAME "class"}}
    {{range $if := .Data.IFerrors.List}}
      | <tr{{key $C "iferrors-rowby-name" $if.Name}}>
      td {{template "defines::define_clip" (clip $F $C 12 "if-errors-name"  $if.Name)}}
      td.text-right {{$if.DeltaIn}}
      td.text-right {{$if.DeltaOut}}
      td.text-right {{$if.In}}
      td.text-right {{$if.Out}}
      | </tr>
    {{end}}
  {{end}}

= content define_ifpackets_rows
  {{with .OVERRIDE}}{{.}}{{else}}
    {{$F := or .HTMLFOR "for"}}
    {{$C := or .CLASSNAME "class"}}
    {{range $if := .Data.IFpackets.List}}
      | <tr{{key $C "ifpackets-rowby-name" $if.Name}}>
      td {{template "defines::define_clip" (clip $F $C 12 "if-packets-name" $if.Name)}}
      td.text-right {{$if.DeltaIn}}
      td.text-right {{$if.DeltaOut}}
      td.text-right {{$if.In}}
      td.text-right {{$if.Out}}
      | </tr>
    {{end}}
  {{end}}

= content define_ifbytes_table
  table.table1.stripe-table
    thead
      tr
        th Interface
        th.text-right.nowrap title="BITS per second" In
          span.unit
            i b
            | ps
        th.text-right.nowrap title="BITS per second" Out
          span.unit
            i b
            | ps
        th.text-right.nowrap title="total BYTES modulo 4G" In
          span.unit
            i B
            | %4G
        th.text-right.nowrap title="total BYTES modulo 4G" Out
          span.unit
            i B
            | %4G
    tbody
      {{template "defines::define_ifbytes_rows" .}}

= content define_ifpackets_table
  table.table1.stripe-table
    thead
      tr
        th Interface
        th.text-right.nowrap title="per second" In&nbsp;
          span.unit ps
        th.text-right.nowrap title="per second" Out&nbsp;
          span.unit ps
        th.text-right.nowrap title="total modulo 4G" In&nbsp;
          span.unit %4G
        th.text-right.nowrap title="total modulo 4G" Out&nbsp;
          span.unit %4G
    tbody
      {{template "defines::define_ifpackets_rows" .}}

= content define_iferrors_table
  table.table1.stripe-table
    thead
      tr
        th Interface
        th.text-right.nowrap title="per second" In&nbsp;
          span.unit ps
        th.text-right.nowrap title="per second" Out&nbsp;
          span.unit ps
        th.text-right.nowrap title="modulo 4G" In&nbsp;
          span.unit %4G
        th.text-right.nowrap title="modulo 4G" Out&nbsp;
          span.unit %4G
    tbody
      {{template "defines::define_iferrors_rows" .}}

= content define_dfbytes_rows
  {{with .OVERRIDE}}{{.}}{{else}}
    {{$F := or .HTMLFOR "for"}}
    {{$C := or .CLASSNAME "class"}}
    {{range $disk := .Data.DFbytes.List}}
      | <tr{{key $C "dfbytes-rowby-dirname" $disk.DirName}}>
      td.nowrap {{template "defines::define_clip" (clip $F $C 12 "df-bytes-devname"  $disk.DevName)}}
      td.nowrap {{template "defines::define_clip" (clip $F $C  6 "df-bytes-dirname"  $disk.DirName)}}
      td.text-right {{$disk.Avail}}
      td.text-right {{$disk.Used}}&nbsp;
        sup {{template "defines::define_usepercent" (usepercent $C $disk.UsePercent)}}
      td.text-right {{$disk.Total}}
      | </tr>
    {{end}}
  {{end}}

= content define_dfinodes_rows
  {{with .OVERRIDE}}{{.}}{{else}}
    {{$F := or .HTMLFOR "for"}}
    {{$C := or .CLASSNAME "class"}}
    {{range $disk := .Data.DFinodes.List}}
      | <tr{{key $C "dfinodes-rowby-dirname" $disk.DirName}}>
      td.nowrap {{template "defines::define_clip" (clip $F $C 12 "df-inodes-devname" $disk.DevName)}}
      td.nowrap {{template "defines::define_clip" (clip $F $C  6 "df-inodes-devname" $disk.DirName)}}
      td.text-right {{$disk.Ifree}}
      td.text-right {{$disk.Iused}}&nbsp;
        sup {{template "defines::define_usepercent" (usepercent $C $disk.IusePercent)}}
      td.text-right {{$disk.Inodes}}
      | </tr>
    {{end}}
  {{end}}

= content thdroplink
  {{$C := or .CLASSNAME "class"}}
  th {{$C}}="header {{.AlignClass}}" <a href={{.Href}} {{$C}}={{.Class}}>{{.Text}}<span {{$C}}={{.CaretClass}}></span></a>

= content define_dfbytes_table
  {{$C := or .CLASSNAME "class"}}
  table.table1.stripe-table
    thead
      tr
        {{template "defines::thdroplink" droplink $C .Data.Links.Params.ENUM.df "FS" ""}}
        {{template "defines::thdroplink" droplink $C .Data.Links.Params.ENUM.df "MP" ""}}
        {{template "defines::thdroplink" droplink $C .Data.Links.Params.ENUM.df "AVAIL"}}
        {{template "defines::thdroplink" droplink $C .Data.Links.Params.ENUM.df "USED"}}
        {{template "defines::thdroplink" droplink $C .Data.Links.Params.ENUM.df "TOTAL"}}
    tbody
      {{template "defines::define_dfbytes_rows" .}}

= content define_dfinodes_table
  table.table1.stripe-table
    thead
      tr
        th.header Device
        th.header Mounted
        th.header.text-right Avail
        th.header.text-right Used
        th.header.text-right Total
    tbody
      {{template "defines::define_dfinodes_rows" .}}

= content define_memrows
  {{with .OVERRIDE}}{{.}}{{else}}
    {{$C := or .CLASSNAME "class"}}
    {{range $i, $mem := .Data.MEM.List}}
      | <tr{{key $C "mem-rowby-kind" $mem.Kind}}>
      td {{$mem.Kind}}
      td.text-right {{$mem.Free}}
      td.text-right {{$mem.Used}}&nbsp;
        sup {{template "defines::define_usepercent" (usepercent $C $mem.UsePercent)}}
      td.text-right {{$mem.Total}}
      | </tr>
    {{end}}
  {{end}}

= content define_memtable
  table.table1.stripe-table
    thead
      tr
        th
        th.text-right Free
        th.text-right Used
        th.text-right Total
    tbody
      {{template "defines::define_memrows" .}}

= content define_blockmem
  {{$F := or .HTMLFOR "for"}}
  {{$C := or .CLASSNAME "class"}}
  div.panel1
    label.collapse-label.panel-heading.btn-block#for-memconfig {{$F}}="dummymemconfigcheckbox"
      | <a {{ifClassAttr .Data.Links.Params.BOOL.showconfigmem "btn-header-block active" "btn-header-block"}} {{toggleHrefAttr .Data.Links.Params.BOOL.showconfigmem}}>Memory</a>
      input.collapse-checkbox#dummymemconfigcheckbox type=checkbox aria-hidden=true hidden=
    input.collapse-checkbox type=checkbox aria-hidden=true hidden=

    div
      | <div id="memconfig" {{ifClassAttr .Data.Links.Params.BOOL.showconfigmem "" "collapse-hidden"}}>
      form.horizontal-form.border-bottom-form
        div.form-group-padded
          div.btn-group.btn-group-sm data-toggle=buttons
            label.btn.btn-default.collapse-label for-sel=#mem
              input type=checkbox
              | Hidden
            | <label {{ifClassAttr .Data.Links.Params.BOOL.hideswap "btn btn-default active" "btn btn-default"}} href="#hideswap">
            input type=checkbox
            | Hide swap
            | </label>

        div.form-group-padded
          {{template "defines::define_refresh" refresh .Data.Client.RefreshMEM}}
      | </div>

    div
      div#mem {{$C}}="{{if eq "true" (json .Data.Client.HideMEM)}}collapse-hidden{{end}}"
        {{template "defines::define_memtable" .}}

= content define_cpurows
  {{with .OVERRIDE}}{{.}}{{else}}
    {{$C := or .CLASSNAME "class"}}
    {{range $i, $core := .Data.CPU.List}}
      | <tr{{key $C "cpu-rowby-N" $core.N}}>
      td.text-right.nowrap {{$core.N}}
      / td.text-right {{$core.UserSpark}}
      td.text-right <span {{$C}}={{$core.UserClass}}>{{$core.User}}</span>
      td.text-right <span {{$C}}={{$core.SysClass}} >{{$core.Sys}}</span>
      td.text-right <span {{$C}}={{$core.IdleClass}}>{{$core.Idle}}</span>
      | </tr>
    {{end}}
  {{end}}

= content define_cputable
  table.table1.stripe-table
    thead
      tr
        th
        th.text-right.nowrap User
          span.unit %
        th.text-right.nowrap Sys
          span.unit %
        th.text-right.nowrap Idle
          span.unit %
    tbody
      {{template "defines::define_cpurows" .}}

= content define_psrows
  {{with .OVERRIDE}}{{.}}{{else}}
    {{$F := or .HTMLFOR "for"}}
    {{$C := or .CLASSNAME "class"}}
    {{range $proc := .Data.PStable.List}}
      | <tr{{key $C "ps-rowby-pid" $proc.PIDstring}}>
      td.text-right  {{$proc.PID}}
      td.text-right  {{$proc.UID}}
      td             {{template "defines::define_clip" (clip $F $C 12 "psuser-pid" $proc.PIDstring $proc.User)}}
      td.text-right  {{$proc.Priority}}
      td.text-right  {{$proc.Nice}}
      td.text-right  {{$proc.Size}}
      td.text-right  {{$proc.Resident}}
      td.text-center {{$proc.Time}}
      td.nowrap      {{template "defines::define_clip" (clip $F $C 42 "psname-pid" $proc.PIDstring $proc.Name)}}
      | </tr>
    {{end}}
  {{end}}

= content define_pstable
  {{$C := or .CLASSNAME "class"}}
  table.table2.stripe-table
    thead
      tr
        {{template "defines::thdroplink" droplink $C .Data.Links.Params.ENUM.ps "PID"}}
        {{template "defines::thdroplink" droplink $C .Data.Links.Params.ENUM.ps "UID"}}
        {{template "defines::thdroplink" droplink $C .Data.Links.Params.ENUM.ps "USER" ""}}
        {{template "defines::thdroplink" droplink $C .Data.Links.Params.ENUM.ps "PRI"}}
        {{template "defines::thdroplink" droplink $C .Data.Links.Params.ENUM.ps "NICE"}}
        {{template "defines::thdroplink" droplink $C .Data.Links.Params.ENUM.ps "VIRT"}}
        {{template "defines::thdroplink" droplink $C .Data.Links.Params.ENUM.ps "RES"}}
        {{template "defines::thdroplink" droplink $C .Data.Links.Params.ENUM.ps "TIME" "center"}}
        {{template "defines::thdroplink" droplink $C .Data.Links.Params.ENUM.ps "NAME" ""}}
    tbody
      {{template "defines::define_psrows" .}}

= content define_vgerror
  tr key="vgerror"
    td colspan=5 {{.Data.VagrantError}}

= content define_vgswitch
  {{with .OVERRIDE}}{{.}}{{else}}
    {{if eq "true" (json .Data.VagrantErrord)}}
      {{template "defines::define_vgerror" .}}
    {{else}}
      {{template "defines::define_vgrows" .}}
    {{end}}
  {{end}}

= content define_vgrows
  {{$F := or .HTMLFOR "for"}}
  {{$C := or .CLASSNAME "class"}}
  {{range $mach := .Data.VagrantMachines.List}}
    | <tr{{key $C "vagrant-rowby-uuid" $mach.UUID}}>
    td        {{template "defines::define_clip" (clip $F $C  7 "vagrant-uuid"     $mach.UUID)}}
    td        {{$mach.Name}}
    td        {{$mach.Provider}}
    td        {{template "defines::define_clip" (clip $F $C  8 "vagrant-state"    $mach.UUID $mach.State)}}
    td        {{template "defines::define_clip" (clip $F $C 50 "vagrant-filepath" $mach.UUID $mach.Vagrantfile_path)}}
    | </tr>
  {{end}}

= content define_vgtable
  table.table1.stripe-table#vgtable
    thead
      tr
        th id
        th name
        th provider
        th state
        th directory
    tbody
      {{template "defines::define_vgswitch" .}}
