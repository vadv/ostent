[[/* -*- indent-tabs-mode: nil -*- */]]

[[define "define_usepercent"]]
  span[class=Class] #{Value}%
[[end]]

[[define "define_tooltipable"]]
  span
    span.tooltipable
      //- [data-toggle="tooltip"|"popover"] // done in js now
      [data-placement="auto left"]
      [data-content=Full]
      | #{Short}
    span.tooltipabledots.inlinecode
      [data-placement="auto left"]
      [data-content=Full]
      | ...
[[end]]

[[define "define_ifsrows"]]
  each $if in Data.InterfacesBytes.List
    |<tr key=#{$if.NameKey}>
      td #{$if.NameHTML}
      td.digital #{$if.DeltaIn}
      td.digital #{$if.DeltaOut}
      td.digital #{$if.In}
      td.digital #{$if.Out}
    |</tr>
[[end]]
[[define "define_ifserrorsrows"]]
  each $if in Data.InterfacesErrors.List
    |<tr key=#{$if.NameKey}>
      td #{$if.NameHTML}
      td.digital #{$if.DeltaIn}
      td.digital #{$if.DeltaOut}
      td.digital #{$if.In}
      td.digital #{$if.Out}
    |</tr>
[[end]]
[[define "define_ifspacketsrows"]]
  each $if in Data.InterfacesPackets.List
    |<tr key=#{$if.NameKey}>
      td #{$if.NameHTML}
      td.digital #{$if.DeltaIn}
      td.digital #{$if.DeltaOut}
      td.digital #{$if.In}
      td.digital #{$if.Out}
    |</tr>
[[end]]

[[define "define_ifstable"]]
  table.table1.stripe-table
    thead
      tr
        th Interface
        th.digital.nobr In
          span.unit[title="bits per second"]
            b b
            | ps
        th.digital.nobr Out
          span.unit[title="bits per second"]
            b b
            | ps
        th.digital.nobr In
          span.unit[title="total modulo 4G"] %4G
        th.digital.nobr Out
          span.unit[title="total modulo 4G"] %4G
    tbody
      [[with GET "bracket_ifsrows"]][[.]][[DEL "bracket_ifsrows"]][[else]]
        [[template "define_ifsrows" .]][[end]]
[[end]]
[[define "define_ifspacketstable"]]
  table.table1.stripe-table
    thead
      tr
        th Interface
        th.digital.nobr In&nbsp;
          span.unit[title="per second"] ps
        th.digital.nobr Out&nbsp;
          span.unit[title="per second"] ps
        th.digital.nobr In
          span.unit[title="modulo 4G"] %4G
        th.digital.nobr Out
          span.unit[title="modulo 4G"] %4G
    tbody
      [[with GET "bracket_ifsrows"]][[.]][[DEL "bracket_ifsrows"]][[else]]
        [[template "define_ifspacketsrows" .]][[end]]
[[end]]
[[define "define_ifserrorstable"]]
  table.table1.stripe-table
    thead
      tr
        th Interface
        th.digital.nobr In&nbsp;
          span.unit[title="per second"] ps
        th.digital.nobr Out&nbsp;
          span.unit[title="per second"] ps
        th.digital.nobr In
          span.unit[title="modulo 4G"] %4G
        th.digital.nobr Out
          span.unit[title="modulo 4G"] %4G
    tbody
      [[with GET "bracket_ifsrows"]][[.]][[DEL "bracket_ifsrows"]][[else]]
        [[template "define_ifserrorsrows" .]][[end]]
[[end]]

[[define "define_dfrows"]]
  each $disk in Data.DisksinBytes.List
    | <tr key=#{$disk.DirNameKey}>

      td.nobr #{$disk.DiskNameHTML}
      td.nobr #{$disk.DirNameHTML}
      td.digital #{$disk.Avail}
      td.digital #{$disk.Used}&nbsp;
        sup <span class=#{$disk.UsePercentClass}>#{$disk.UsePercent}%</span>
      td.digital #{$disk.Total}
    | </tr>
[[end]]

[[define "define_dftable"]]
  table.table1.stripe-table
    thead
      tr
        $L = Data.DiskLinks
        th.header         <a href=#{$L.DiskName.Href} class=#{$L.DiskName.Class}>Device<span  class=#{$L.DiskName.CaretClass} /></a>
        th.header         <a href=#{$L.DirName.Href}  class=#{$L.DirName.Class} >Mounted<span class=#{$L.DirName.CaretClass}  /></a>
        th.header.digital <a href=#{$L.Avail.Href}    class=#{$L.Avail.Class}   >Avail<span   class=#{$L.Avail.CaretClass}    /></a>
        th.header.digital <a href=#{$L.Used.Href}     class=#{$L.Used.Class}    >Used<span    class=#{$L.Used.CaretClass}     /></a>
        th.header.digital <a href=#{$L.Total.Href}    class=#{$L.Total.Class}   >Total<span   class=#{$L.Total.CaretClass}    /></a>
    tbody
      [[with GET "bracket_dfrows"]][[.]][[DEL "bracket_dfrows"]][[else]]
        [[template "define_dfrows" .]][[end]]
[[end]]

[[define "define_dirows"]]
  each $disk in Data.DisksinInodes.List
    | <tr key=#{$disk.DirNameKey}>

      td.nobr #{$disk.DiskNameHTML}
      td.nobr #{$disk.DirNameHTML}
      td.digital #{$disk.Ifree}
      td.digital #{$disk.Iused}&nbsp;
        sup <span class=#{$disk.IusePercentClass}>#{$disk.IusePercent}%</span>
      td.digital #{$disk.Inodes}
    | </tr>
[[end]]

[[define "define_ditable"]]
  table.table1.stripe-table
    thead
      tr
        th.header Device
        th.header Mounted
        th.header.digital Avail
        th.header.digital Used
        th.header.digital Total
    tbody
      [[with GET "bracket_dirows"]][[.]][[DEL "bracket_dirows"]][[else]]
        [[template "define_dirows" .]][[end]]
[[end]]

[[define "define_cpurows"]]
each $i, $core in Data.CPU.List
    |<tr key=#{$core.N}>
      td.digital.nobr #{$core.N}
      td.digital <span id="#{"core" + $i + ".User"}" class=#{$core.UserClass}>#{$core.User}</span>
      td.digital <span id="#{"core" + $i + ".Sys"}"  class=#{$core.SysClass}>#{$core.Sys}</span>
      td.digital <span id="#{"core" + $i + ".Idle"}" class=#{$core.IdleClass}>#{$core.Idle}</span>
    |</tr>
[[end]]

[[define "define_cputable"]]
  table.table1.stripe-table
    thead
      tr
        th
        th.digital.nobr User
          span.unit %
        th.digital.nobr Sys
          span.unit %
        th.digital.nobr Idle
          span.unit %
    tbody
      [[with GET "bracket_cpurows"]][[.]][[DEL "bracket_cpurows"]][[else]]
        [[template "define_cpurows" .]][[end]]
[[end]]

[[define "define_psrows"]]
  each $proc in Data.ProcTable.List
    | <tr key=#{$proc.PID}>
      td.digital #{$proc.PID}
      td.digital #{$proc.UserHTML}
      td.digital #{$proc.Priority}
      td.digital #{$proc.Nice}
      td.digital #{$proc.Size}
      td.digital #{$proc.Resident}
      td.center #{$proc.Time}
      td.nobr #{$proc.NameHTML}
    | </tr>
[[end]]

[[define "define_pstable"]]
  table.table2.stripe-table
    thead
      tr
        $L = Data.ProcTable.Links
        th.header.digital <a href=#{$L.PID.Href}      class=#{$L.PID.Class}     >PID<span     class=#{$L.PID.CaretClass}      /></a>
        th.header.digital <a href=#{$L.User.Href}     class=#{$L.User.Class}    >USER<span    class=#{$L.User.CaretClass}     /></a>
        th.header.digital <a href=#{$L.Priority.Href} class=#{$L.Priority.Class}>PR<span      class=#{$L.Priority.CaretClass} /></a>
        th.header.digital <a href=#{$L.Nice.Href}     class=#{$L.Nice.Class}    >NI<span      class=#{$L.Nice.CaretClass}     /></a>
        th.header.digital <a href=#{$L.Size.Href}     class=#{$L.Size.Class}    >VIRT<span    class=#{$L.Size.CaretClass}     /></a>
        th.header.digital <a href=#{$L.Resident.Href} class=#{$L.Resident.Class}>RES<span     class=#{$L.Resident.CaretClass} /></a>
        th.header.center  <a href=#{$L.Time.Href}     class=#{$L.Time.Class}    >TIME<span    class=#{$L.Time.CaretClass}     /></a>
        th.header         <a href=#{$L.Name.Href}     class=#{$L.Name.Class}    >COMMAND<span class=#{$L.Name.CaretClass}     /></a>

    tbody#procrows
      [[with GET "bracket_psrows"]][[.]][[DEL "bracket_psrows"]][[else]]
        [[template "define_psrows" .]][[end]]
[[end]]
