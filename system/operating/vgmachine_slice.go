// Generated by: main
// TypeWriter: slice
// Directive: +gen on Vgmachine

package operating

import "sort"

// VgmachineSlice is a slice of type Vgmachine. Use it where you would use []Vgmachine.
type VgmachineSlice []Vgmachine

// VgmachineOrder is an aux type for sorting.
type VgmachineOrder struct {
	VgmachineSlice
	LessFunc func(Vgmachine, Vgmachine) bool
}

// Len is there to satisfy sort.Interface.
func (xo VgmachineOrder) Len() int {
	return len(xo.VgmachineSlice)
}

// Swap is there to satisfy sort.Interface.
func (xo VgmachineOrder) Swap(i, j int) {
	xo.VgmachineSlice[i], xo.VgmachineSlice[j] = xo.VgmachineSlice[j], xo.VgmachineSlice[i]
}

// Less is there to satisfy sort.Interface.
func (xo VgmachineOrder) Less(i, j int) bool {
	return xo.LessFunc(xo.VgmachineSlice[i], xo.VgmachineSlice[j])
}

// SortSortBy sorts rcv doing sort.Sort.
// Order determined by a func defining ‘less’.
// See also: http://clipperhouse.github.io/gen/#SortBy
func (rcv VgmachineSlice) SortSortBy(less func(Vgmachine, Vgmachine) bool) {
	sort.Sort(VgmachineOrder{rcv, less})
}

// StableSortBy sorts rcv doing sort.Stable.
// Order determined by a func defining ‘less’.
// See also: http://clipperhouse.github.io/gen/#SortBy
func (rcv VgmachineSlice) StableSortBy(less func(Vgmachine, Vgmachine) bool) {
	sort.Stable(VgmachineOrder{rcv, less})
}
